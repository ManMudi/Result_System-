package iki;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.text.html.HTMLDocument.Iterator;

import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.itextpdf.io.font.FontConstants;
import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.colors.DeviceRgb;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.borders.Border3D;
import com.itextpdf.layout.element.AreaBreak;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.HorizontalAlignment;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import com.itextpdf.layout.property.VerticalAlignment;

import net.proteanit.sql.DbUtils;

public class Academic extends JFrame{

	private static final long serialVersionUID = 1L;
	private static JLabel date;
	private static JLabel empty;
	private static JLabel time;  
	private static JLabel kappa;
	private static JLabel hash;
	private JPanel p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61;
	private JTabbedPane tab;
	private JTextField field,field1,t0,t1,t2,t3,t10,t11,t12,t13,ta1,ta2,ta3,ta4,ta5,ta11,ta12,ta13,ta14,ta15,tex1,tex2,tex3,tex4,tex5,tex6,tex7,tex8,tex9,tex10,tex11,tex12,t56;
	private JLabel label,label1,l0,l1,l2,l3,l4,l5,l6,l16,l10,l11,l12,l13,l14,l15,la1,la2,la3,la4,la5,la6,la7,la11,la12,la13,la14,la15,la16,la17,lab1,lab2,lab3,lab4,lab5,lab6,lab7,lab8,lab9,lab10,lab11,lab12,l56;
	private JLabel labe1,labe2,labe3,labe4,labe5,labe6,labe7,labe8,labe9,labe10,labe11,labe12,labe13,labe14,label40,label41,label42,label43,label44,label45,label46,label47,label48,label49;
	private JTextField te1,te2,te3,te4,te5,te6,te7,te8,te9,te10,te11,te12,te13,te14;
	private JPanel pa1,pa2,pa3,pa4,pa5,pa6,pa7,pa8,pa9,pa10;
	@SuppressWarnings("rawtypes")
	private JComboBox<String> t5,t4,t14,t15,ta6,ta7,ta16,ta17,t6,t16,t27,t28,t29,t30,t31,box40,box41,box42,box43,box44,box45,box46,t47,t48,t49,t50,t51,box47,box48;
	private JLabel lab13,lab14,lab15,lab16,lab17,lab18,lab19,lab20,lab21,lab22,lab23,lab24,lab25,lab26,lab27,lab28,lab29,lab30,lab31,lab32,lab33,lab34,lab35,lab36,lab37,ll01,ll02,ll03,ll04,ll05,ll06,ll7,ll8,ll9,ll10,ll11,ll12,lab47,lab48,lab49,lab50,lab51;
	private JTextField  tex13,tex14,tex15,tex16,tex17,tex18,tex19,tex20,tex21,tex22,tex23,tex24,tex25,tex26,tex32,tex33,tex34,tex35,tex36,tex37,text1,text2,text3,text4,text5,text6,text7,text8,text9,text10,text11,text12 ;
	private String[]name1={"ADMIN","TEACHER","ACADEMIC"};
	private String[]name2={"All","PHYSICS","CHEMISTRY","MATH","GEOGRAPHY","BIOLOGY"};
	private String[]name3={"M","F"};
	private String[]name4={"FORM I","FORM II","FORM III","FORM IV","COMPLETED"};
	private JButton b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b23,b22,b26,b24,b25,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,ba1,ba2,ba3,ba4;
	private JButton button1,button2,button3,button4;
	private JTable table,table1,table2,table3,table4,table5,table6;
	private JScrollPane pane,pane1,pane2,pane3,pane4,pane5,pane6,pane7;
	private Connection con;
	private PreparedStatement ps;
	private ResultSet rs,rs1,rs2,rs3,rs4,rs5,rs6,rs7;
	private SimpleDateFormat yy;
	private  Calendar timer;
    private Table mudi20,mudi21,mudi2;
    private String value="";
    private JTextArea area1;
	   
    static XSSFRow row;
	

	public Academic(String name,String subject,String somo) {
		
	

		super("Result System      |       welcome : :   "+name);
		try {
			for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (Exception e) {

		}

   connect();
		
    area1=new JTextArea(22,56);
	area1.setEditable(true);
	area1.setFont(new Font("verdana",Font.PLAIN,12));
	area1.setLineWrap(true);
	area1.setWrapStyleWord(true);
	

	

		table = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 14;
			}
		};
		pane=new JScrollPane(table);

		table1=new JTable();
		table1 = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 14;
			}
		};
		pane1=new JScrollPane(table1);

		table2 = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 4;
			}
		};

		pane2=new JScrollPane(table2);

		table3 = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 4;
			}
		};
		pane3=new JScrollPane(table3);

		table4 = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 4;
			}
		};
		pane4=new JScrollPane(table4);

		table5 = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 4;
			}
		};
		pane5=new JScrollPane(table5);

		table6=new JTable();


		table6 = new JTable() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 2;
			}
		};
		pane6=new JScrollPane(table6);




		table.getTableHeader().setReorderingAllowed(false);
		table1.getTableHeader().setReorderingAllowed(false);
		table2.getTableHeader().setReorderingAllowed(false);
		table3.getTableHeader().setReorderingAllowed(false);
		table4.getTableHeader().setReorderingAllowed(false);
		table5.getTableHeader().setReorderingAllowed(false);
		table6.getTableHeader().setReorderingAllowed(false);
		
		button1=new JButton("Form I");button1.setFont(new Font("verdana",Font.BOLD,12));button1.setBackground(Color.pink);button1.setForeground(Color.blue);
		button2=new JButton("Form II");button2.setFont(new Font("verdana",Font.BOLD,12));button2.setBackground(Color.pink);button2.setForeground(Color.blue);
		button3=new JButton("Form III");button3.setFont(new Font("verdana",Font.BOLD,12));button3.setBackground(Color.pink);button3.setForeground(Color.blue);
		button4=new JButton("Form IV");button4.setFont(new Font("verdana",Font.BOLD,12));button4.setBackground(Color.pink);button4.setForeground(Color.blue);
		

		


		p1=new JPanel();
		p2=new JPanel();
		p3=new JPanel();
		p4=new JPanel();
		p5=new JPanel();
		p6=new JPanel();
		p7=new JPanel();
		p8=new JPanel();
		p9=new JPanel();
		p10=new JPanel();
		p11=new JPanel();
		p12=new JPanel();
		p13=new JPanel();
		p14=new JPanel();
		p15=new JPanel();
		p16=new JPanel();
		p17=new JPanel();
		p18=new JPanel();
		p19=new JPanel();
		p20=new JPanel();
		p21=new JPanel();
		p22=new JPanel();
		p23=new JPanel();
		p24=new JPanel();
		p25=new JPanel();
		p26=new JPanel();
		p27=new JPanel();
		p28=new JPanel();
		p29=new JPanel();
		p30=new JPanel();
		p31=new JPanel();
		p32=new JPanel();
		p33=new JPanel();
		p34=new JPanel();
		p35=new JPanel();
		p36=new JPanel();
		p37=new JPanel();
		p38=new JPanel();
		p39=new JPanel();
		p40=new JPanel();
		p41=new JPanel();
		p42=new JPanel();
		p43=new JPanel();
		p44=new JPanel();
		p45=new JPanel();
		p46=new JPanel();
		p47=new JPanel();
		p48=new JPanel();
		p49=new JPanel();
		p50=new JPanel();
		p51=new JPanel();
		p52=new JPanel();
		p53=new JPanel();
		p54=new JPanel();
		p55=new JPanel();
		p56=new JPanel();
		p57=new JPanel();
		p58=new JPanel();
		p59=new JPanel();
		p60=new JPanel();
		pa1=new JPanel();
		pa2=new JPanel();
		pa3=new JPanel();
		pa4=new JPanel();
		pa5=new JPanel();
		pa6=new JPanel();
		pa7=new JPanel();
		pa8=new JPanel();
		pa9=new JPanel();
		pa10=new JPanel();
		p56=new JPanel();
		p57=new JPanel();
		p58=new JPanel();
		p59=new JPanel();
		p60=new JPanel();
		p61=new JPanel();
		
		pane7=new JScrollPane(area1);
		p57.add(pane7);
		


		Border in=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border ou=BorderFactory.createTitledBorder("");
		Border tin=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border tou=BorderFactory.createTitledBorder("TERM INFORMATION");
		Border ein=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border eou=BorderFactory.createTitledBorder("EXAM INFORMATION");
		Border sin=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border sou=BorderFactory.createTitledBorder("SUBJECT INFORMATION  O-LEVEL");
		Border gin=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border gou=BorderFactory.createTitledBorder("GRADE INFORMATION O-LEVEL");
		Border gain=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border gaou=BorderFactory.createTitledBorder("GRADE INFORMATION A-LEVEL");
		Border ain=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border aou=BorderFactory.createTitledBorder("SUBJECT INFORMATION  A-LEVEL");
		Border roi=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border rou=BorderFactory.createTitledBorder("REMARKS   O-LEVEL");
		Border rai=BorderFactory.createEmptyBorder(2,5,2,5);//p6.setBackground(Color.BLACK);
		Border rao=BorderFactory.createTitledBorder("REMARKS   O-LEVEL");

		pa2.setBorder(BorderFactory.createCompoundBorder(roi, rou));
		pa3.setBorder(BorderFactory.createCompoundBorder(rai, rao));
		p8.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p9.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p10.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p7.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p5.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p16.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p17.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p18.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p13.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p15.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p27.setBorder(BorderFactory.createCompoundBorder(gin, gou));
		p28.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p23.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p24.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p37.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p38.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p35.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p36.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p29.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p21.setBorder(BorderFactory.createCompoundBorder(sin, sou));//p21.setBackground(Color.pink);
		p34.setBorder(BorderFactory.createCompoundBorder(tin, tou));
		p33.setBorder(BorderFactory.createCompoundBorder(ein, eou));
		p32.setBorder(BorderFactory.createCompoundBorder(ain, aou));//p32.setBackground(Color.red);
		p44.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p49.setBorder(BorderFactory.createCompoundBorder(gain, gaou));
		p45.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p50.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p51.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p54.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p55.setBorder(BorderFactory.createCompoundBorder(in, ou));
		pa4.setBorder(BorderFactory.createCompoundBorder(in, ou));
		pa5.setBorder(BorderFactory.createCompoundBorder(in, ou));
		pa6.setBorder(BorderFactory.createCompoundBorder(in, ou));
		pa7.setBorder(BorderFactory.createCompoundBorder(in, ou));
		p59.setBorder(BorderFactory.createCompoundBorder(in, ou));

		tab=new JTabbedPane();add(tab);
		//tab.addTab("Account Information",null, p1,"Account Information");
	//	tab.addTab("O-Level Student",null, p2,"Student Information");
		//tab.addTab("A-Level Student",null, p20,"Student Information");
	//	tab.addTab("Subject Information",null, p19,"Subject Information");
	//	tab.addTab("Exam & Term ",null, p52,"Exam & Term");
		tab.addTab("Update Marks",null, p3,"Update Marks");

		p3.setLayout(new BorderLayout());
		p3.add(p54,BorderLayout.NORTH);
		p3.add(p55,BorderLayout.CENTER);

		p19.setLayout(new BorderLayout());
		p19.add(p21,BorderLayout.WEST);
		p19.add(p31,BorderLayout.CENTER);
		p19.add(p22,BorderLayout.EAST);//p22.setBackground(Color.red);

		p22.setLayout(new BorderLayout());
		p22.add(p27,BorderLayout.NORTH);
		p22.add(p49,BorderLayout.SOUTH);

		p49.setLayout(new BorderLayout());
		p49.add(p50,BorderLayout.NORTH);
		p49.add(p51,BorderLayout.CENTER);

		p27.setLayout(new BorderLayout());
		p27.add(p28,BorderLayout.NORTH);//p27.setBackground(Color.red);
		p27.add(p29,BorderLayout.SOUTH);

		p21.setLayout(new BorderLayout());
		p21.add(p23,BorderLayout.NORTH);
		p21.add(p24,BorderLayout.SOUTH);

		p23.setLayout(new BorderLayout());
		p23.add(p25,BorderLayout.WEST);
		p23.add(p26,BorderLayout.EAST);

		p1.setLayout(new BorderLayout());
		p1.add(p4,BorderLayout.WEST);
		p1.add(p5,BorderLayout.CENTER);//p005.setBackground(Color.red);

		p4.setLayout(new BorderLayout());
		p4.add(p6,BorderLayout.NORTH);
		p4.add(p7,BorderLayout.CENTER);

		p6.setLayout(new BorderLayout());
		p6.add(p8,BorderLayout.NORTH);
		p6.add(p9,BorderLayout.CENTER);
		p6.add(p10,BorderLayout.SOUTH);

		p5.setLayout(new BorderLayout());
		p5.add(pane);

		p13.setLayout(new BorderLayout());
		p13.add(pane1);

		p24.setLayout(new BorderLayout());
		p24.add(pane2);

		p36.setLayout(new BorderLayout());
		p36.add(pane3);

		p38.setLayout(new BorderLayout());
		p38.add(pane4);

		p45.setLayout(new BorderLayout());
		p45.add(pane5);

		p55.setLayout(new BorderLayout());
		p55.add(pane6);

		p2.setLayout(new BorderLayout());
		p2.add(p12,BorderLayout.WEST);
		p2.add(p58,BorderLayout.CENTER);//p13.setBackground(Color.red);
		
		p58.setLayout(new BorderLayout());
		p58.add(p13,BorderLayout.CENTER);
		p58.add(p59,BorderLayout.NORTH);

		p12.setLayout(new BorderLayout());
		p12.add(p14,BorderLayout.NORTH);
		p12.add(p15,BorderLayout.CENTER);

		p14.setLayout(new BorderLayout());
		p14.add(p16,BorderLayout.NORTH);
		p14.add(p17,BorderLayout.CENTER);
		p14.add(p18,BorderLayout.SOUTH);//p18.setBackground(Color.red);

		p31.setLayout(new BorderLayout());
		p31.add(p32,BorderLayout.CENTER);

		p32.setLayout(new BorderLayout());
		//p32.add(p33,BorderLayout.SOUTH);
		//p32.add(p34,BorderLayout.NORTH);//p33.setBackground(Color.red);
		p32.add(p44,BorderLayout.NORTH);
		p32.add(p45,BorderLayout.CENTER);

		p44.setLayout(new BorderLayout());
		p44.add(p46,BorderLayout.WEST);
		p44.add(p47,BorderLayout.EAST);

		p52.setLayout(new BorderLayout());
		p52.add(p33,BorderLayout.WEST);
		p52.add(p34,BorderLayout.EAST);
		p52.add(pa1,BorderLayout.CENTER);

		pa1.setLayout(new BorderLayout());
		pa1.add(pa2,BorderLayout.NORTH);
		pa1.add(pa3,BorderLayout.SOUTH);

		pa2.setLayout(new BorderLayout());
		pa2.add(pa4, BorderLayout.NORTH);//pa5.setBackground(Color.red);
		pa2.add(pa5, BorderLayout.CENTER);

		pa3.setLayout(new BorderLayout());
		pa3.add(pa6, BorderLayout.NORTH);
		pa3.add(pa7, BorderLayout.CENTER);

		p33.setLayout(new BorderLayout());
		p33.add(p35,BorderLayout.NORTH);
		p33.add(p36,BorderLayout.CENTER);//p36.setBackground(Color.red);

		p34.setLayout(new BorderLayout());
		p34.add(p37,BorderLayout.NORTH);//p37.setBackground(Color.red);
		p34.add(p38,BorderLayout.CENTER);

		p35.setLayout(new BorderLayout());
		p35.add(p39,BorderLayout.WEST);//p39.setBackground(Color.red);
		p35.add(p40,BorderLayout.EAST);

		p37.setLayout(new BorderLayout());
		p37.add(p42,BorderLayout.WEST);//p43.setBackground(Color.red);
		p37.add(p43,BorderLayout.EAST);
		
		p59.setLayout(new GridBagLayout());
		GridBagConstraints c44=new GridBagConstraints();
		c44.insets=new Insets(0,5,0,5);
		c44.gridx=0;c44.gridy=1;
		
		c44.gridx=1;c44.gridy=1;
		p59.add(button1, c44);
		c44.gridx=2;c44.gridy=1;
		p59.add(button2, c44);
		c44.gridx=3;c44.gridy=1;
		p59.add(button3, c44);
		c44.gridx=4;c44.gridy=1;
		p59.add(button4, c44);

		ArrayList<String> years_tmp = new ArrayList<String>();
		for(int years=2021; years<=Calendar.getInstance().get(Calendar.YEAR); years++) {
			years_tmp.add(years+"");
		}

		timer=Calendar.getInstance();
		timer.getTime();
		yy=new SimpleDateFormat("yyyy");

		lab27=new JLabel("Class");lab27.setFont(new Font("georgia",Font.BOLD,13));lab27.setForeground(new Color(46,139,87));
		t27=new JComboBox<String>(name4);t27.setMaximumRowCount(10);t27.setToolTipText("Select Class Level");
		lab28=new JLabel("Subject");lab28.setFont(new Font("georgia",Font.BOLD,13));lab28.setForeground(new Color(46,139,87));
		t28=new JComboBox();t28.setMaximumRowCount(25);t28.setToolTipText("Select Subject");
		lab29=new JLabel("Exam");lab29.setFont(new Font("georgia",Font.BOLD,13));lab29.setForeground(new Color(46,139,87));
		t29=new JComboBox();t29.setMaximumRowCount(10);t29.setToolTipText("Select Exam");
		lab30=new JLabel("Term");lab30.setFont(new Font("georgia",Font.BOLD,13));lab30.setForeground(new Color(46,139,87));
		t30=new JComboBox();t30.setMaximumRowCount(10);t30.setToolTipText("Select Term");
		lab31=new JLabel("Year");lab31.setFont(new Font("georgia",Font.BOLD,13));lab31.setForeground(new Color(46,139,87));
		t31=new JComboBox(years_tmp.toArray());t31.setMaximumRowCount(10);t31.setToolTipText("Select Year");
		t31.setSelectedItem(yy.format(timer.getTime()));
		
		lab47=new JLabel("Class");lab47.setFont(new Font("georgia",Font.BOLD,13));lab47.setForeground(new Color(46,139,87));
		t47=new JComboBox<String>(name4);t47.setMaximumRowCount(10);t47.setToolTipText("Select Class Level");
		lab48=new JLabel("Subject");lab48.setFont(new Font("georgia",Font.BOLD,13));lab48.setForeground(new Color(46,139,87));
		t48=new JComboBox();t48.setMaximumRowCount(25);t48.setToolTipText("Select Subject");
		lab49=new JLabel("Exam");lab49.setFont(new Font("georgia",Font.BOLD,13));lab49.setForeground(new Color(46,139,87));
		t49=new JComboBox();t49.setMaximumRowCount(10);t49.setToolTipText("Select Exam");
		lab50=new JLabel("Term");lab50.setFont(new Font("georgia",Font.BOLD,13));lab50.setForeground(new Color(46,139,87));
		t50=new JComboBox();t50.setMaximumRowCount(10);t50.setToolTipText("Select Term");
		lab51=new JLabel("Year");lab51.setFont(new Font("georgia",Font.BOLD,13));lab51.setForeground(new Color(46,139,87));
		t51=new JComboBox(years_tmp.toArray());t51.setMaximumRowCount(10);t51.setToolTipText("Select Year");
		t51.setSelectedItem(yy.format(timer.getTime()));
		
		
		label40=new JLabel("Class");label40.setFont(new Font("georgia",Font.BOLD,13));label40.setForeground(new Color(46,139,87));
		box40=new JComboBox<String>(name4);box40.setMaximumRowCount(10);box40.setToolTipText("Select Class Level");
		label41=new JLabel("Exam");label41.setFont(new Font("georgia",Font.BOLD,13));label41.setForeground(new Color(46,139,87));
		box41=new JComboBox();box41.setMaximumRowCount(10);box41.setToolTipText("Select Exam");
		label42=new JLabel("Term");label42.setFont(new Font("georgia",Font.BOLD,13));label42.setForeground(new Color(46,139,87));
		box42=new JComboBox();box42.setMaximumRowCount(10);box42.setToolTipText("Select Term");
		label43=new JLabel("Year");label43.setFont(new Font("georgia",Font.BOLD,13));label43.setForeground(new Color(46,139,87));
		box43=new JComboBox(years_tmp.toArray());box43.setMaximumRowCount(10);box43.setToolTipText("Select Year");
		box43.setSelectedItem(yy.format(timer.getTime()));

		
		label44=new JLabel("Class");label44.setFont(new Font("georgia",Font.BOLD,13));label44.setForeground(new Color(46,139,87));
		box44=new JComboBox<String>(name4);box44.setMaximumRowCount(10);box44.setToolTipText("Select Class Level");
		label45=new JLabel("Term");label45.setFont(new Font("georgia",Font.BOLD,13));label45.setForeground(new Color(46,139,87));
		box45=new JComboBox();box45.setMaximumRowCount(10);box45.setToolTipText("Select Term");
		label46=new JLabel("Year");label46.setFont(new Font("georgia",Font.BOLD,13));label46.setForeground(new Color(46,139,87));
		box46=new JComboBox(years_tmp.toArray());box46.setMaximumRowCount(10);box46.setToolTipText("Select Year");
		box46.setSelectedItem(yy.format(timer.getTime()));
		
		label49=new JLabel("Class");label49.setFont(new Font("georgia",Font.BOLD,13));label49.setForeground(new Color(46,139,87));
		label47=new JLabel("Replace");label47.setFont(new Font("georgia",Font.BOLD,13));label47.setForeground(new Color(46,139,87));
		box47=new JComboBox<String>(name4);box47.setMaximumRowCount(10);box47.setToolTipText("Select Class Level");
		
		label48=new JLabel("With");label48.setFont(new Font("georgia",Font.BOLD,13));label48.setForeground(new Color(46,139,87));
		box48=new JComboBox<String>(name4);box48.setMaximumRowCount(10);box48.setToolTipText("Select Class Level");
		
		pa9.setLayout(new GridBagLayout());
		GridBagConstraints ccna=new GridBagConstraints();
		ccna.fill=GridBagConstraints.HORIZONTAL;
		ccna.weightx=1;ccna.weighty=1;
		ccna.insets=new Insets(2,2,2,3);

		
		ccna.gridx=1;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa9.add(label44,ccna);
		ccna.gridx=1;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa9.add(box44,ccna);
		
		ccna.gridx=2;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa9.add(label45,ccna);
		ccna.gridx=2;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa9.add(box45,ccna);
		
		ccna.gridx=3;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa9.add(label46,ccna);
		ccna.gridx=3;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa9.add(box46,ccna);
		
		
		p61.setLayout(new GridBagLayout());
		ccna.fill=GridBagConstraints.HORIZONTAL;
		ccna.weightx=1;ccna.weighty=1;
		ccna.insets=new Insets(2,2,2,3);

		ccna.gridx=1;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p61.add(label47,ccna);
		ccna.gridx=1;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p61.add(box47,ccna);
		
		ccna.gridx=2;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p61.add(label48,ccna);
		ccna.gridx=2;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p61.add(box48,ccna);
		
		ccna.gridx=0;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p61.add(label49,ccna);

		pa8.setLayout(new GridBagLayout());
		ccna.fill=GridBagConstraints.HORIZONTAL;
		ccna.weightx=1;ccna.weighty=1;
		ccna.insets=new Insets(2,2,2,3);

		ccna.gridx=1;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa8.add(label40,ccna);
		ccna.gridx=1;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa8.add(box40,ccna);
		
		ccna.gridx=2;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa8.add(label41,ccna);
		ccna.gridx=2;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa8.add(box41,ccna);
		
		ccna.gridx=3;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa8.add(label42,ccna);
		ccna.gridx=3;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa8.add(box42,ccna);
		
		ccna.gridx=4;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		pa8.add(label43,ccna);
		ccna.gridx=4;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		pa8.add(box43,ccna);

		p60.setLayout(new GridBagLayout());
		ccna.fill=GridBagConstraints.HORIZONTAL;
		ccna.weightx=1;ccna.weighty=1;
		ccna.insets=new Insets(2,2,2,3);

		ccna.gridx=1;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p60.add(lab47,ccna);
		ccna.gridx=1;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p60.add(t47,ccna);
		
		ccna.gridx=2;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p60.add(lab48,ccna);
		ccna.gridx=2;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p60.add(t48,ccna);
		
		ccna.gridx=3;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p60.add(lab49,ccna);
		ccna.gridx=3;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p60.add(t49,ccna);
		
		ccna.gridx=4;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p60.add(lab50,ccna);
		ccna.gridx=4;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p60.add(t50,ccna);
		
		ccna.gridx=5;ccna.gridy=1;
		ccna.anchor=GridBagConstraints.LINE_END;
		p60.add(lab51,ccna);
		ccna.gridx=5;ccna.gridy=2;
		ccna.anchor=GridBagConstraints.LINE_START;
		p60.add(t51,ccna);
		
		

		Icon save=new ImageIcon(this.getClass().getResource("/save.png"));
		Icon search=new ImageIcon(this.getClass().getResource("/search.png"));
		Icon edit=new ImageIcon(this.getClass().getResource("/edit.png"));
		Icon delete=new ImageIcon(this.getClass().getResource("/delete.png"));
		Icon show=new ImageIcon(this.getClass().getResource("/show.png"));
		Icon print=new ImageIcon(this.getClass().getResource("/print.png"));
		Icon refresh=new ImageIcon(this.getClass().getResource("/refresh.png"));
		Icon z=new ImageIcon(this.getClass().getResource("/z.png"));

		ll01=new JLabel(" A  ");ll01.setFont(new Font("georgia",Font.BOLD,13));ll01.setForeground(Color.BLUE);
		text1=new JTextField(3);text1.setFont(new Font("georgia",Font.PLAIN,13));
		ll02=new JLabel(" B  ");ll02.setFont(new Font("georgia",Font.BOLD,13));ll02.setForeground(Color.BLUE);
		text2=new JTextField(3);text2.setFont(new Font("georgia",Font.PLAIN,13));
		ll03=new JLabel(" C  ");ll03.setFont(new Font("georgia",Font.BOLD,13));ll03.setForeground(Color.BLUE);
		text3=new JTextField(3);text3.setFont(new Font("georgia",Font.PLAIN,13));
		ll04=new JLabel(" D  ");ll04.setFont(new Font("georgia",Font.BOLD,13));ll04.setForeground(Color.BLUE);
		text4=new JTextField(3);text4.setFont(new Font("georgia",Font.PLAIN,13));
		ll05=new JLabel(" F  ");ll05.setFont(new Font("georgia",Font.BOLD,13));ll05.setForeground(Color.BLUE);
		text5=new JTextField(3);text5.setFont(new Font("georgia",Font.PLAIN,13));

		ll06=new JLabel(" A  ");ll06.setFont(new Font("georgia",Font.BOLD,13));ll06.setForeground(Color.BLUE);
		text6=new JTextField(3);text6.setFont(new Font("georgia",Font.PLAIN,13));
		ll7=new JLabel(" B  ");ll7.setFont(new Font("georgia",Font.BOLD,13));ll7.setForeground(Color.BLUE);
		text7=new JTextField(3);text7.setFont(new Font("georgia",Font.PLAIN,13));
		ll8=new JLabel(" C  ");ll8.setFont(new Font("georgia",Font.BOLD,13));ll8.setForeground(Color.BLUE);
		text8=new JTextField(3);text8.setFont(new Font("georgia",Font.PLAIN,13));
		ll9=new JLabel(" D  ");ll9.setFont(new Font("georgia",Font.BOLD,13));ll9.setForeground(Color.BLUE);
		text9=new JTextField(3);text9.setFont(new Font("georgia",Font.PLAIN,13));
		ll10=new JLabel(" E  ");ll10.setFont(new Font("georgia",Font.BOLD,13));ll10.setForeground(Color.BLUE);
		text10=new JTextField(3);text10.setFont(new Font("georgia",Font.PLAIN,13));
		ll11 =new JLabel(" S  ");ll11 .setFont(new Font("georgia",Font.BOLD,13));ll11 .setForeground(Color.BLUE);
		text11 =new JTextField(3);text11 .setFont(new Font("georgia",Font.PLAIN,13));
		ll12=new JLabel(" F  ");ll12.setFont(new Font("georgia",Font.BOLD,13));ll12.setForeground(Color.BLUE);
		text12=new JTextField(3);text12.setFont(new Font("georgia",Font.PLAIN,13));

		labe1=new JLabel(" A  ");labe1.setFont(new Font("georgia",Font.BOLD,13));labe1.setForeground(Color.BLUE);
		te1=new JTextField(3);te1.setFont(new Font("georgia",Font.BOLD,13));
		labe2=new JLabel("<=    mark    <");labe2.setFont(new Font("georgia",Font.BOLD,13));labe2.setForeground(new Color(46,139,87));
		te2=new JTextField(3);te2.setFont(new Font("georgia",Font.BOLD,13));

		labe3=new JLabel("B");labe3.setFont(new Font("georgia",Font.BOLD,13));labe3.setForeground(Color.BLUE);
		te3=new JTextField(3);te3.setFont(new Font("georgia",Font.BOLD,13));
		labe4=new JLabel("<=    mark    <");labe4.setFont(new Font("georgia",Font.BOLD,13));labe4.setForeground(new Color(46,139,87));
		te4=new JTextField(3);te4.setFont(new Font("georgia",Font.BOLD,13));


		labe5=new JLabel("C");labe5.setFont(new Font("georgia",Font.BOLD,13));labe5.setForeground(Color.BLUE);
		te5=new JTextField(3);te5.setFont(new Font("georgia",Font.BOLD,13));
		labe6=new JLabel("<=    mark    <");labe6.setFont(new Font("georgia",Font.BOLD,13));labe6.setForeground(new Color(46,139,87));
		te6=new JTextField(3);te6.setFont(new Font("georgia",Font.BOLD,13));

		labe7=new JLabel("D");labe7.setFont(new Font("georgia",Font.BOLD,13));labe7.setForeground(Color.BLUE);
		te7=new JTextField(3);te7.setFont(new Font("georgia",Font.BOLD,13));
		labe8=new JLabel("<=    mark    <");labe8.setFont(new Font("georgia",Font.BOLD,13));labe8.setForeground(new Color(46,139,87));
		te8=new JTextField(3);te8.setFont(new Font("georgia",Font.BOLD,13));

		labe9=new JLabel("F");labe9.setFont(new Font("georgia",Font.BOLD,13));labe9.setForeground(Color.BLUE);
		te9=new JTextField(3);te9.setFont(new Font("georgia",Font.BOLD,13));
		labe10=new JLabel("<=    mark    <");labe10.setFont(new Font("georgia",Font.BOLD,13));labe10.setForeground(new Color(46,139,87));
		te10=new JTextField(3);te10.setFont(new Font("georgia",Font.BOLD,13));




		lab13=new JLabel(" A  ");lab13.setFont(new Font("georgia",Font.BOLD,13));lab13.setForeground(Color.BLUE);
		tex13=new JTextField(3);tex13.setFont(new Font("georgia",Font.BOLD,13));
		lab14=new JLabel("<=    mark    <");lab14.setFont(new Font("georgia",Font.BOLD,13));lab14.setForeground(new Color(46,139,87));
		tex14=new JTextField(3);tex14.setFont(new Font("georgia",Font.BOLD,13));

		lab15=new JLabel(" B  ");lab15.setFont(new Font("georgia",Font.BOLD,13));lab15.setForeground(Color.BLUE);
		tex15=new JTextField(3);tex15.setFont(new Font("georgia",Font.BOLD,13));
		lab16=new JLabel("<=    mark    <");lab16.setFont(new Font("georgia",Font.BOLD,13));lab16.setForeground(new Color(46,139,87));
		tex16=new JTextField(3);tex16.setFont(new Font("georgia",Font.BOLD,13));

		lab17=new JLabel(" C  ");lab17.setFont(new Font("georgia",Font.BOLD,13));lab17.setForeground(Color.BLUE);
		tex17=new JTextField(3);tex17.setFont(new Font("georgia",Font.BOLD,13));
		lab18=new JLabel("<=    mark    <");lab18.setFont(new Font("georgia",Font.BOLD,13));lab18.setForeground(new Color(46,139,87));
		tex18=new JTextField(3);tex18.setFont(new Font("georgia",Font.BOLD,13));

		lab19=new JLabel(" D  ");lab19.setFont(new Font("georgia",Font.BOLD,13));lab19.setForeground(Color.BLUE);
		tex19=new JTextField(3);tex19.setFont(new Font("georgia",Font.BOLD,13));
		lab20=new JLabel("<=    mark    <");lab20.setFont(new Font("georgia",Font.BOLD,13));lab20.setForeground(new Color(46,139,87));
		tex20=new JTextField(3);tex20.setFont(new Font("georgia",Font.BOLD,13));

		lab21=new JLabel(" E  ");lab21.setFont(new Font("georgia",Font.BOLD,13));lab21.setForeground(Color.BLUE);
		tex21=new JTextField(3);tex21.setFont(new Font("georgia",Font.BOLD,13));
		lab22=new JLabel("<=    mark    <");lab22.setFont(new Font("georgia",Font.BOLD,13));lab22.setForeground(new Color(46,139,87));
		tex22=new JTextField(3);tex22.setFont(new Font("georgia",Font.BOLD,13));

		lab23=new JLabel(" S  ");lab23.setFont(new Font("georgia",Font.BOLD,13));lab23.setForeground(Color.BLUE);
		tex23=new JTextField(3);tex23.setFont(new Font("georgia",Font.BOLD,13));
		lab24=new JLabel("<=    mark    <");lab24.setFont(new Font("georgia",Font.BOLD,13));lab24.setForeground(new Color(46,139,87));
		tex24=new JTextField(3);tex24.setFont(new Font("georgia",Font.BOLD,13));

		lab25=new JLabel(" F  ");lab25.setFont(new Font("georgia",Font.BOLD,13));lab25.setForeground(Color.BLUE);
		tex25=new JTextField(3);tex25.setFont(new Font("georgia",Font.BOLD,13));
		lab26=new JLabel("<=    mark    <");lab26.setFont(new Font("georgia",Font.BOLD,13));lab26.setForeground(new Color(46,139,87));
		tex26=new JTextField(3);tex26.setFont(new Font("georgia",Font.BOLD,13));




		l0=new JLabel("FIRST NAME");l0.setFont(new Font("georgia",Font.BOLD,13));l0.setForeground(new Color(46,139,87));
		t0=new JTextField(12);t0.setToolTipText("Enter First Name");
		l1=new JLabel("LAST NAME");l1.setFont(new Font("georgia",Font.BOLD,13));l1.setForeground(new Color(46,139,87));
		t1=new JTextField(12);t1.setToolTipText("Enter Last Name");
		l2=new JLabel("USERNAME");l2.setFont(new Font("georgia",Font.BOLD,13));l2.setForeground(new Color(46,139,87));
		t2=new JTextField(12);t2.setToolTipText("User Name");
		l3=new JLabel("PASSWORD");l3.setFont(new Font("georgia",Font.BOLD,13));l3.setForeground(new Color(46,139,87));
		t3=new JTextField(12);t3.setToolTipText("Password");
		l4=new JLabel("LEVEL");l4.setFont(new Font("georgia",Font.BOLD,13));l4.setForeground(new Color(46,139,87));
		t4=new JComboBox<String>(name1);t4.setToolTipText("Select Level");t4.setSelectedItem(null);
		l5=new JLabel("SUBJECT");l5.setFont(new Font("georgia",Font.BOLD,13));l5.setForeground(new Color(46,139,87));
		t5=new JComboBox<String>();t5.setMaximumRowCount(10);t5.setToolTipText("Select Subject");
		t5.setSelectedItem(null);
		l6=new JLabel("CLASS");l6.setFont(new Font("georgia",Font.BOLD,13));l6.setForeground(new Color(46,139,87));
		t6=new JComboBox<String>(name4);t6.setMaximumRowCount(10);t6.setToolTipText("Select Class Level");
		t6.setSelectedItem(null);


		l10=new JLabel("FIRST NAME");l10.setFont(new Font("georgia",Font.BOLD,13));l10.setForeground(new Color(46,139,87));
		t10=new JTextField(12);t10.setToolTipText("Enter First Name");
		l11=new JLabel("LAST NAME");l11.setFont(new Font("georgia",Font.BOLD,13));l11.setForeground(new Color(46,139,87));
		t11=new JTextField(12);t11.setToolTipText("Enter Last Name");
		l12=new JLabel("USERNAME");l12.setFont(new Font("georgia",Font.BOLD,13));l12.setForeground(new Color(46,139,87));
		t12=new JTextField(12);t2.setToolTipText("User Name");
		l13=new JLabel("PASSWORD");l13.setFont(new Font("georgia",Font.BOLD,13));l13.setForeground(new Color(46,139,87));
		t13=new JTextField(12);t13.setToolTipText("Password");
		l14=new JLabel("LEVEL");l14.setFont(new Font("georgia",Font.BOLD,13));l14.setForeground(new Color(46,139,87));
		t14=new JComboBox<String>(name1);t14.setToolTipText("Select Level");t14.setSelectedItem(null);
		l15=new JLabel("SUBJECT");l15.setFont(new Font("georgia",Font.BOLD,13));l15.setForeground(new Color(46,139,87));
		t15=new JComboBox<String>();t15.setMaximumRowCount(10);t15.setToolTipText("Select Subject");
		t15.setSelectedItem(null);
		l16=new JLabel("CLASS");l16.setFont(new Font("georgia",Font.BOLD,13));l16.setForeground(new Color(46,139,87));
		t16=new JComboBox<String>(name4);t16.setMaximumRowCount(10);t16.setToolTipText("Select Class Level");
		t16.setSelectedItem(null);
		
		
		l56=new JLabel("SCHOOL NAME");l56.setFont(new Font("georgia",Font.BOLD,13));l56.setForeground(new Color(46,139,87));
		t56=new JTextField(12);t0.setToolTipText("Enter School Name ");

		b1=new JButton("Save");b1.setIcon(save);
		b2=new JButton("Refresh");b2.setIcon(show);
		b3=new JButton("Update");b3.setIcon(edit);
		b4=new JButton("Delete");b4.setIcon(delete);

		b5=new JButton("Save");b5.setIcon(save);//b05.setBackground(Color.red);
		b6=new JButton("Refresh");b6.setIcon(show);
		b7=new JButton("Update");b7.setIcon(edit);
		b8=new JButton("Delete");b8.setIcon(delete);

		b9=new JButton("Save");b9.setIcon(save);
		b10=new JButton("Refresh");b10.setIcon(show);
		b11=new JButton("Update");b11.setIcon(edit);
		b12=new JButton("Delete");b12.setIcon(delete);

		b13=new JButton("Save");b13.setIcon(save);//b13.setBackground(Color.red);
		b14=new JButton("Refresh");b14.setIcon(show);
		b15=new JButton("Update");b15.setIcon(edit);

		b16=new JButton("Save");b16.setIcon(save);//b16.setBackground(Color.red);
		b17=new JButton("Refresh");b17.setIcon(show);
		b18=new JButton("Update");b18.setIcon(edit);
		b19=new JButton("Delete");b19.setIcon(delete);

		b20=new JButton("Save");b20.setIcon(save);
		b21=new JButton("Refresh");b21.setIcon(show);
		b22=new JButton("Update");b22.setIcon(edit);
		b23=new JButton("Delete");b23.setIcon(delete);

		b24=new JButton("Save");b24.setIcon(save);//b20.setBackground(Color.red);
		b25=new JButton("Refresh");b25.setIcon(show);
		b26=new JButton("Update");b26.setIcon(edit);
		b27=new JButton("Delete");b27.setIcon(delete);

		b28=new JButton("Save");b28.setIcon(save);
		b29=new JButton("Refresh");b29.setIcon(show);

		b30=new JButton("Save");b30.setIcon(save);
		b31=new JButton("Refresh");b31.setIcon(show);
		b32=new JButton("Update");b32.setIcon(edit);
		b33=new JButton("Delete");b33.setIcon(delete);

		b34=new JButton("Save Marks");b34.setFont(new Font("verdana",Font.BOLD,12));b34.setBackground(new Color(0,100,0));b34.setForeground(Color.white);
		b35=new JButton("Refresh");b35.setFont(new Font("verdana",Font.BOLD,12));b35.setBackground(new Color(0,0,128));b35.setForeground(Color.white);
		b36=new JButton("Delete Marks");b36.setFont(new Font("verdana",Font.BOLD,12));b36.setBackground(new Color(255,0,0));b36.setForeground(Color.white);
		b37=new JButton("Upload Marks");b37.setFont(new Font("verdana",Font.BOLD,12));b37.setBackground(new Color(0,0,0));b37.setForeground(Color.white);

		ba1=new JButton("Save");ba1.setIcon(save);
		ba2=new JButton("Refresh");ba2.setIcon(show);
		ba3=new JButton("Save");ba3.setIcon(save);
		ba4=new JButton("Refresh");ba4.setIcon(show);

		la1=new JLabel("STU_ID");la1.setFont(new Font("georgia",Font.BOLD,13));la1.setForeground(new Color(46,139,87));
		ta1=new JTextField(12);ta1.setToolTipText("Enter First and Middle name");
		la2=new JLabel("FIRST NAME");la2.setFont(new Font("georgia",Font.BOLD,13));la2.setForeground(new Color(46,139,87));
		ta2=new JTextField(12);ta2.setToolTipText("Enter First Name");
		la3=new JLabel("MIDDLE NAME");la3.setFont(new Font("georgia",Font.BOLD,13));la3.setForeground(new Color(46,139,87));
		ta3=new JTextField(12);ta3.setToolTipText("Enter Middle Name");
		la4=new JLabel("LAST NAME");la4.setFont(new Font("georgia",Font.BOLD,13));la4.setForeground(new Color(46,139,87));
		ta4=new JTextField(12);ta4.setToolTipText("Enter Last Name");
		la5=new JLabel("PHONE NO");la5.setFont(new Font("georgia",Font.BOLD,13));la5.setForeground(new Color(46,139,87));
		ta5=new JTextField(12);ta5.setToolTipText("Enter Phone Number");
		la6=new JLabel("GENDER");la6.setFont(new Font("georgia",Font.BOLD,13));la6.setForeground(new Color(46,139,87));
		ta6=new JComboBox<String>(name3);ta6.setToolTipText("Select Gender");ta6.setSelectedItem(null);
		la7=new JLabel("CLASS");la7.setFont(new Font("georgia",Font.BOLD,13));la7.setForeground(new Color(46,139,87));
		ta7=new JComboBox<String>(name4);ta7.setToolTipText("Select Class");ta7.setSelectedItem(null);



		la11=new JLabel("STU_ID");la11.setFont(new Font("georgia",Font.BOLD,13));la11.setForeground(new Color(46,139,87));
		ta11=new JTextField(12);ta11.setToolTipText("Enter First and Middle name");
		la12=new JLabel("FIRST NAME");la12.setFont(new Font("georgia",Font.BOLD,13));la12.setForeground(new Color(46,139,87));
		ta12=new JTextField(12);ta12.setToolTipText("Enter First Name");
		la13=new JLabel("MIDDLE NAME");la13.setFont(new Font("georgia",Font.BOLD,13));la13.setForeground(new Color(46,139,87));
		ta13=new JTextField(12);ta13.setToolTipText("Enter Middle Name");
		la14=new JLabel("LAST NAME");la14.setFont(new Font("georgia",Font.BOLD,13));la14.setForeground(new Color(46,139,87));
		ta14=new JTextField(12);ta14.setToolTipText("Enter Last Name");
		la15=new JLabel("PHONE NO");la15.setFont(new Font("georgia",Font.BOLD,13));la15.setForeground(new Color(46,139,87));
		ta15=new JTextField(12);ta15.setToolTipText("Enter Phone Number");
		la16=new JLabel("GENDER");la16.setFont(new Font("georgia",Font.BOLD,13));la16.setForeground(new Color(46,139,87));
		ta16=new JComboBox<String>(name3);ta16.setToolTipText("Select Gender");ta16.setSelectedItem(null);
		la17=new JLabel("CLASS");la17.setFont(new Font("georgia",Font.BOLD,13));la17.setForeground(new Color(46,139,87));
		ta17=new JComboBox<String>(name4);ta17.setToolTipText("Select Class");ta17.setSelectedItem(null);

		lab1=new JLabel("SUBJECT CODE");lab1.setFont(new Font("georgia",Font.BOLD,13));lab1.setForeground(new Color(46,139,87));
		tex1=new JTextField(12);tex1.setToolTipText("Enter Subject Code");
		lab2=new JLabel("CODE NAME");lab2.setFont(new Font("georgia",Font.BOLD,13));lab2.setForeground(new Color(46,139,87));
		tex2=new JTextField(12);tex2.setToolTipText("Enter Subject Name");
		lab34=new JLabel("FULL NAME");lab34.setFont(new Font("georgia",Font.BOLD,13));lab34.setForeground(new Color(46,139,87));
		tex34=new JTextField(12);tex34.setToolTipText("Enter Full Name");


		lab3=new JLabel("SUBJECT CODE");lab3.setFont(new Font("georgia",Font.BOLD,13));lab3.setForeground(new Color(46,139,87));
		tex3=new JTextField(12);tex3.setToolTipText("Enter Subject Code");
		lab4=new JLabel("SUBJECT NAME");lab4.setFont(new Font("georgia",Font.BOLD,13));lab4.setForeground(new Color(46,139,87));
		tex4=new JTextField(12);tex4.setToolTipText("Enter Subject Name");
		lab36=new JLabel("FULL NAME");lab36.setFont(new Font("georgia",Font.BOLD,13));lab36.setForeground(new Color(46,139,87));
		tex36=new JTextField(12);tex36.setToolTipText("Enter Full Name");


		lab5=new JLabel("EXAM ID");lab5.setFont(new Font("georgia",Font.BOLD,13));lab5.setForeground(new Color(46,139,87));
		tex5=new JTextField(12);tex5.setToolTipText("Enter Exam Id");
		lab6=new JLabel("EXAM NAME");lab6.setFont(new Font("georgia",Font.BOLD,13));lab6.setForeground(new Color(46,139,87));
		tex6=new JTextField(12);tex6.setToolTipText("Enter Exam Name");
		lab32=new JLabel("% MARK");lab32.setFont(new Font("georgia",Font.BOLD,13));lab32.setForeground(new Color(46,139,87));
		tex32=new JTextField(12);tex32.setToolTipText("Enter Percentage  of Exam");


		lab7=new JLabel("EXAM ID");lab7.setFont(new Font("georgia",Font.BOLD,13));lab7.setForeground(new Color(46,139,87));
		tex7=new JTextField(12);tex7.setToolTipText("Enter Exam Id");
		lab8=new JLabel("EXAM NAME");lab8.setFont(new Font("georgia",Font.BOLD,13));lab8.setForeground(new Color(46,139,87));
		tex8=new JTextField(12);tex8.setToolTipText("Enter Exam Name");
		lab33=new JLabel("% MARK");lab33.setFont(new Font("georgia",Font.BOLD,13));lab33.setForeground(new Color(46,139,87));
		tex33=new JTextField(12);tex33.setToolTipText("Enter Percentage  of Exam");


		lab9=new JLabel("TERM ID");lab9.setFont(new Font("georgia",Font.BOLD,13));lab9.setForeground(new Color(46,139,87));
		tex9=new JTextField(12);tex9.setToolTipText("Enter Term Id");
		lab10=new JLabel("TERM NAME");lab10.setFont(new Font("georgia",Font.BOLD,13));lab10.setForeground(new Color(46,139,87));
		tex10=new JTextField(12);tex10.setToolTipText("Enter Term Name");

		lab11=new JLabel("TERM ID");lab11.setFont(new Font("georgia",Font.BOLD,13));lab11.setForeground(new Color(46,139,87));
		tex11=new JTextField(12);tex11.setToolTipText("Enter Term Id");
		lab12=new JLabel("TERM NAME");lab12.setFont(new Font("georgia",Font.BOLD,13));lab12.setForeground(new Color(46,139,87));
		tex12=new JTextField(12);tex12.setToolTipText("Enter Term Name");


		labe11=new JLabel("SUBJECT CODE");labe11.setFont(new Font("georgia",Font.BOLD,13));labe11.setForeground(new Color(46,139,87));
		te11=new JTextField(12);te11.setToolTipText("Enter Subject Code");
		labe12=new JLabel("CODE NAME");labe12.setFont(new Font("georgia",Font.BOLD,13));labe12.setForeground(new Color(46,139,87));
		te12=new JTextField(12);te12.setToolTipText("Enter Subject Name");
		lab35=new JLabel("FULL NAME");lab35.setFont(new Font("georgia",Font.BOLD,13));lab35.setForeground(new Color(46,139,87));
		tex35=new JTextField(12);tex35.setToolTipText("Enter Subject Name");



		labe13=new JLabel("SUBJECT CODE");labe13.setFont(new Font("georgia",Font.BOLD,13));labe13.setForeground(new Color(46,139,87));
		te13=new JTextField(12);te13.setToolTipText("Enter Subject Code");
		labe14=new JLabel("SUBJECT NAME");labe14.setFont(new Font("georgia",Font.BOLD,13));labe14.setForeground(new Color(46,139,87));
		te14=new JTextField(12);te14.setToolTipText("Enter Subject Name");
		lab37=new JLabel("FULL NAME");lab37.setFont(new Font("georgia",Font.BOLD,13));lab37.setForeground(new Color(46,139,87));
		tex37=new JTextField(12);tex37.setToolTipText("Enter Full Name");

		
		p56.setLayout(new GridBagLayout());
		c44.insets=new Insets(0,5,0,5);
		c44.gridx=1;c44.gridy=1;
		p56.add(l56, c44);
		c44.gridx=2;c44.gridy=1;
		p56.add(t56, c44);


		p54.setLayout(new GridBagLayout());
		c44.insets=new Insets(0,5,0,5);
		c44.gridx=1;c44.gridy=1;
		p54.add(lab27, c44);
		c44.gridx=2;c44.gridy=1;
		p54.add(t27, c44);

		c44.gridx=3;c44.gridy=1;
		p54.add(lab28, c44);
		c44.gridx=4;c44.gridy=1;
		p54.add(t28, c44);

		c44.gridx=5;c44.gridy=1;
		p54.add(lab29, c44);
		c44.gridx=6;c44.gridy=1;
		p54.add(t29, c44);

		c44.gridx=7;c44.gridy=1;
		p54.add(lab30, c44);
		c44.gridx=8;c44.gridy=1;
		p54.add(t30, c44);

		c44.gridx=9;c44.gridy=1;
		p54.add(lab31, c44);
		c44.gridx=10;c44.gridy=1;
		p54.add(t31, c44);

		c44.gridx=11;c44.gridy=1;
		p54.add(b34, c44);
		c44.gridx=12;c44.gridy=1;
		p54.add(b35, c44);
		c44.gridx=13;c44.gridy=1;
	//	p54.add(b36, c44);
		c44.gridx=14;c44.gridy=1;
		p54.add(b37, c44);


		p28.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p28.add(b13, c44);
		c44.gridx=2;c44.gridy=1;
		p28.add(b14, c44);
		c44.gridx=3;c44.gridy=1;
		//p28.add(b15, c44);

		p50.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p50.add(b28, c44);
		c44.gridx=2;c44.gridy=1;
		p50.add(b29, c44);
		c44.gridx=3;c44.gridy=1;

		pa4.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		pa4.add(ba1, c44);
		c44.gridx=2;c44.gridy=1;
		pa4.add(ba2, c44);
		c44.gridx=3;c44.gridy=1;

		pa6.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		pa6.add(ba3, c44);
		c44.gridx=2;c44.gridy=1;
		pa6.add(ba4, c44);
		c44.gridx=3;c44.gridy=1;

		p40.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p40.add(b16, c44);
		c44.gridx=1;c44.gridy=2;
		p40.add(b17, c44);
		c44.gridx=1;c44.gridy=3;
		p40.add(b18, c44);
		c44.gridx=2;c44.gridy=1;
		p40.add(b19, c44);


		p43.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p43.add(b30, c44);
		c44.gridx=2;c44.gridy=1;
		p43.add(b31, c44);
		c44.gridx=1;c44.gridy=2;
		p43.add(b32, c44);
		c44.gridx=2;c44.gridy=2;
		p43.add(b33, c44);



		pa5.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		pa5.add(ll01, c44);
		c44.gridx=2;c44.gridy=1;
		pa5.add(text1, c44); 

		c44.gridx=1;c44.gridy=2;
		pa5.add(ll02, c44);
		c44.gridx=2;c44.gridy=2;
		pa5.add(text2, c44); 

		c44.gridx=1;c44.gridy=3;
		pa5.add(ll03, c44);
		c44.gridx=2;c44.gridy=3;
		pa5.add(text3, c44); 

		c44.gridx=1;c44.gridy=4;
		pa5.add(ll04, c44);
		c44.gridx=2;c44.gridy=4;
		pa5.add(text4, c44); 

		c44.gridx=1;c44.gridy=5;
		pa5.add(ll05, c44);
		c44.gridx=2;c44.gridy=5;
		pa5.add(text5, c44); 

		pa7.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		pa7.add(ll06, c44);
		c44.gridx=2;c44.gridy=1;
		pa7.add(text6, c44); 

		c44.gridx=1;c44.gridy=2;
		pa7.add(ll7, c44);
		c44.gridx=2;c44.gridy=2;
		pa7.add(text7, c44); 

		c44.gridx=1;c44.gridy=3;
		pa7.add(ll8, c44);
		c44.gridx=2;c44.gridy=3;
		pa7.add(text8, c44); 

		c44.gridx=1;c44.gridy=4;
		pa7.add(ll9, c44);
		c44.gridx=2;c44.gridy=4;
		pa7.add(text9, c44); 

		c44.gridx=1;c44.gridy=5;
		pa7.add(ll10, c44);
		c44.gridx=2;c44.gridy=5;
		pa7.add(text10, c44); 

		c44.gridx=1;c44.gridy=6;
		pa7.add(ll11, c44);
		c44.gridx=2;c44.gridy=6;
		pa7.add(text11, c44); 

		c44.gridx=1;c44.gridy=7;
		pa7.add(ll12, c44);
		c44.gridx=2;c44.gridy=7;
		pa7.add(text12, c44); 



		p48.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p48.add(labe13, c44);
		c44.gridx=2;c44.gridy=1;
		p48.add(te13, c44);

		c44.gridx=1;c44.gridy=2;
		p48.add(labe14, c44);
		c44.gridx=2;c44.gridy=2;
		p48.add(te14, c44);

		c44.gridx=1;c44.gridy=3;
		p48.add(lab37, c44);
		c44.gridx=2;c44.gridy=3;
		p48.add(tex37, c44);


		p47.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p47.add(b24, c44);
		c44.gridx=1;c44.gridy=2;
		p47.add(b25, c44);
		c44.gridx=1;c44.gridy=3;
		p47.add(b26, c44);
		c44.gridx=2;c44.gridy=1;
		p47.add(b27, c44);


		p41.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p41.add(lab7, c44);
		c44.gridx=2;c44.gridy=1;
		p41.add(tex7, c44);


		c44.gridx=1;c44.gridy=2;
		p41.add(lab8, c44);
		c44.gridx=2;c44.gridy=2;
		p41.add(tex8, c44);

		c44.gridx=1;c44.gridy=3;
		p41.add(lab33, c44);
		c44.gridx=2;c44.gridy=3;
		p41.add(tex33, c44);

		p30.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p30.add(lab3, c44);
		c44.gridx=2;c44.gridy=1;
		p30.add(tex3, c44);

		c44.gridx=1;c44.gridy=2;
		p30.add(lab4, c44);
		c44.gridx=2;c44.gridy=2;
		p30.add(tex4, c44);

		c44.gridx=1;c44.gridy=3;
		p30.add(lab35, c44);
		c44.gridx=2;c44.gridy=3;
		p30.add(tex35, c44);

		p46.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p46.add(labe11, c44);
		c44.gridx=2;c44.gridy=1;
		p46.add(te11, c44);

		c44.gridx=1;c44.gridy=2;
		p46.add(labe12, c44);
		c44.gridx=2;c44.gridy=2;
		p46.add(te12, c44);

		c44.gridx=1;c44.gridy=3;
		p46.add(lab36, c44);
		c44.gridx=2;c44.gridy=3;
		p46.add(tex36, c44);



		p39.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p39.add(lab5, c44);
		c44.gridx=2;c44.gridy=1;
		p39.add(tex5, c44);

		c44.gridx=1;c44.gridy=2;
		p39.add(lab6, c44);
		c44.gridx=2;c44.gridy=2;
		p39.add(tex6, c44);

		c44.gridx=1;c44.gridy=3;
		p39.add(lab32, c44);
		c44.gridx=2;c44.gridy=3;
		p39.add(tex32, c44);


		p42.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p42.add(lab9, c44);
		c44.gridx=2;c44.gridy=1;
		p42.add(tex9, c44);

		c44.gridx=1;c44.gridy=2;
		p42.add(lab10, c44);
		c44.gridx=2;c44.gridy=2;
		p42.add(tex10, c44);


		p53.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p53.add(lab11, c44);
		c44.gridx=2;c44.gridy=1;
		p53.add(tex11, c44);

		c44.gridx=1;c44.gridy=2;
		p53.add(lab12, c44);
		c44.gridx=2;c44.gridy=2;
		p53.add(tex12, c44);





		p51.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p51.add(lab13, c44);
		c44.gridx=2;c44.gridy=1;
		p51.add(tex13, c44);
		c44.gridx=3;c44.gridy=1;
		p51.add(lab14, c44);
		c44.gridx=4;c44.gridy=1;
		p51.add(tex14, c44);

		c44.gridx=1;c44.gridy=2;
		p51.add(lab15, c44);
		c44.gridx=2;c44.gridy=2;
		p51.add(tex15, c44);
		c44.gridx=3;c44.gridy=2;
		p51.add(lab16, c44);
		c44.gridx=4;c44.gridy=2;
		p51.add(tex16, c44);

		c44.gridx=1;c44.gridy=3;
		p51.add(lab17, c44);
		c44.gridx=2;c44.gridy=3;
		p51.add(tex17, c44);
		c44.gridx=3;c44.gridy=3;
		p51.add(lab18, c44);
		c44.gridx=4;c44.gridy=3;
		p51.add(tex18, c44);

		c44.gridx=1;c44.gridy=4;
		p51.add(lab19, c44);
		c44.gridx=2;c44.gridy=4;
		p51.add(tex19, c44);
		c44.gridx=3;c44.gridy=4;
		p51.add(lab20, c44);
		c44.gridx=4;c44.gridy=4;
		p51.add(tex20, c44);


		c44.gridx=1;c44.gridy=5;
		p51.add(lab21, c44);
		c44.gridx=2;c44.gridy=5;
		p51.add(tex21, c44);
		c44.gridx=3;c44.gridy=5;
		p51.add(lab22, c44);
		c44.gridx=4;c44.gridy=5;
		p51.add(tex22, c44);

		c44.gridx=1;c44.gridy=6;
		p51.add(lab23, c44);
		c44.gridx=2;c44.gridy=6;
		p51.add(tex23, c44);
		c44.gridx=3;c44.gridy=6;
		p51.add(lab24, c44);
		c44.gridx=4;c44.gridy=6;
		p51.add(tex24, c44);

		c44.gridx=1;c44.gridy=7;
		p51.add(lab25, c44);
		c44.gridx=2;c44.gridy=7;
		p51.add(tex25, c44);
		c44.gridx=3;c44.gridy=7;
		p51.add(lab26, c44);
		c44.gridx=4;c44.gridy=7;
		p51.add(tex26, c44);




		p29.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p29.add(labe1, c44);
		c44.gridx=2;c44.gridy=1;
		p29.add(te1, c44);
		c44.gridx=3;c44.gridy=1;
		p29.add(labe2, c44);
		c44.gridx=4;c44.gridy=1;
		p29.add(te2, c44);

		c44.gridx=1;c44.gridy=2;
		p29.add(labe3, c44);
		c44.gridx=2;c44.gridy=2;
		p29.add(te3, c44);
		c44.gridx=3;c44.gridy=2;
		p29.add(labe4, c44);
		c44.gridx=4;c44.gridy=2;
		p29.add(te4, c44);

		c44.gridx=1;c44.gridy=3;
		p29.add(labe5, c44);
		c44.gridx=2;c44.gridy=3;
		p29.add(te5, c44);
		c44.gridx=3;c44.gridy=3;
		p29.add(labe6, c44);
		c44.gridx=4;c44.gridy=3;
		p29.add(te6, c44);

		c44.gridx=1;c44.gridy=4;
		p29.add(labe7, c44);
		c44.gridx=2;c44.gridy=4;
		p29.add(te7, c44);
		c44.gridx=3;c44.gridy=4;
		p29.add(labe8, c44);
		c44.gridx=4;c44.gridy=4;
		p29.add(te8, c44);

		c44.gridx=1;c44.gridy=5;
		p29.add(labe9, c44);
		c44.gridx=2;c44.gridy=5;
		p29.add(te9, c44);
		c44.gridx=3;c44.gridy=5;
		p29.add(labe10, c44);
		c44.gridx=4;c44.gridy=5;
		p29.add(te10, c44);




		p25.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p25.add(lab1, c44);
		c44.gridx=2;c44.gridy=1;
		p25.add(tex1, c44);

		c44.gridx=1;c44.gridy=2;
		p25.add(lab2, c44);
		c44.gridx=2;c44.gridy=2;
		p25.add(tex2, c44);

		c44.gridx=1;c44.gridy=3;
		p25.add(lab34, c44);
		c44.gridx=2;c44.gridy=3;
		p25.add(tex34, c44);


		p10.setLayout(new GridBagLayout());
		GridBagConstraints c10=new GridBagConstraints();
		c10.fill=GridBagConstraints.HORIZONTAL;
		c10.weightx=1;c10.weighty=1;
		c10.insets=new Insets(2,2,2,3);

		c10.gridx=1;c10.gridy=1;
		p10.add(b1, c10);
		c10.gridx=2;c10.gridy=1;
		p10.add(b2, c10);
		c10.gridx=1;c10.gridy=2;
		p10.add(b3, c10);
		c10.gridx=2;c10.gridy=2;
		p10.add(b4, c10);

		p26.setLayout(new GridBagLayout());
		c10.fill=GridBagConstraints.HORIZONTAL;
		c10.weightx=1;c10.weighty=1;
		c10.insets=new Insets(2,2,2,3);

		c10.gridx=1;c10.gridy=1;
		p26.add(b9, c10);
		c10.gridx=1;c10.gridy=2;
		p26.add(b10, c10);
		c10.gridx=1;c10.gridy=3;
		p26.add(b11, c10);
		c10.gridx=2;c10.gridy=1;
		p26.add(b12, c10);



		p18.setLayout(new GridBagLayout());
		//GridBagConstraints c10=new GridBagConstraints();
		c10.fill=GridBagConstraints.HORIZONTAL;
		c10.weightx=1;c10.weighty=1;
		c10.insets=new Insets(2,2,2,3);

		c10.gridx=1;c10.gridy=1;
		p18.add(b5, c10);
		c10.gridx=2;c10.gridy=1;
		p18.add(b6, c10);
		c10.gridx=1;c10.gridy=2;
		p18.add(b7, c10);
		c10.gridx=2;c10.gridy=2;
		p18.add(b8, c10);



		field=new JTextField("",14);   
		field.setToolTipText("Enter First Name or Last Name");
		label=new JLabel();label.setIcon(search);

		field1=new JTextField("",14);   
		field1.setToolTipText("Enter First Name or Last Name");
		label1=new JLabel();label1.setIcon(search);

		p8.setLayout(new GridBagLayout());
		GridBagConstraints c3=new GridBagConstraints();
		c3.insets=new Insets(0,1,0,1);
		c3.gridx=1;c3.gridy=1;
		p8.add(field, c3);
		c3.gridx=2;c3.gridy=1;
		p8.add(label, c3);

		p16.setLayout(new GridBagLayout());
		c3.insets=new Insets(0,1,0,1);
		c3.gridx=1;c3.gridy=1;
		p16.add(field1, c3);
		c3.gridx=2;c3.gridy=1;
		p16.add(label1, c3);

		p17.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p17.add(la1, c44);
		c44.gridx=2;c44.gridy=1;
		p17.add(ta1, c44);

		c44.gridx=1;c44.gridy=2;
		p17.add(la2, c44);
		c44.gridx=2;c44.gridy=2;
		p17.add(ta2, c44);

		c44.gridx=1;c44.gridy=3;
		p17.add(la3, c44);
		c44.gridx=2;c44.gridy=3;
		p17.add(ta3, c44);

		c44.gridx=1;c44.gridy=4;
		p17.add(la4, c44);
		c44.gridx=2;c44.gridy=4;
		p17.add(ta4, c44);

		c44.gridx=1;c44.gridy=5;
		p17.add(la5, c44);
		c44.gridx=2;c44.gridy=5;
		p17.add(ta5, c44);

		c44.gridx=1;c44.gridy=6;
		p17.add(la6, c44);
		c44.gridx=2;c44.gridy=6;
		p17.add(ta6, c44);

		c44.gridx=1;c44.gridy=7;
		p17.add(la7, c44);
		c44.gridx=2;c44.gridy=7;
		p17.add(ta7, c44);


		p20.setLayout(new GridBagLayout());
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;
		c44.insets=new Insets(4,1,4,1);

		c44.gridx=1;c44.gridy=1;
		p20.add(la11, c44);
		c44.gridx=2;c44.gridy=1;
		p20.add(ta11, c44);

		c44.gridx=1;c44.gridy=2;
		p20.add(la12, c44);
		c44.gridx=2;c44.gridy=2;
		p20.add(ta12, c44);

		c44.gridx=1;c44.gridy=3;
		p20.add(la13, c44);
		c44.gridx=2;c44.gridy=3;
		p20.add(ta13, c44);

		c44.gridx=1;c44.gridy=4;
		p20.add(la14, c44);
		c44.gridx=2;c44.gridy=4;
		p20.add(ta14, c44);

		c44.gridx=1;c44.gridy=5;
		p20.add(la15, c44);
		c44.gridx=2;c44.gridy=5;
		p20.add(ta15, c44);

		c44.gridx=1;c44.gridy=6;
		p20.add(la16, c44);
		c44.gridx=2;c44.gridy=6;
		p20.add(ta16, c44);

		c44.gridx=1;c44.gridy=7;
		p20.add(la17, c44);
		c44.gridx=2;c44.gridy=7;
		p20.add(ta17, c44);


		p9.setLayout(new GridBagLayout());
		//	GridBagConstraints c44=new GridBagConstraints();
		c44.fill=GridBagConstraints.HORIZONTAL;
		c44.weightx=1;c44.weighty=1;		
		c44.insets=new Insets(4,1,4,1);
		c44.gridx=1;c44.gridy=1;
		p9.add(l0, c44);
		c44.gridx=2;c44.gridy=1;
		p9.add(t0, c44);

		c44.gridx=1;c44.gridy=2;
		p9.add(l1, c44);
		c44.gridx=2;c44.gridy=2;
		p9.add(t1, c44);

		c44.gridx=1;c44.gridy=3;
		p9.add(l2, c44);
		c44.gridx=2;c44.gridy=3;
		p9.add(t2, c44);

		c44.gridx=1;c44.gridy=4;
		p9.add(l3, c44);
		c44.gridx=2;c44.gridy=4;
		p9.add(t3, c44);

		c44.gridx=1;c44.gridy=5;
		p9.add(l4, c44);
		c44.gridx=2;c44.gridy=5;
		p9.add(t4, c44);

		c44.gridx=1;c44.gridy=6;
		p9.add(l5, c44);
		c44.gridx=2;c44.gridy=6;
		p9.add(t5, c44);

		c44.gridx=1;c44.gridy=7;
		p9.add(l6, c44);
		c44.gridx=2;c44.gridy=7;
		p9.add(t6, c44);

		p11.setLayout(new GridBagLayout());
		GridBagConstraints c=new GridBagConstraints();
		c.fill=GridBagConstraints.HORIZONTAL;
		c.weightx=1;c.weighty=1;
		c.insets=new Insets(3,3,3,3);


		c.gridx=1;c.gridy=1;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l10,c);
		c.gridx=2;c.gridy=1;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t10,c);

		c.gridx=1;c.gridy=2;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l11,c);
		c.gridx=2;c.gridy=2;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t11,c);

		c.gridx=1;c.gridy=3;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l12,c);
		c.gridx=2;c.gridy=3;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t12,c);

		c.gridx=1;c.gridy=4;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l13,c);
		c.gridx=2;c.gridy=4;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t13,c);

		c.gridx=1;c.gridy=5;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l14,c);
		c.gridx=2;c.gridy=5;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t14,c);

		c.gridx=1;c.gridy=6;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l15,c);
		c.gridx=2;c.gridy=6;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t15,c);

		c.gridx=1;c.gridy=7;
		c.anchor=GridBagConstraints.LINE_END;
		p11.add(l16,c);
		c.gridx=2;c.gridy=7;
		c.anchor=GridBagConstraints.LINE_START;
		p11.add(t16,c);





		tex13.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex14.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex15.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex16.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex17.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex18.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex19.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex20.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex21.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex22.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex23.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex24.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex25.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});

		tex26.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});




		te11.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent ke)
			{
				char c = ke.getKeyChar();
				if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
					getToolkit().beep();
					ke.consume();
					JOptionPane.showMessageDialog(null,"Enter Number Only!");
				}}});te13.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te1.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te2.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te3.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te4.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te5.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te6.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te7.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te8.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te9.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});
				te10.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Number Only!");
						}}});



				ta6.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Phone Number !");
						}}});
				ta15.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Phone Number !");
						}}});
				tex1.addKeyListener(new KeyAdapter()
				{
					public void keyTyped(KeyEvent ke)
					{
						char c = ke.getKeyChar();
						if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
							getToolkit().beep();
							ke.consume();
							JOptionPane.showMessageDialog(null,"Enter Valid Number !");
						}}});tex3.addKeyListener(new KeyAdapter()
						{
							public void keyTyped(KeyEvent ke)
							{
								char c = ke.getKeyChar();
								if (!( (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)|| (c == KeyEvent.VK_DELETE)  )){
									getToolkit().beep();
									ke.consume();
									JOptionPane.showMessageDialog(null,"Enter Valid Number !");
								}}});



						//table6.setEnabled(false);



                        Class_View();
						bar(name);
						table();
						button();
						resert();
						grade();
						gradeA();
						combo(); 
						mudi();
						//listen();
						table6();
						remark();
						remark1();
						//update();
						//update1();
						//analysis();
						//analysis1();
						//Term_Report();
						//Class_Report();
						//Form_Report();
						//Form_Term();
						find();
					
						
					

	}
	
	private void find() {
		
		field1.addKeyListener(new KeyAdapter(){
			public void keyReleased(KeyEvent argo){
				
				try{	
				
				String mudi=field1.getText();
				  String s="Select id as 'STU_ID',fname as 'FIRSTNAME',mname as 'MIDDLENAME',lname as 'LASTNAME',phone as 'PHONE',gender as 'GENDER',class as 'CLASS' from Ouser  where id LIKE ? or fname LIKE ? or lname LIKE ? or gender LIKE ? or class LIKE ?  or phone LIKE ? or mname LIKE ?     ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC";
				                                  
				  try {
				
				ps=con.prepareStatement(s);
				ps.setString(1, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(2, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(3, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(4, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(5, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(6, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(7, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				
				rs=ps.executeQuery();
				table1.setModel(DbUtils.resultSetToTableModel(rs));
				table1.setFont(new Font("serif",Font.PLAIN,14));
				table1.setForeground(new Color(0,0,139));
				
				
			} catch (SQLException e) {
				e.printStackTrace();
			}  finally{
	  	             try{
	  	                 rs.close();
	  	                 ps.close();
	  	             }catch(Exception ex){
	  	                  ex.getStackTrace();
	  	             }}
				}catch(Exception ess){
					JOptionPane.showMessageDialog(null, ess.getMessage());
				}
			}
			
		});
		
		

		
		field.addKeyListener(new KeyAdapter(){
			public void keyReleased(KeyEvent argo){
				
				try{	
				
				String mudi=field.getText();
				  String s="Select FirstName as 'FIRSTNAME',LastName as 'LASTNAME',Username as 'USERNAME',Password as 'PASSWORD',Level as 'LEVEL',Subject as 'SUBJECT',Class as 'CLASS' from Account  where FirstName LIKE ? or LastName LIKE ? or Username LIKE ? or Password LIKE ? or Level LIKE ?  or Subject LIKE ? or Class LIKE ?";
				                          
				  try {
				
				ps=con.prepareStatement(s);
				ps.setString(1, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(2, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(3, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(4, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(5, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(6, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				ps.setString(7, "%" +  mudi.replaceAll("^\\s+|\\s+$", "")+ "%");
				
				rs=ps.executeQuery();
				table.setModel(DbUtils.resultSetToTableModel(rs));
				table.setFont(new Font("serif",Font.PLAIN,14));
				table.setForeground(new Color(0,0,139));
				
				
			} catch (SQLException e) {
				e.printStackTrace();
			}  finally{
	  	             try{
	  	                 rs.close();
	  	                 ps.close();
	  	             }catch(Exception ex){
	  	                  ex.getStackTrace();
	  	             }}
				}catch(Exception ess){
					JOptionPane.showMessageDialog(null, ess.getMessage());
				}
			}
			
		});
		
	
	
	
	}

	private void Class_View() {

   try {
	   String v="";
	   
	   if(value.equals("Form I")) {
		   
            v="FORM I";
		

		  
	   }
	   else if(value.equals("Form II")) {

		   
            v="FORM II";
		

		  
	   }  else if(value.equals("Form III")) {

		   
           v="FORM III";
			
	  
		   
		  
	   }
	   else if(value.equals("Form IV")) {
		   
          v="FORM IV";
			
		  
	   }
	   
	   String sql1="Select id as 'STU_ID',fname as 'FIRSTNAME',mname as 'MIDDLENAME',lname as 'LASTNAME',phone as 'PHONE',gender as 'GENDER',class as 'CLASS' from Ouser where Ouser.class= '"+v+"' ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC";
		ps=con.prepareStatement(sql1);
		rs=ps.executeQuery();
		table1.setModel(DbUtils.resultSetToTableModel(rs));
		table1.setFont(new Font("serif",Font.PLAIN,14));
		table1.setForeground(new Color(0,0,139));


	   
	   
   }catch(Exception ex) {
	   
	   JOptionPane.showMessageDialog(null, ex.getMessage());
   }
		
	}

	private void Form_Term() {
		
		update1();
		
		try {



			text();
			
			
			int result1 = JOptionPane.showConfirmDialog(null, p57, "Edit ",   JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
			
			if(result1==JOptionPane.OK_OPTION){
				
				
					String sql="update  detail set  info='"+area1.getText()+"' where rowid= '"+2+"'  ";
					
						ps=con.prepareStatement(sql);
						ps.execute();	
						//JOptionPane.showMessageDialog(b1,"Success !");
						
					}
					
				
					
			String rsa="select * from Remark_O where rid='A' ";
			ps=con.prepareStatement(rsa);
			ResultSet rsaa=ps.executeQuery();
			
			String rsb="select * from Remark_O where rid='B' ";
			ps=con.prepareStatement(rsb);
			ResultSet rsbb=ps.executeQuery();
			
			String rsc="select * from Remark_O where rid='C' ";
			ps=con.prepareStatement(rsc);
			ResultSet rscc=ps.executeQuery();
			
			String rsd="select * from Remark_O where rid='D' ";
			ps=con.prepareStatement(rsd);
			ResultSet rsdd=ps.executeQuery();
			
			String rsf="select * from Remark_O where rid='F' ";
			ps=con.prepareStatement(rsf);
			ResultSet rsff=ps.executeQuery();
			
			
			String sqll = "select * from Grade_O";
			ps = con.prepareStatement(sqll);
			ResultSet rs5 = ps.executeQuery();

			Double g1 = 0.0, g2 = 0.0, g3 = 0.0, g4 = 0.0, g5 = 0.0, g6 = 0.0, g7 = 0.0, g8 = 0.0, g9 = 0.0,
					g10 = 0.0;
			g1 = rs5.getDouble("g1");
			g2 = rs5.getDouble("g2");
			g3 = rs5.getDouble("g3");
			g4 = rs5.getDouble("g4");
			g5 = rs5.getDouble("g5");
			g6 = rs5.getDouble("g6");
			g7 = rs5.getDouble("g7");
			g8 = rs5.getDouble("g8");
			g9 = rs5.getDouble("g9");
			g10 = rs5.getDouble("g10");
	

		int result = JOptionPane.showConfirmDialog(null,pa9, "Select",
			        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
	
		
		String sql33 = "Select tid from Term where tname= '" + box45.getSelectedItem().toString() + "'  ";
		ps = con.prepareStatement(sql33);
		ResultSet rs33 = ps.executeQuery();

		
		String sql="Select info from detail where id= '"+1+"' ";
		ps=con.prepareStatement(sql);
		rs=ps.executeQuery();

	
		String tid=rs33.getString("tid");
		
		String tx="";
		
		if(tid.equals("1")) {
			
			tx="MUHULA WA KWANZA";
			
		}else {
			
		    tx="MUHULA WA PILI";
			
		}
		
		String sql333="Select info from detail where id= '"+1+"' ";
		ps=con.prepareStatement(sql333);
		ResultSet rsm=ps.executeQuery();
		
		
		String ss = "select count(id) from Ave_MarkT where tid ='" + tid + "' and class='"
				+ box44.getSelectedItem().toString() + "' and year='" + box46.getSelectedItem().toString()
				+ "' ";
		ps = con.prepareStatement(ss);
		ResultSet rs0 = ps.executeQuery();
		

		int count1 = Integer.parseInt(rs0.getString("count(id)"));
		
		String sq=" SELECT Ave_MarkT.id,fname,lname,gender,Ouser.class,mname,Ave_MarkT.id,div,total,point,ave,RANK () OVER (  order by case when ave = '-' then 1 else 0 end, ave DESC ) rank "
		       		+ "FROM Ave_MarkT "
		       		+ "INNER JOIN Ouser ON Ouser.id = Ave_MarkT.id "
		       		+ "where  Ave_MarkT.tid ='"+tid+"' and Ouser.class='"+box44.getSelectedItem().toString()+"' and Ave_MarkT.year='"+box46.getSelectedItem().toString()+"'  ";
		
			 	    ps=con.prepareStatement(sq);
			 	    ResultSet rr=ps.executeQuery();
	    
		
			 	 
					
		
		if(result==JOptionPane.OK_OPTION) {
			
			
			if(count1>0)	{
				
				
				
				String sqlll="update  detail set  info='"+area1.getText()+"' where rowid= '"+2+"'  ";
				ps=con.prepareStatement(sqlll);
				ps.execute();  
				
				//JOptionPane.showMessageDialog(b1,"Success !");
				
				
				  String civm="";String civt="";Double civmd=0.0;Double civtd=0.0;Double civa=0.0;String civ="";
		    	  String hism="";String hist="";Double hismd=0.0;Double histd=0.0;Double hisa=0.0;String his="";
		    	  String geom="";String geot="";Double geomd=0.0;Double geotd=0.0;Double geoa=0.0;String geo="";
		    	  String biblem="";String biblet="";Double biblemd=0.0;Double bibletd=0.0;Double biblea=0.0;String bible="";
		    	  String dinim="";String dinit="";Double dinimd=0.0;Double dinitd=0.0;Double dinia=0.0;String dini="";
		    	  String artm="";String artt="";Double artmd=0.0;Double arttd=0.0;Double arta=0.0;String art="";
		    	  String musicm="";String musict="";Double musicmd=0.0;Double musictd=0.0;Double musica=0.0;String music="";
		    	  String edum="";String edut="";Double edumd=0.0;Double edutd=0.0;Double edua=0.0;String edu="";
		    	  String aram="";String arat="";Double aramd=0.0;Double aratd=0.0;Double araa=0.0;String ara="";
		    	  String phym="";String phyt="";Double phymd=0.0;Double phytd=0.0;Double phya=0.0;String phy="";
		    	  String chem="";String chet="";Double chemd=0.0;Double chetd=0.0;Double chea=0.0;String che="";
		    	  String biom="";String biot="";Double biomd=0.0;Double biotd=0.0;Double bioa=0.0;String bio="";
		    	  String kiswm="";String kiswt="";Double kiswmd=0.0;Double kiswtd=0.0;Double kiswa=0.0;String kisw="";
		    	  String engm="";String engt="";Double engmd=0.0;Double engtd=0.0;Double enga=0.0;String eng="";
		    	  String frem="";String fret="";Double fremd=0.0;Double fretd=0.0;Double frea=0.0;String fre="";
		    	  String litm="";String litt="";Double litmd=0.0;Double littd=0.0;Double lita=0.0;String lit="";
		    	  String agrim="";String agrit="";Double agrimd=0.0;Double agritd=0.0;Double agria=0.0;String agri="";
		    	  String itm="";String itt="";Double itmd=0.0;Double ittd=0.0;Double ita=0.0;String it="";
		    	  String mathm="";String matht="";Double mathmd=0.0;Double mathtd=0.0;Double matha=0.0;String math="";
		    	  String admm="";String admt="";Double admmd=0.0;Double admtd=0.0;Double adma=0.0;String adm="";
		    	  String foodm="";String foodt="";Double foodmd=0.0;Double foodtd=0.0;Double fooda=0.0;String food="";
		    	  String textilem="";String textilet="";Double textilemd=0.0;Double textiletd=0.0;Double textilea=0.0;String textile="";
		    	  String comm="";String comt="";Double commd=0.0;Double comtd=0.0;Double coma=0.0;String com="";
		    	  String bookm="";String bookt="";Double bookmd=0.0;Double booktd=0.0;Double booka=0.0;String book="";
		    	  String buildm="";String buildt="";Double buildmd=0.0;Double buildtd=0.0;Double builda=0.0;String build="";
		    	  String archm="";String archt="";Double archmd=0.0;Double archtd=0.0;Double archa=0.0;String arch="";
		    	  String surveym="";String surveyt="";Double surveymd=0.0;Double surveytd=0.0;Double surveya=0.0;String survey="";
		    	  String carpm="";String carpt="";Double carpmd=0.0;Double carptd=0.0;Double carpa=0.0;String carp="";
		    	  String brickm="";String brickt="";Double brickmd=0.0;Double bricktd=0.0;Double bricka=0.0;String brick="";
		    	  String paintm="";String paintt="";Double paintmd=0.0;Double painttd=0.0;Double painta=0.0;String paint="";
		    	  String plumbm="";String plumbt="";Double plumbmd=0.0;Double plumbtd=0.0;Double plumba=0.0;String plumb="";
		    	  String electm="";String electt="";Double electmd=0.0;Double electtd=0.0;Double electa=0.0;String elect="";
		    	  String engineerm="";String engineert="";Double engineermd=0.0;Double engineertd=0.0;Double engineera=0.0;String engineer="";
		    	  String radiom="";String radiot="";Double radiomd=0.0;Double radiotd=0.0;Double radioa=0.0;String radio="";
		    	  String draughtm="";String draughtt="";Double draughtmd=0.0;Double draughttd=0.0;Double draughta=0.0;String draught="";
		    	  String refm="";String reft="";Double refmd=0.0;Double reftd=0.0;Double refa=0.0;String ref="";
		    	  String plantm="";String plantt="";Double plantmd=0.0;Double planttd=0.0;Double planta=0.0;String plant="";
		    	  String workm="";String workt="";Double workmd=0.0;Double worktd=0.0;Double worka=0.0;String work="";
		    	  String motorm="";String motort="";Double motormd=0.0;Double motortd=0.0;Double motora=0.0;String motor="";
		    	  String weldingm="";String weldingt="";Double weldingmd=0.0;Double weldingtd=0.0;Double weldinga=0.0;String welding="";
		    	  String fitm="";String fitt="";Double fitmd=0.0;Double fittd=0.0;Double fita=0.0;String fit="";
		    	  String autom="";String autot="";Double automd=0.0;Double autotd=0.0;Double autoa=0.0;String auto="";
		    	  String mechanicm="";String mechanict="";Double mechanicmd=0.0;Double mechanictd=0.0;Double mechanica=0.0;String mechanic="";
		    	  String foundrym="";String foundryt="";Double foundrymd=0.0;Double foundrytd=0.0;Double foundrya=0.0;String foundry="";

		    	  
		    	    String m0="";String m1="";String m2="";String m3="";String m4="";String m5="";String m6="";String m7="";String m8="";String m9="";
					String m10="";String m11="";String m12="";String m13="";String m14="";String m15="";String m16="";String m17="";String m18="";String m19="";
					String m20="";String m21="";String m22="";String m23="";String m24="";String m25="";String m26="";String m27="";String m28="";String m29="";
					String m30="";String m31="";String m32="";String m33="";String m34="";String m35="";String m36="";String m37="";String m38="";String m39="";
					String m40="";String m41="";String m42="";String m43="";
					
					
					Double dm0=0.0;Double dm1=0.0;Double dm2=0.0;Double dm3=0.0;Double dm4=0.0;Double dm5=0.0;Double dm6=0.0;Double dm7=0.0;Double dm8=0.0;Double dm9=0.0;
					Double dm10=0.0;Double dm11=0.0;Double dm12=0.0;Double dm13=0.0;Double dm14=0.0;Double dm15=0.0;Double dm16=0.0;Double dm17=0.0;Double dm18=0.0;Double dm19=0.0;
					Double dm20=0.0;Double dm21=0.0;Double dm22=0.0;Double dm23=0.0;Double dm24=0.0;Double dm25=0.0;Double dm26=0.0;Double dm27=0.0;Double dm28=0.0;Double dm29=0.0;
					Double dm30=0.0;Double dm31=0.0;Double dm32=0.0;Double dm33=0.0;Double dm34=0.0;Double dm35=0.0;Double dm36=0.0;Double dm37=0.0;Double dm38=0.0;Double dm39=0.0;
					Double dm40=0.0;Double dm41=0.0;Double dm42=0.0;Double dm43=0.0;
					
					
					
					String gr0="";String gr1="";String gr2="";String gr3="";String gr4="";String gr5="";String gr6="";String gr7="";String gr8="";String gr9="";
					String gr10="";String gr11="";String gr12="";String gr13="";String gr14="";String gr15="";String gr16="";String gr17="";String gr18="";String gr19="";
					String gr20="";String gr21="";String gr22="";String gr23="";String gr24="";String gr25="";String gr26="";String gr27="";String gr28="";String gr29="";
					String gr30="";String gr31="";String gr32="";String gr33="";String gr34="";String gr35="";String gr36="";String gr37="";String gr38="";String gr39="";
					String gr40="";String gr41="";String gr42="";String gr43="";
					
					String br0="";String br1="";String br2="";String br3="";String br4="";String br5="";String br6="";String br7="";String br8="";String br9="";
					String br10="";String br11="";String br12="";String br13="";String br14="";String br15="";String br16="";String br17="";String br18="";String br19="";
					String br20="";String br21="";String br22="";String br23="";String br24="";String br25="";String br26="";String br27="";String br28="";String br29="";
					String br30="";String br31="";String br32="";String br33="";String br34="";String br35="";String br36="";String br37="";String br38="";String br39="";
					String br40="";String br41="";String br42="";String br43="";
					

				int exam1=0,exam2=0;
				
				if(tid.equals("1")) {
					exam1=1;exam2=2;
					//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
					
				}else {
					exam1=1;exam2=3;
					//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
					
				}
				  
				PdfDocument pdf = new PdfDocument(
						new PdfWriter("Report "+box44.getSelectedItem().toString().replaceAll("'", "''")+"~"+box45.getSelectedItem().toString().replaceAll("'", "''")+"~"+box46.getSelectedItem().toString().replaceAll("'", "''")+".pdf"));
			
				Document document = new Document(pdf, PageSize.A4);

				Table mudi = new Table(1);
					mudi.setWidth(500).setAutoLayout();
				//    mudi = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
				    
				    Table mudi1 = new Table(20);
				    mudi1.setWidth(500).setAutoLayout();
				
				    Table mudi2 = new Table(1);
					mudi2.setWidth(500).setAutoLayout();
					
					Table mudi3 = new Table(1);
					mudi2.setWidth(500).setAutoLayout();
					
					ImageData data = ImageDataFactory.create("image/other.png");
					Image image = new Image(data);
					image.setAutoScale(true);
					image.setAutoScale(true);
					image.setBold();
					Cell c0 = new Cell().add(image);
					 Cell c1 =new Cell();
	          	   Cell cc1=new Cell();
	           	 Paragraph para1 =new Paragraph("");	
	           	 Paragraph para2 =new Paragraph("");	 
	           	 Paragraph para3 =new Paragraph("");	
	           	 Paragraph para4 =new Paragraph("");
	         	 Paragraph para5 =new Paragraph("");	
	           	Paragraph para6 =new Paragraph("");	
	          	 Paragraph para7 =new Paragraph("");	 
	          	 Paragraph para8 =new Paragraph("");	
	          	 Paragraph para9 =new Paragraph("");
	          	 Paragraph para10 =new Paragraph("");	
	          	 Paragraph para11 =new Paragraph("");
				      
	          
	  	      
	                   while(rr.next()) {
	                	   
	                	    	 mudi = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
	                    	   mudi1 = new Table(UnitValue.createPercentArray(20)).useAllAvailableWidth();
	                    	   mudi2 = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
	                    	   mudi3 = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
	                		
	                	       String sqll1 = "Select Mark_O.id,Mark_O.mark,Subject_O.sname, "
	   							+ "max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as civm ,max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as civt ,"
	   							+ "max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as hism,max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as hist,"
	   							+ "max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as geom, max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as geot, "
	   							+ "max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biblem ,max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biblet ,"
	   							+ "max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as dinim,max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as dinit,  "
	   							+ "max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as artm, max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as artt, "
	   							+ "max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as musicm ,max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as musict ,"
	   							+ "max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as edum ,max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as edut ,"
	   							+ "max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as kiswm, max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as kiswt, "
	   							+ "max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engm ,max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as engt ,"
	   							+ "max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as frem, max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fret, "
	   							+ "max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as litm,max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as litt,  "
	   							+ "max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as aram ,max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as arat ,"
	   							+ "max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as phym, max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as phyt, "
	   							+ "max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as chem, max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as chet, "
	   							+ "max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biom ,max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biot ,"
	   							+ "max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as agrim, max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as agrit, "
	   							+ "max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as itm, max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as itt, "
	   							+ "max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mathm ,max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as matht ,"
	   							+ "max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as admm, max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as admt, "
	   							+ "max(CASE WHEN Mark_O.sid = '051'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foodm, max(CASE WHEN Mark_O.sid = '051' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as foodt, "
	   							+ "max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as textilem,max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as textilet,"
	   							+ "max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as comm,max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as comt,  "
	   							+ "max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as bookm, max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as bookt, "
	   							+ "max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as buildm,max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as buildt,"
	   							+ "max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as archm, max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as archt, "
	   							+ "max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as surveym, max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as surveyt, "
	   							+ "max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as carpm ,max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as carpt ,"
	   							+ "max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as brickm, max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as brickt, "
	   							+ "max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as paintm, max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as paintt, "
	   							+ "max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plumbm,max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plumbt,  "
	   							+ "max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as electm, max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as electt, "
	   							+ "max(CASE WHEN Mark_O.sid = '082'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engineerm ,max(CASE WHEN Mark_O.sid = '082' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as engineert ,"
	   							+ "max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as radiom, max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as radiot, "
	   							+ "max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as draughtm, max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as draughtt, "
	   							+ "max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as refm,max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as reft,  "
	   							+ "max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plantm, max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plantt, "
	   							+ "max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as workm ,max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as workt ,"
	   							+ "max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as motorm, max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as motort, "
	   							+ "max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as weldingm, max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as weldingt, "
	   							+ "max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as fitm, max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fitt, "
	   							+ "max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as autom, max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as autot, "
	   							+ "max(CASE WHEN Mark_O.sid = '097'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mechanicm, max(CASE WHEN Mark_O.sid = '097' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as mechanict, "
	   							+ "max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foundrym ,max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as foundryt "
	   							+ "from Mark_O " + "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
	   							+ "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid " + " where Mark_O.tid ='"
	   							+ tid + "' and Mark_O.class='" + box44.getSelectedItem().toString()
	   							+ "' and Mark_O.year='" + box46.getSelectedItem().toString() + "' and Mark_O.id='"
	   							+ rr.getString("id") + "'  ";

	   					ps = con.prepareStatement(sqll1);
	   					rs = ps.executeQuery();

	   					civm = rs.getString("civm");civt = rs.getString("civt");civmd = 0.0;civtd = 0.0;civa = 0.0;civ = "";
	   					hism = rs.getString("hism");hist = rs.getString("hist");hismd = 0.0;histd = 0.0;hisa = 0.0;his = "";
	   					geom = rs.getString("geom");geot = rs.getString("geot");geomd = 0.0;geotd = 0.0;geoa = 0.0;geo = "";
	   					biblem = rs.getString("biblem");biblet = rs.getString("biblet");biblemd = 0.0;bibletd = 0.0;biblea = 0.0;bible = "";
	   					dinim = rs.getString("dinim");dinit = rs.getString("dinit");dinimd = 0.0;dinitd = 0.0;dinia = 0.0;dini = "";
	   					artm = rs.getString("artm");artt = rs.getString("artt");artmd = 0.0;arttd = 0.0;arta = 0.0;art = "";
	   					musicm = rs.getString("musicm");musict = rs.getString("musict");musicmd = 0.0;musictd = 0.0;musica = 0.0;music = "";
	                    edum = rs.getString("edum");edut = rs.getString("edut");edumd = 0.0;edutd = 0.0;edua = 0.0;edu = "";
	   					aram = rs.getString("aram");arat = rs.getString("arat");aramd = 0.0;aratd = 0.0;araa = 0.0;ara = "";
	   					phym = rs.getString("phym");phyt = rs.getString("phyt");phymd = 0.0;phytd = 0.0;phya = 0.0;phy = "";
	   					chem = rs.getString("chem");chet = rs.getString("chet");chemd = 0.0;chetd = 0.0;chea = 0.0;che = "";
	   					biom = rs.getString("biom");biot = rs.getString("biot");biomd = 0.0;biotd = 0.0;bioa = 0.0;bio = "";
	   	                kiswm = rs.getString("kiswm");kiswt = rs.getString("kiswt");kiswmd = 0.0;kiswtd = 0.0;kiswa = 0.0;kisw = "";
	   					engm = rs.getString("engm");engt = rs.getString("engt");engmd = 0.0;engtd = 0.0;enga = 0.0;eng = "";
	   					frem = rs.getString("frem");fret = rs.getString("fret");fremd = 0.0;fretd = 0.0;frea = 0.0;fre = "";
	   					litm = rs.getString("litm");litt = rs.getString("litt");litmd = 0.0;littd = 0.0;lita = 0.0;lit = "";
	   					agrim = rs.getString("agrim");agrit = rs.getString("agrit");agrimd = 0.0;agritd = 0.0;agria = 0.0;agri = "";
	   					itm = rs.getString("itm");itt = rs.getString("itt");itmd = 0.0;ittd = 0.0;ita = 0.0;it = "";
	   			        mathm = rs.getString("mathm");matht = rs.getString("matht");mathmd = 0.0;mathtd = 0.0;matha = 0.0;math = "";
	   					admm = rs.getString("admm");admt = rs.getString("admt");admmd = 0.0;admtd = 0.0;adma = 0.0;adm = "";
	   					foodm = rs.getString("foodm");foodt = rs.getString("foodt");foodmd = 0.0;foodtd = 0.0;fooda = 0.0;food = "";
	   					textilem = rs.getString("textilem");textilet = rs.getString("textilet");textilemd = 0.0;textiletd = 0.0;textilea = 0.0;textile = "";
	   					comm = rs.getString("comm");comt = rs.getString("comt");commd = 0.0;comtd = 0.0;coma = 0.0;com = "";
	   					bookm = rs.getString("bookm");bookt = rs.getString("bookt");bookmd = 0.0;booktd = 0.0;booka = 0.0;book = "";
	   					buildm = rs.getString("buildm");buildt = rs.getString("buildt");buildmd = 0.0;buildtd = 0.0;builda = 0.0;build = "";
	   					archm = rs.getString("archm");archt = rs.getString("archt");archmd = 0.0;archtd = 0.0;archa = 0.0;arch = "";
	   					surveym = rs.getString("surveym");surveyt = rs.getString("surveyt");surveymd = 0.0;surveytd = 0.0;surveya = 0.0;survey = "";
	   					carpm = rs.getString("carpm");carpt = rs.getString("carpt");carpmd = 0.0;carptd = 0.0;carpa = 0.0;carp = "";
	   					brickm = rs.getString("brickm");brickt = rs.getString("brickt");brickmd = 0.0;bricktd = 0.0;bricka = 0.0;brick = "";
	   					paintm = rs.getString("paintm");paintt = rs.getString("paintt");paintmd = 0.0;painttd = 0.0;painta = 0.0;paint = "";
	   					plumbm = rs.getString("plumbm");plumbt = rs.getString("plumbt");plumbmd = 0.0;plumbtd = 0.0;plumba = 0.0;plumb = "";
	   					electm = rs.getString("electm");electt = rs.getString("electt");electmd = 0.0;electtd = 0.0;electa = 0.0;elect = "";
	   					engineerm = rs.getString("engineerm");engineert = rs.getString("engineert");engineermd = 0.0;engineertd = 0.0;engineera = 0.0;engineer = "";
	   					radiom = rs.getString("radiom");radiot = rs.getString("radiot");radiomd = 0.0;radiotd = 0.0;radioa = 0.0;radio = "";
	   					draughtm = rs.getString("draughtm");draughtt = rs.getString("draughtt");draughtmd = 0.0;draughttd = 0.0;draughta = 0.0;draught = "";
	   					refm = rs.getString("refm");reft = rs.getString("reft");refmd = 0.0;reftd = 0.0;refa = 0.0;ref = "";
	   					plantm = rs.getString("plantm");plantt = rs.getString("plantt");plantmd = 0.0;planttd = 0.0;planta = 0.0;plant = "";
	   					workm = rs.getString("workm");workt = rs.getString("workt");workmd = 0.0;worktd = 0.0;worka = 0.0;work = "";
	   					motorm = rs.getString("motorm");motort = rs.getString("motort");motormd = 0.0;motortd = 0.0;motora = 0.0;motor = "";
	   					weldingm = rs.getString("weldingm");weldingt = rs.getString("weldingt");weldingmd = 0.0;weldingtd = 0.0;weldinga = 0.0;welding = "";
	   					fitm = rs.getString("fitm");fitt = rs.getString("fitt");fitmd = 0.0;fittd = 0.0;fita = 0.0;fit = "";
	   					autom = rs.getString("autom");autot = rs.getString("autot");automd = 0.0;autotd = 0.0;autoa = 0.0;auto = "";
	   					mechanicm = rs.getString("mechanicm");mechanict = rs.getString("mechanict");mechanicmd = 0.0;mechanictd = 0.0;mechanica = 0.0;mechanic = "";
	   					foundrym = rs.getString("foundrym");foundryt = rs.getString("foundryt");foundrymd = 0.0;foundrytd = 0.0;foundrya = 0.0;foundry = "";

	   					if ((civm == null || civm.isEmpty() || civm.equals("-"))
	   							&& (civt == null || civt.isEmpty() || civt.equals("-"))) {

	   						if ((civm == null || civm.isEmpty()) && (civt == null || civt.isEmpty())) {

	   							civ = "";

	   						} else {

	   							civ = "-";
	   						}

	   					} else {

	   						if ((civm != null) && (!civm.isEmpty()) && (!civm.equals("-"))) {

	   							civmd = Double.parseDouble(rs.getString("civm"));

	   						}

	   						if ((civt != null) && (!civt.isEmpty()) && (!civt.equals("-"))) {

	   							civtd = Double.parseDouble(rs.getString("civt"));

	   						}

	   						civa = civmd + civtd;
	   						civ = civa.toString();
	   					}

	   					if (civ.isEmpty() || civ.equals(null)) {

	   						m0 = "";
	   						gr0 = "";

	   					} else {

	   						if (civ.equals("-")) {

	   							m0 = "-";
	   							gr0 = "-";

	   						} else {

	   							m0 = civ;
	   							dm0 = Double.parseDouble(civ);

	   							if (dm0 >= g1 && dm0 <= g2) {
	   								gr0 = "A";br0 = rsaa.getString("inf");
	   							} else if (dm0 >= g3 && dm0 <= g4) {
	   								gr0 = "B";br0 = rsbb.getString("inf");
	   							} else if (dm0 >= g5 && dm0 <= g6) {
	   								gr0 = "C";br0 = rscc.getString("inf");
	   							} else if (dm0 >= g7 && dm0 <= g8) {
	   								gr0 = "D";br0 = rsdd.getString("inf");
	   							} else if (dm0 >= g9 && dm0 <= g10) {
	   								gr0 = "F";br0 = rsff.getString("inf");
	   							}

	   						}

	   					}
	  						
	   					if ((hism == null || hism.isEmpty() || hism.equals("-"))
	   							&& (hist == null || hist.isEmpty() || hist.equals("-"))) {

	   						if ((hism == null || hism.isEmpty()) && (hist == null || hist.isEmpty())) {

	   							his = "";

	   						} else {

	   							his = "-";
	   						}

	   					} else {

	   						if ((hism != null) && (!hism.isEmpty()) && (!hism.equals("-"))) {

	   							hismd = Double.parseDouble(rs.getString("hism"));

	   						}

	   						if ((hist != null) && (!hist.isEmpty()) && (!hist.equals("-"))) {

	   							histd = Double.parseDouble(rs.getString("hist"));

	   						}

	   						hisa = hismd + histd;
	   						his = hisa.toString();
	   					}

	   					if (his.isEmpty() || his.equals(null)) {

	   						m1 = "";
	   						gr1 = "";

	   					} else {

	   						if (his.equals("-")) {

	   							m1 = "-";
	   							gr1 = "-";

	   						} else {

	   							m1 = his;
	   							dm1 = Double.parseDouble(his);

	   							if (dm1 >= g1 && dm1 <= g2) {
	   								gr1 = "A";br1 = rsaa.getString("inf");
	   							} else if (dm1 >= g3 && dm1 <= g4) {
	   								gr1 = "B";br1 = rsbb.getString("inf");
	   							} else if (dm1 >= g5 && dm1 <= g6) {
	   								gr1 = "C";br1 = rscc.getString("inf");
	   							} else if (dm1 >= g7 && dm1 <= g8) {
	   								gr1 = "D";br1 = rsdd.getString("inf");
	   							} else if (dm1 >= g9 && dm1 <= g10) {
	   								gr1 = "F";br1 = rsff.getString("inf");
	   							}

	   						}

	   					}
	  						
	   					
	   					if ((geom == null || geom.isEmpty() || geom.equals("-"))
	   							&& (geot == null || geot.isEmpty() || geot.equals("-"))) {

	   						if ((geom == null || geom.isEmpty()) && (geot == null || geot.isEmpty())) {

	   							geo = "";

	   						} else {

	   							geo = "-";
	   						}

	   					} else {

	   						if ((geom != null) && (!geom.isEmpty()) && (!geom.equals("-"))) {

	   							geomd = Double.parseDouble(rs.getString("geom"));

	   						}

	   						if ((geot != null) && (!geot.isEmpty()) && (!geot.equals("-"))) {

	   							geotd = Double.parseDouble(rs.getString("geot"));

	   						}

	   						geoa = geomd + geotd;
	   						geo = geoa.toString();
	   					}

	   					if (geo.isEmpty() || geo.equals(null)) {

	   						m2 = "";
	   						gr2 = "";

	   					} else {

	   						if (geo.equals("-")) {

	   							m2 = "-";
	   							gr2 = "-";

	   						} else {

	   							m2 = geo;
	   							dm2 = Double.parseDouble(geo);

	   							if (dm2 >= g1 && dm2 <= g2) {
	   								gr2 = "A";br2 = rsaa.getString("inf");
	   							} else if (dm2 >= g3 && dm2 <= g4) {
	   								gr2 = "B";br2 = rsbb.getString("inf");
	   							} else if (dm2 >= g5 && dm2 <= g6) {
	   								gr2 = "C";br2 = rscc.getString("inf");
	   							} else if (dm2 >= g7 && dm2 <= g8) {
	   								gr2 = "D";br2 = rsdd.getString("inf");
	   							} else if (dm2 >= g9 && dm2 <= g10) {
	   								gr2 = "F";br2 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((biblem == null || biblem.isEmpty() || biblem.equals("-"))
	   							&& (biblet == null || biblet.isEmpty() || biblet.equals("-"))) {

	   						if ((biblem == null || biblem.isEmpty()) && (biblet == null || biblet.isEmpty())) {

	   							bible = "";

	   						} else {

	   							bible = "-";
	   						}

	   					} else {

	   						if ((biblem != null) && (!biblem.isEmpty()) && (!biblem.equals("-"))) {

	   							biblemd = Double.parseDouble(rs.getString("biblem"));

	   						}

	   						if ((biblet != null) && (!biblet.isEmpty()) && (!biblet.equals("-"))) {

	   							bibletd = Double.parseDouble(rs.getString("biblet"));

	   						}

	   						biblea = biblemd + bibletd;
	   						bible = biblea.toString();
	   					}

	   					if (bible.isEmpty() || bible.equals(null)) {

	   						m3 = "";
	   						gr3 = "";

	   					} else {

	   						if (bible.equals("-")) {

	   							m3 = "-";
	   							gr3 = "-";

	   						} else {

	   							m3 = bible;
	   							dm3 = Double.parseDouble(bible);

	   							if (dm3 >= g1 && dm3 <= g2) {
	   								gr3 = "A";br3 = rsaa.getString("inf");
	   							} else if (dm3 >= g3 && dm3 <= g4) {
	   								gr3 = "B";br3 = rsbb.getString("inf");
	   							} else if (dm3 >= g5 && dm3 <= g6) {
	   								gr3 = "C";br3 = rscc.getString("inf");
	   							} else if (dm3 >= g7 && dm3 <= g8) {
	   								gr3 = "D";br3 = rsdd.getString("inf");
	   							} else if (dm3 >= g9 && dm3 <= g10) {
	   								gr3 = "F";br3 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					
	   					if ((dinim == null || dinim.isEmpty() || dinim.equals("-"))
	   							&& (dinit == null || dinit.isEmpty() || dinit.equals("-"))) {

	   						if ((dinim == null || dinim.isEmpty()) && (dinit == null || dinit.isEmpty())) {

	   							dini = "";

	   						} else {

	   							dini = "-";
	   						}

	   					} else {

	   						if ((dinim != null) && (!dinim.isEmpty()) && (!dinim.equals("-"))) {

	   							dinimd = Double.parseDouble(rs.getString("dinim"));

	   						}

	   						if ((dinit != null) && (!dinit.isEmpty()) && (!dinit.equals("-"))) {

	   							dinitd = Double.parseDouble(rs.getString("dinit"));

	   						}

	   						dinia = dinimd + dinitd;
	   						dini = dinia.toString();
	   					}

	   					if (dini.isEmpty() || dini.equals(null)) {

	   						m4 = "";
	   						gr4 = "";

	   					} else {

	   						if (dini.equals("-")) {

	   							m4 = "-";
	   							gr4 = "-";

	   						} else {

	   							m4 = dini;
	   							dm4 = Double.parseDouble(dini);

	   							if (dm4 >= g1 && dm4 <= g2) {
	   								gr4 = "A";br4 = rsaa.getString("inf");
	   							} else if (dm4 >= g3 && dm4 <= g4) {
	   								gr4 = "B";br4 = rsbb.getString("inf");
	   							} else if (dm4 >= g5 && dm4 <= g6) {
	   								gr4 = "C";br4 = rscc.getString("inf");
	   							} else if (dm4 >= g7 && dm4 <= g8) {
	   								gr4 = "D";br4 = rsdd.getString("inf");
	   							} else if (dm4 >= g9 && dm4 <= g10) {
	   								gr4 = "F";br4 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((artm == null || artm.isEmpty() || artm.equals("-"))
	   							&& (artt == null || artt.isEmpty() || artt.equals("-"))) {

	   						if ((artm == null || artm.isEmpty()) && (artt == null || artt.isEmpty())) {

	   							art = "";

	   						} else {

	   							art = "-";
	   						}

	   					} else {

	   						if ((artm != null) && (!artm.isEmpty()) && (!artm.equals("-"))) {

	   							artmd = Double.parseDouble(rs.getString("artm"));

	   						}

	   						if ((artt != null) && (!artt.isEmpty()) && (!artt.equals("-"))) {

	   							arttd = Double.parseDouble(rs.getString("artt"));

	   						}

	   						arta = artmd + arttd;
	   						art = arta.toString();
	   					}

	   					if (art.isEmpty() || art.equals(null)) {

	   						m5 = "";
	   						gr5 = "";

	   					} else {

	   						if (art.equals("-")) {

	   							m5 = "-";
	   							gr5 = "-";

	   						} else {

	   							m5 = art;
	   							dm5 = Double.parseDouble(art);

	   							if (dm5 >= g1 && dm5 <= g2) {
	   								gr5 = "A";br5 = rsaa.getString("inf");
	   							} else if (dm5 >= g3 && dm5 <= g4) {
	   								gr5 = "B";br5 = rsbb.getString("inf");
	   							} else if (dm5 >= g5 && dm5 <= g6) {
	   								gr5 = "C";br5 = rscc.getString("inf");
	   							} else if (dm5 >= g7 && dm5 <= g8) {
	   								gr5 = "D";br5 = rsdd.getString("inf");
	   							} else if (dm5 >= g9 && dm5 <= g10) {
	   								gr5 = "F";br5 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((musicm == null || musicm.isEmpty() || musicm.equals("-"))
	   							&& (musict == null || musict.isEmpty() || musict.equals("-"))) {

	   						if ((musicm == null || musicm.isEmpty()) && (musict == null || musict.isEmpty())) {

	   							music = "";

	   						} else {

	   							music = "-";
	   						}

	   					} else {

	   						if ((musicm != null) && (!musicm.isEmpty()) && (!musicm.equals("-"))) {

	   							musicmd = Double.parseDouble(rs.getString("musicm"));

	   						}

	   						if ((musict != null) && (!musict.isEmpty()) && (!musict.equals("-"))) {

	   							musictd = Double.parseDouble(rs.getString("musict"));

	   						}

	   						musica = musicmd + musictd;
	   						music = musica.toString();
	   					}

	   					if (music.isEmpty() || music.equals(null)) {

	   						m6 = "";
	   						gr6 = "";

	   					} else {

	   						if (music.equals("-")) {

	   							m6 = "-";
	   							gr6 = "-";

	   						} else {

	   							m6 = music;
	   							dm6 = Double.parseDouble(music);

	   							if (dm6 >= g1 && dm6 <= g2) {
	   								gr6 = "A";br6 = rsaa.getString("inf");
	   							} else if (dm6 >= g3 && dm6 <= g4) {
	   								gr6 = "B";br6 = rsbb.getString("inf");
	   							} else if (dm6 >= g5 && dm6 <= g6) {
	   								gr6 = "C";br6 = rscc.getString("inf");
	   							} else if (dm6 >= g7 && dm6 <= g8) {
	   								gr6 = "D";br6 = rsdd.getString("inf");
	   							} else if (dm6 >= g9 && dm6 <= g10) {
	   								gr6 = "F";br6 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((edum == null || edum.isEmpty() || edum.equals("-"))
	   							&& (edut == null || edut.isEmpty() || edut.equals("-"))) {

	   						if ((edum == null || edum.isEmpty()) && (edut == null || edut.isEmpty())) {

	   							edu = "";

	   						} else {

	   							edu = "-";
	   						}

	   					} else {

	   						if ((edum != null) && (!edum.isEmpty()) && (!edum.equals("-"))) {

	   							edumd = Double.parseDouble(rs.getString("edum"));

	   						}

	   						if ((edut != null) && (!edut.isEmpty()) && (!edut.equals("-"))) {

	   							edutd = Double.parseDouble(rs.getString("edut"));

	   						}

	   						edua = edumd + edutd;
	   						edu = edua.toString();
	   					}

	   					if (edu.isEmpty() || edu.equals(null)) {

	   						m7 = "";
	   						gr7 = "";

	   					} else {

	   						if (edu.equals("-")) {

	   							m7 = "-";
	   							gr7 = "-";

	   						} else {

	   							m7 = edu;
	   							dm7 = Double.parseDouble(edu);

	   							if (dm7 >= g1 && dm7 <= g2) {
	   								gr7 = "A";br7 = rsaa.getString("inf");
	   							} else if (dm7 >= g3 && dm7 <= g4) {
	   								gr7 = "B";br7 = rsbb.getString("inf");
	   							} else if (dm7 >= g5 && dm7 <= g6) {
	   								gr7 = "C";br7 = rscc.getString("inf");
	   							} else if (dm7 >= g7 && dm7 <= g8) {
	   								gr7 = "D";br7 = rsdd.getString("inf");
	   							} else if (dm7 >= g9 && dm7 <= g10) {
	   								gr7 = "F";br7 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					
	   					if ((kiswm == null || kiswm.isEmpty() || kiswm.equals("-"))
	   							&& (kiswt == null || kiswt.isEmpty() || kiswt.equals("-"))) {

	   						if ((kiswm == null || kiswm.isEmpty()) && (kiswt == null || kiswt.isEmpty())) {

	   							kisw = "";

	   						} else {

	   							kisw = "-";
	   						}

	   					} else {

	   						if ((kiswm != null) && (!kiswm.isEmpty()) && (!kiswm.equals("-"))) {

	   							kiswmd = Double.parseDouble(rs.getString("kiswm"));

	   						}

	   						if ((kiswt != null) && (!kiswt.isEmpty()) && (!kiswt.equals("-"))) {

	   							kiswtd = Double.parseDouble(rs.getString("kiswt"));

	   						}

	   						kiswa = kiswmd + kiswtd;
	   						kisw = kiswa.toString();
	   					}

	   					if (kisw.isEmpty() || kisw.equals(null)) {

	   						m8 = "";
	   						gr8 = "";

	   					} else {

	   						if (kisw.equals("-")) {

	   							m8 = "-";
	   							gr8 = "-";

	   						} else {

	   							m8 = kisw;
	   							dm8 = Double.parseDouble(kisw);

	   							if (dm8 >= g1 && dm8 <= g2) {
	   								gr8 = "A";br8 = rsaa.getString("inf");
	   							} else if (dm8 >= g3 && dm8 <= g4) {
	   								gr8 = "B";br8 = rsbb.getString("inf");
	   							} else if (dm8 >= g5 && dm8 <= g6) {
	   								gr8 = "C";br8 = rscc.getString("inf");
	   							} else if (dm8 >= g7 && dm8 <= g8) {
	   								gr8 = "D";br8 = rsdd.getString("inf");
	   							} else if (dm8 >= g9 && dm8 <= g10) {
	   								gr8 = "F";br8 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((engm == null || engm.isEmpty() || engm.equals("-"))
	   							&& (engt == null || engt.isEmpty() || engt.equals("-"))) {

	   						if ((engm == null || engm.isEmpty()) && (engt == null || engt.isEmpty())) {

	   							eng = "";

	   						} else {

	   							eng = "-";
	   						}

	   					} else {

	   						if ((engm != null) && (!engm.isEmpty()) && (!engm.equals("-"))) {

	   							engmd = Double.parseDouble(rs.getString("engm"));

	   						}

	   						if ((engt != null) && (!engt.isEmpty()) && (!engt.equals("-"))) {

	   							engtd = Double.parseDouble(rs.getString("engt"));

	   						}

	   						enga = engmd + engtd;
	   						eng = enga.toString();
	   					}

	   					if (eng.isEmpty() || eng.equals(null)) {

	   						m9 = "";
	   						gr9 = "";

	   					} else {

	   						if (eng.equals("-")) {

	   							m9 = "-";
	   							gr9 = "-";

	   						} else {

	   							m9 = eng;
	   							dm9 = Double.parseDouble(eng);

	   							if (dm9 >= g1 && dm9 <= g2) {
	   								gr9 = "A";br9 = rsaa.getString("inf");
	   							} else if (dm9 >= g3 && dm9 <= g4) {
	   								gr9 = "B";br9 = rsbb.getString("inf");
	   							} else if (dm9 >= g5 && dm9 <= g6) {
	   								gr9 = "C";br9 = rscc.getString("inf");
	   							} else if (dm9 >= g7 && dm9 <= g8) {
	   								gr9 = "D";br9 = rsdd.getString("inf");
	   							} else if (dm9 >= g9 && dm9 <= g10) {
	   								gr9 = "F";br9 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					
	   					if ((frem == null || frem.isEmpty() || frem.equals("-"))
	   							&& (fret == null || fret.isEmpty() || fret.equals("-"))) {

	   						if ((frem == null || frem.isEmpty()) && (fret == null || fret.isEmpty())) {

	   							fre = "";

	   						} else {

	   							fre = "-";
	   						}

	   					} else {

	   						if ((frem != null) && (!frem.isEmpty()) && (!frem.equals("-"))) {

	   							fremd = Double.parseDouble(rs.getString("frem"));

	   						}

	   						if ((fret != null) && (!fret.isEmpty()) && (!fret.equals("-"))) {

	   							fretd = Double.parseDouble(rs.getString("fret"));

	   						}

	   						frea = fremd + fretd;
	   						fre = frea.toString();
	   					}

	   					if (fre.isEmpty() || fre.equals(null)) {

	   						m10 = "";
	   						gr10 = "";

	   					} else {

	   						if (fre.equals("-")) {

	   							m10 = "-";
	   							gr10 = "-";

	   						} else {

	   							m10 = fre;
	   							dm10 = Double.parseDouble(fre);

	   							if (dm10 >= g1 && dm10 <= g2) {
	   								gr10 = "A";br10 = rsaa.getString("inf");
	   							} else if (dm10 >= g3 && dm10 <= g4) {
	   								gr10 = "B";br10 = rsbb.getString("inf");
	   							} else if (dm10 >= g5 && dm10 <= g6) {
	   								gr10 = "C";br10 = rscc.getString("inf");
	   							} else if (dm10 >= g7 && dm10 <= g8) {
	   								gr10 = "D";br10 = rsdd.getString("inf");
	   							} else if (dm10 >= g9 && dm10 <= g10) {
	   								gr10 = "F";br10 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((litm == null || litm.isEmpty() || litm.equals("-"))
	   							&& (litt == null || litt.isEmpty() || litt.equals("-"))) {

	   						if ((litm == null || litm.isEmpty()) && (litt == null || litt.isEmpty())) {

	   							lit = "";

	   						} else {

	   							lit = "-";
	   						}

	   					} else {

	   						if ((litm != null) && (!litm.isEmpty()) && (!litm.equals("-"))) {

	   							litmd = Double.parseDouble(rs.getString("litm"));

	   						}

	   						if ((litt != null) && (!litt.isEmpty()) && (!litt.equals("-"))) {

	   							littd = Double.parseDouble(rs.getString("litt"));

	   						}

	   						lita = litmd + littd;
	   						lit = lita.toString();
	   					}

	   					if (lit.isEmpty() || lit.equals(null)) {

	   						m11 = "";
	   						gr11 = "";

	   					} else {

	   						if (lit.equals("-")) {

	   							m11 = "-";
	   							gr11 = "-";

	   						} else {

	   							m11 = lit;
	   							dm11 = Double.parseDouble(lit);

	   							if (dm11 >= g1 && dm11 <= g2) {
	   								gr11 = "A";br11 = rsaa.getString("inf");
	   							} else if (dm11 >= g3 && dm11 <= g4) {
	   								gr11 = "B";br11 = rsbb.getString("inf");
	   							} else if (dm11 >= g5 && dm11 <= g6) {
	   								gr11 = "C";br11 = rscc.getString("inf");
	   							} else if (dm11 >= g7 && dm11 <= g8) {
	   								gr11 = "D";br11 = rsdd.getString("inf");
	   							} else if (dm11 >= g9 && dm11 <= g10) {
	   								gr11 = "F";br11 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((aram == null || aram.isEmpty() || aram.equals("-"))
	   							&& (arat == null || arat.isEmpty() || arat.equals("-"))) {

	   						if ((aram == null || aram.isEmpty()) && (arat == null || arat.isEmpty())) {

	   							ara = "";

	   						} else {

	   							ara = "-";
	   						}

	   					} else {

	   						if ((aram != null) && (!aram.isEmpty()) && (!aram.equals("-"))) {

	   							aramd = Double.parseDouble(rs.getString("aram"));

	   						}

	   						if ((arat != null) && (!arat.isEmpty()) && (!arat.equals("-"))) {

	   							aratd = Double.parseDouble(rs.getString("arat"));

	   						}

	   						araa = aramd + aratd;
	   						ara = araa.toString();
	   					}

	   					if (ara.isEmpty() || ara.equals(null)) {

	   						m12 = "";
	   						gr12 = "";

	   					} else {

	   						if (ara.equals("-")) {

	   							m12 = "-";
	   							gr12 = "-";

	   						} else {

	   							m12 = ara;
	   							dm12 = Double.parseDouble(ara);

	   							if (dm12 >= g1 && dm12 <= g2) {
	   								gr12 = "A";br12 = rsaa.getString("inf");
	   							} else if (dm12 >= g3 && dm12 <= g4) {
	   								gr12 = "B";br12 = rsbb.getString("inf");
	   							} else if (dm12 >= g5 && dm12 <= g6) {
	   								gr12 = "C";br12 = rscc.getString("inf");
	   							} else if (dm12 >= g7 && dm12 <= g8) {
	   								gr12 = "D";br12 = rsdd.getString("inf");
	   							} else if (dm12 >= g9 && dm12 <= g10) {
	   								gr12 = "F";br12 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((phym == null || phym.isEmpty() || phym.equals("-"))
	   							&& (phyt == null || phyt.isEmpty() || phyt.equals("-"))) {

	   						if ((phym == null || phym.isEmpty()) && (phyt == null || phyt.isEmpty())) {

	   							phy = "";

	   						} else {

	   							phy = "-";
	   						}

	   					} else {

	   						if ((phym != null) && (!phym.isEmpty()) && (!phym.equals("-"))) {

	   							phymd = Double.parseDouble(rs.getString("phym"));

	   						}

	   						if ((phyt != null) && (!phyt.isEmpty()) && (!phyt.equals("-"))) {

	   							phytd = Double.parseDouble(rs.getString("phyt"));

	   						}

	   						phya = phymd + phytd;
	   						phy = phya.toString();
	   					}

	   					if (phy.isEmpty() || phy.equals(null)) {

	   						m13 = "";
	   						gr13 = "";

	   					} else {

	   						if (phy.equals("-")) {

	   							m13 = "-";
	   							gr13 = "-";

	   						} else {

	   							m13 = phy;
	   							dm13 = Double.parseDouble(phy);

	   							if (dm13 >= g1 && dm13 <= g2) {
	   								gr13 = "A";br13 = rsaa.getString("inf");
	   							} else if (dm13 >= g3 && dm13 <= g4) {
	   								gr13 = "B";br13 = rsbb.getString("inf");
	   							} else if (dm13 >= g5 && dm13 <= g6) {
	   								gr13 = "C";br13 = rscc.getString("inf");
	   							} else if (dm13 >= g7 && dm13 <= g8) {
	   								gr13 = "D";br13 = rsdd.getString("inf");
	   							} else if (dm13 >= g9 && dm13 <= g10) {
	   								gr13 = "F";br13 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((chem == null || chem.isEmpty() || chem.equals("-"))
	   							&& (chet == null || chet.isEmpty() || chet.equals("-"))) {

	   						if ((chem == null || chem.isEmpty()) && (chet == null || chet.isEmpty())) {

	   							che = "";

	   						} else {

	   							che = "-";
	   						}

	   					} else {

	   						if ((chem != null) && (!chem.isEmpty()) && (!chem.equals("-"))) {

	   							chemd = Double.parseDouble(rs.getString("chem"));

	   						}

	   						if ((chet != null) && (!chet.isEmpty()) && (!chet.equals("-"))) {

	   							chetd = Double.parseDouble(rs.getString("chet"));

	   						}

	   						chea = chemd + chetd;
	   						che = chea.toString();
	   					}

	   					if (che.isEmpty() || che.equals(null)) {

	   						m14 = "";
	   						gr14 = "";

	   					} else {

	   						if (che.equals("-")) {

	   							m14 = "-";
	   							gr14 = "-";

	   						} else {

	   							m14 = che;
	   							dm14 = Double.parseDouble(che);

	   							if (dm14 >= g1 && dm14 <= g2) {
	   								gr14 = "A";br14 = rsaa.getString("inf");
	   							} else if (dm14 >= g3 && dm14 <= g4) {
	   								gr14 = "B";br14 = rsbb.getString("inf");
	   							} else if (dm14 >= g5 && dm14 <= g6) {
	   								gr14 = "C";br14 = rscc.getString("inf");
	   							} else if (dm14 >= g7 && dm14 <= g8) {
	   								gr14 = "D";br14 = rsdd.getString("inf");
	   							} else if (dm14 >= g9 && dm14 <= g10) {
	   								gr14 = "F";br14 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((biom == null || biom.isEmpty() || biom.equals("-"))
	   							&& (biot == null || biot.isEmpty() || biot.equals("-"))) {

	   						if ((biom == null || biom.isEmpty()) && (biot == null || biot.isEmpty())) {

	   							bio = "";

	   						} else {

	   							bio = "-";
	   						}

	   					} else {

	   						if ((biom != null) && (!biom.isEmpty()) && (!biom.equals("-"))) {

	   							biomd = Double.parseDouble(rs.getString("biom"));

	   						}

	   						if ((biot != null) && (!biot.isEmpty()) && (!biot.equals("-"))) {

	   							biotd = Double.parseDouble(rs.getString("biot"));

	   						}

	   						bioa = biomd + biotd;
	   						bio = bioa.toString();
	   					}

	   					if (bio.isEmpty() || bio.equals(null)) {

	   						m15 = "";
	   						gr15 = "";

	   					} else {

	   						if (bio.equals("-")) {

	   							m15 = "-";
	   							gr15 = "-";

	   						} else {

	   							m15 = bio;
	   							dm15 = Double.parseDouble(bio);

	   							if (dm15 >= g1 && dm15 <= g2) {
	   								gr15 = "A";br15 = rsaa.getString("inf");
	   							} else if (dm15 >= g3 && dm15 <= g4) {
	   								gr15 = "B";br15 = rsbb.getString("inf");
	   							} else if (dm15 >= g5 && dm15 <= g6) {
	   								gr15 = "C";br15 = rscc.getString("inf");
	   							} else if (dm15 >= g7 && dm15 <= g8) {
	   								gr15 = "D";br15 = rsdd.getString("inf");
	   							} else if (dm15 >= g9 && dm15 <= g10) {
	   								gr15 = "F";br15 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((agrim == null || agrim.isEmpty() || agrim.equals("-"))
	   							&& (agrit == null || agrit.isEmpty() || agrit.equals("-"))) {

	   						if ((agrim == null || agrim.isEmpty()) && (agrit == null || agrit.isEmpty())) {

	   							agri = "";

	   						} else {

	   							agri = "-";
	   						}

	   					} else {

	   						if ((agrim != null) && (!agrim.isEmpty()) && (!agrim.equals("-"))) {

	   							agrimd = Double.parseDouble(rs.getString("agrim"));

	   						}

	   						if ((agrit != null) && (!agrit.isEmpty()) && (!agrit.equals("-"))) {

	   							agritd = Double.parseDouble(rs.getString("agrit"));

	   						}

	   						agria = agrimd + agritd;
	   						agri = agria.toString();
	   					}

	   					if (agri.isEmpty() || agri.equals(null)) {

	   						m16 = "";
	   						gr16 = "";

	   					} else {

	   						if (agri.equals("-")) {

	   							m16 = "-";
	   							gr16 = "-";

	   						} else {

	   							m16 = agri;
	   							dm16 = Double.parseDouble(agri);

	   							if (dm16 >= g1 && dm16 <= g2) {
	   								gr16 = "A";br16 = rsaa.getString("inf");
	   							} else if (dm16 >= g3 && dm16 <= g4) {
	   								gr16 = "B";br16 = rsbb.getString("inf");
	   							} else if (dm16 >= g5 && dm16 <= g6) {
	   								gr16 = "C";br16 = rscc.getString("inf");
	   							} else if (dm16 >= g7 && dm16 <= g8) {
	   								gr16 = "D";br16 = rsdd.getString("inf");
	   							} else if (dm16 >= g9 && dm16 <= g10) {
	   								gr16 = "F";br16 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((itm == null || itm.isEmpty() || itm.equals("-"))
	   							&& (itt == null || itt.isEmpty() || itt.equals("-"))) {

	   						if ((itm == null || itm.isEmpty()) && (itt == null || itt.isEmpty())) {

	   							it = "";

	   						} else {

	   							it = "-";
	   						}

	   					} else {

	   						if ((itm != null) && (!itm.isEmpty()) && (!itm.equals("-"))) {

	   							itmd = Double.parseDouble(rs.getString("itm"));

	   						}

	   						if ((itt != null) && (!itt.isEmpty()) && (!itt.equals("-"))) {

	   							ittd = Double.parseDouble(rs.getString("itt"));

	   						}

	   						ita = itmd + ittd;
	   						it = ita.toString();
	   					}

	   					if (it.isEmpty() || it.equals(null)) {

	   						m17 = "";
	   						gr17 = "";

	   					} else {

	   						if (it.equals("-")) {

	   							m17 = "-";
	   							gr17 = "-";

	   						} else {

	   							m17 = it;
	   							dm17 = Double.parseDouble(it);

	   							if (dm17 >= g1 && dm17 <= g2) {
	   								gr17 = "A";br17 = rsaa.getString("inf");
	   							} else if (dm17 >= g3 && dm17 <= g4) {
	   								gr17 = "B";br17 = rsbb.getString("inf");
	   							} else if (dm17 >= g5 && dm17 <= g6) {
	   								gr17 = "C";br17 = rscc.getString("inf");
	   							} else if (dm17 >= g7 && dm17 <= g8) {
	   								gr17 = "D";br17 = rsdd.getString("inf");
	   							} else if (dm17 >= g9 && dm17 <= g10) {
	   								gr17 = "F";br17 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((mathm == null || mathm.isEmpty() || mathm.equals("-"))
	   							&& (matht == null || matht.isEmpty() || matht.equals("-"))) {

	   						if ((mathm == null || mathm.isEmpty()) && (matht == null || matht.isEmpty())) {

	   							math = "";

	   						} else {

	   							math = "-";
	   						}

	   					} else {

	   						if ((mathm != null) && (!mathm.isEmpty()) && (!mathm.equals("-"))) {

	   							mathmd = Double.parseDouble(rs.getString("mathm"));

	   						}

	   						if ((matht != null) && (!matht.isEmpty()) && (!matht.equals("-"))) {

	   							mathtd = Double.parseDouble(rs.getString("matht"));

	   						}

	   						matha = mathmd + mathtd;
	   						math = matha.toString();
	   					}

	   					if (math.isEmpty() || math.equals(null)) {

	   						m18 = "";
	   						gr18 = "";

	   					} else {

	   						if (math.equals("-")) {

	   							m18 = "-";
	   							gr18 = "-";

	   						} else {

	   							m18 = math;
	   							dm18 = Double.parseDouble(math);

	   							if (dm18 >= g1 && dm18 <= g2) {
	   								gr18 = "A";br18 = rsaa.getString("inf");
	   							} else if (dm18 >= g3 && dm18 <= g4) {
	   								gr18 = "B";br18 = rsbb.getString("inf");
	   							} else if (dm18 >= g5 && dm18 <= g6) {
	   								gr18 = "C";br18 = rscc.getString("inf");
	   							} else if (dm18 >= g7 && dm18 <= g8) {
	   								gr18 = "D";br18 = rsdd.getString("inf");
	   							} else if (dm18 >= g9 && dm18 <= g10) {
	   								gr18 = "F";br18 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((admm == null || admm.isEmpty() || admm.equals("-"))
	   							&& (admt == null || admt.isEmpty() || admt.equals("-"))) {

	   						if ((admm == null || admm.isEmpty()) && (admt == null || admt.isEmpty())) {

	   							adm = "";

	   						} else {

	   							adm = "-";
	   						}

	   					} else {

	   						if ((admm != null) && (!admm.isEmpty()) && (!admm.equals("-"))) {

	   							admmd = Double.parseDouble(rs.getString("admm"));

	   						}

	   						if ((admt != null) && (!admt.isEmpty()) && (!admt.equals("-"))) {

	   							admtd = Double.parseDouble(rs.getString("admt"));

	   						}

	   						adma = admmd + admtd;
	   						adm = adma.toString();
	   					}

	   					if (adm.isEmpty() || adm.equals(null)) {

	   						m19 = "";
	   						gr19 = "";

	   					} else {

	   						if (adm.equals("-")) {

	   							m19 = "-";
	   							gr19 = "-";

	   						} else {

	   							m19 = adm;
	   							dm19 = Double.parseDouble(adm);

	   							if (dm19 >= g1 && dm19 <= g2) {
	   								gr19 = "A";br19 = rsaa.getString("inf");
	   							} else if (dm19 >= g3 && dm19 <= g4) {
	   								gr19 = "B";br19 = rsbb.getString("inf");
	   							} else if (dm19 >= g5 && dm19 <= g6) {
	   								gr19 = "C";br19 = rscc.getString("inf");
	   							} else if (dm19 >= g7 && dm19 <= g8) {
	   								gr19 = "D";br19 = rsdd.getString("inf");
	   							} else if (dm19 >= g9 && dm19 <= g10) {
	   								gr19 = "F";br19 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((foodm == null || foodm.isEmpty() || foodm.equals("-"))
	   							&& (foodt == null || foodt.isEmpty() || foodt.equals("-"))) {

	   						if ((foodm == null || foodm.isEmpty()) && (foodt == null || foodt.isEmpty())) {

	   							food = "";

	   						} else {

	   							food = "-";
	   						}

	   					} else {

	   						if ((foodm != null) && (!foodm.isEmpty()) && (!foodm.equals("-"))) {

	   							foodmd = Double.parseDouble(rs.getString("foodm"));

	   						}

	   						if ((foodt != null) && (!foodt.isEmpty()) && (!foodt.equals("-"))) {

	   							foodtd = Double.parseDouble(rs.getString("foodt"));

	   						}

	   						fooda = foodmd + foodtd;
	   						food = fooda.toString();
	   					}

	   					if (food.isEmpty() || food.equals(null)) {

	   						m20 = "";
	   						gr20 = "";

	   					} else {

	   						if (food.equals("-")) {

	   							m20 = "-";
	   							gr20 = "-";

	   						} else {

	   							m20 = food;
	   							dm20 = Double.parseDouble(food);

	   							if (dm20 >= g1 && dm20 <= g2) {
	   								gr20 = "A";br20 = rsaa.getString("inf");
	   							} else if (dm20 >= g3 && dm20 <= g4) {
	   								gr20 = "B";br20 = rsbb.getString("inf");
	   							} else if (dm20 >= g5 && dm20 <= g6) {
	   								gr20 = "C";br20 = rscc.getString("inf");
	   							} else if (dm20 >= g7 && dm20 <= g8) {
	   								gr20 = "D";br20 = rsdd.getString("inf");
	   							} else if (dm20 >= g9 && dm20 <= g10) {
	   								gr20 = "F";br20 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((textilem == null || textilem.isEmpty() || textilem.equals("-"))
	   							&& (textilet == null || textilet.isEmpty() || textilet.equals("-"))) {

	   						if ((textilem == null || textilem.isEmpty()) && (textilet == null || textilet.isEmpty())) {

	   							textile = "";

	   						} else {

	   							textile = "-";
	   						}

	   					} else {

	   						if ((textilem != null) && (!textilem.isEmpty()) && (!textilem.equals("-"))) {

	   							textilemd = Double.parseDouble(rs.getString("textilem"));

	   						}

	   						if ((textilet != null) && (!textilet.isEmpty()) && (!textilet.equals("-"))) {

	   							textiletd = Double.parseDouble(rs.getString("textilet"));

	   						}

	   						textilea = textilemd + textiletd;
	   						textile = textilea.toString();
	   					}

	   					if (textile.isEmpty() || textile.equals(null)) {

	   						m21 = "";
	   						gr21 = "";

	   					} else {

	   						if (textile.equals("-")) {

	   							m21 = "-";
	   							gr21 = "-";

	   						} else {

	   							m21 = textile;
	   							dm21 = Double.parseDouble(textile);

	   							if (dm21 >= g1 && dm21 <= g2) {
	   								gr21 = "A";br21 = rsaa.getString("inf");
	   							} else if (dm21 >= g3 && dm21 <= g4) {
	   								gr21 = "B";br21 = rsbb.getString("inf");
	   							} else if (dm21 >= g5 && dm21 <= g6) {
	   								gr21 = "C";br21 = rscc.getString("inf");
	   							} else if (dm21 >= g7 && dm21 <= g8) {
	   								gr21 = "D";br21 = rsdd.getString("inf");
	   							} else if (dm21 >= g9 && dm21 <= g10) {
	   								gr21 = "F";br21 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((comm == null || comm.isEmpty() || comm.equals("-"))
	   							&& (comt == null || comt.isEmpty() || comt.equals("-"))) {

	   						if ((comm == null || comm.isEmpty()) && (comt == null || comt.isEmpty())) {

	   							com = "";

	   						} else {

	   							com = "-";
	   						}

	   					} else {

	   						if ((comm != null) && (!comm.isEmpty()) && (!comm.equals("-"))) {

	   							commd = Double.parseDouble(rs.getString("comm"));

	   						}

	   						if ((comt != null) && (!comt.isEmpty()) && (!comt.equals("-"))) {

	   							comtd = Double.parseDouble(rs.getString("comt"));

	   						}

	   						coma = commd + comtd;
	   						com = coma.toString();
	   					}

	   					if (com.isEmpty() || com.equals(null)) {

	   						m22 = "";
	   						gr22 = "";

	   					} else {

	   						if (com.equals("-")) {

	   							m22 = "-";
	   							gr22 = "-";

	   						} else {

	   							m22 = com;
	   							dm22 = Double.parseDouble(com);

	   							if (dm22 >= g1 && dm22 <= g2) {
	   								gr22 = "A";br22 = rsaa.getString("inf");
	   							} else if (dm22 >= g3 && dm22 <= g4) {
	   								gr22 = "B";br22 = rsbb.getString("inf");
	   							} else if (dm22 >= g5 && dm22 <= g6) {
	   								gr22 = "C";br22 = rscc.getString("inf");
	   							} else if (dm22 >= g7 && dm22 <= g8) {
	   								gr22 = "D";br22 = rsdd.getString("inf");
	   							} else if (dm22 >= g9 && dm22 <= g10) {
	   								gr22 = "F";br22 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((bookm == null || bookm.isEmpty() || bookm.equals("-"))
	   							&& (bookt == null || bookt.isEmpty() || bookt.equals("-"))) {

	   						if ((bookm == null || bookm.isEmpty()) && (bookt == null || bookt.isEmpty())) {

	   							book = "";

	   						} else {

	   							book = "-";
	   						}

	   					} else {

	   						if ((bookm != null) && (!bookm.isEmpty()) && (!bookm.equals("-"))) {

	   							bookmd = Double.parseDouble(rs.getString("bookm"));

	   						}

	   						if ((bookt != null) && (!bookt.isEmpty()) && (!bookt.equals("-"))) {

	   							booktd = Double.parseDouble(rs.getString("bookt"));

	   						}

	   						booka = bookmd + booktd;
	   						book = booka.toString();
	   					}

	   					if (book.isEmpty() || book.equals(null)) {

	   						m23 = "";
	   						gr23 = "";

	   					} else {

	   						if (book.equals("-")) {

	   							m23 = "-";
	   							gr23 = "-";

	   						} else {

	   							m23 = book;
	   							dm23 = Double.parseDouble(book);

	   							if (dm23 >= g1 && dm23 <= g2) {
	   								gr23 = "A";br23 = rsaa.getString("inf");
	   							} else if (dm23 >= g3 && dm23 <= g4) {
	   								gr23 = "B";br23 = rsbb.getString("inf");
	   							} else if (dm23 >= g5 && dm23 <= g6) {
	   								gr23 = "C";br23 = rscc.getString("inf");
	   							} else if (dm23 >= g7 && dm23 <= g8) {
	   								gr23 = "D";br23 = rsdd.getString("inf");
	   							} else if (dm23 >= g9 && dm23 <= g10) {
	   								gr23 = "F";br23 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((buildm == null || buildm.isEmpty() || buildm.equals("-"))
	   							&& (buildt == null || buildt.isEmpty() || buildt.equals("-"))) {

	   						if ((buildm == null || buildm.isEmpty()) && (buildt == null || buildt.isEmpty())) {

	   							build = "";

	   						} else {

	   							build = "-";
	   						}

	   					} else {

	   						if ((buildm != null) && (!buildm.isEmpty()) && (!buildm.equals("-"))) {

	   							buildmd = Double.parseDouble(rs.getString("buildm"));

	   						}

	   						if ((buildt != null) && (!buildt.isEmpty()) && (!buildt.equals("-"))) {

	   							buildtd = Double.parseDouble(rs.getString("buildt"));

	   						}

	   						builda = buildmd + buildtd;
	   						build = builda.toString();
	   					}

	   					if (build.isEmpty() || build.equals(null)) {

	   						m24 = "";
	   						gr24 = "";

	   					} else {

	   						if (build.equals("-")) {

	   							m24 = "-";
	   							gr24 = "-";

	   						} else {

	   							m24 = build;
	   							dm24 = Double.parseDouble(build);

	   							if (dm24 >= g1 && dm24 <= g2) {
	   								gr24 = "A";br24 = rsaa.getString("inf");
	   							} else if (dm24 >= g3 && dm24 <= g4) {
	   								gr24 = "B";br24 = rsbb.getString("inf");
	   							} else if (dm24 >= g5 && dm24 <= g6) {
	   								gr24 = "C";br24 = rscc.getString("inf");
	   							} else if (dm24 >= g7 && dm24 <= g8) {
	   								gr24 = "D";br24 = rsdd.getString("inf");
	   							} else if (dm24 >= g9 && dm24 <= g10) {
	   								gr24 = "F";br24 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((archm == null || archm.isEmpty() || archm.equals("-"))
	   							&& (archt == null || archt.isEmpty() || archt.equals("-"))) {

	   						if ((archm == null || archm.isEmpty()) && (archt == null || archt.isEmpty())) {

	   							arch = "";

	   						} else {

	   							arch = "-";
	   						}

	   					} else {

	   						if ((archm != null) && (!archm.isEmpty()) && (!archm.equals("-"))) {

	   							archmd = Double.parseDouble(rs.getString("archm"));

	   						}

	   						if ((archt != null) && (!archt.isEmpty()) && (!archt.equals("-"))) {

	   							archtd = Double.parseDouble(rs.getString("archt"));

	   						}

	   						archa = archmd + archtd;
	   						arch = archa.toString();
	   					}

	   					if (arch.isEmpty() || arch.equals(null)) {

	   						m25 = "";
	   						gr25 = "";

	   					} else {

	   						if (arch.equals("-")) {

	   							m25 = "-";
	   							gr25 = "-";

	   						} else {

	   							m25 = arch;
	   							dm25 = Double.parseDouble(arch);

	   							if (dm25 >= g1 && dm25 <= g2) {
	   								gr25 = "A";br25 = rsaa.getString("inf");
	   							} else if (dm25 >= g3 && dm25 <= g4) {
	   								gr25 = "B";br25 = rsbb.getString("inf");
	   							} else if (dm25 >= g5 && dm25 <= g6) {
	   								gr25 = "C";br25 = rscc.getString("inf");
	   							} else if (dm25 >= g7 && dm25 <= g8) {
	   								gr25 = "D";br25 = rsdd.getString("inf");
	   							} else if (dm25 >= g9 && dm25 <= g10) {
	   								gr25 = "F";br25 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((surveym == null || surveym.isEmpty() || surveym.equals("-"))
	   							&& (surveyt == null || surveyt.isEmpty() || surveyt.equals("-"))) {

	   						if ((surveym == null || surveym.isEmpty()) && (surveyt == null || surveyt.isEmpty())) {

	   							survey = "";

	   						} else {

	   							survey = "-";
	   						}

	   					} else {

	   						if ((surveym != null) && (!surveym.isEmpty()) && (!surveym.equals("-"))) {

	   							surveymd = Double.parseDouble(rs.getString("surveym"));

	   						}

	   						if ((surveyt != null) && (!surveyt.isEmpty()) && (!surveyt.equals("-"))) {

	   							surveytd = Double.parseDouble(rs.getString("surveyt"));

	   						}

	   						surveya = surveymd + surveytd;
	   						survey = surveya.toString();
	   					}

	   					if (survey.isEmpty() || survey.equals(null)) {

	   						m26 = "";
	   						gr26 = "";

	   					} else {

	   						if (survey.equals("-")) {

	   							m26 = "-";
	   							gr26 = "-";

	   						} else {

	   							m26 = survey;
	   							dm26 = Double.parseDouble(survey);

	   							if (dm26 >= g1 && dm26 <= g2) {
	   								gr26 = "A";br26 = rsaa.getString("inf");
	   							} else if (dm26 >= g3 && dm26 <= g4) {
	   								gr26 = "B";br26 = rsbb.getString("inf");
	   							} else if (dm26 >= g5 && dm26 <= g6) {
	   								gr26 = "C";br26 = rscc.getString("inf");
	   							} else if (dm26 >= g7 && dm26 <= g8) {
	   								gr26 = "D";br26 = rsdd.getString("inf");
	   							} else if (dm26 >= g9 && dm26 <= g10) {
	   								gr26 = "F";br26 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((carpm == null || carpm.isEmpty() || carpm.equals("-"))
	   							&& (carpt == null || carpt.isEmpty() || carpt.equals("-"))) {

	   						if ((carpm == null || carpm.isEmpty()) && (carpt == null || carpt.isEmpty())) {

	   							carp = "";

	   						} else {

	   							carp = "-";
	   						}

	   					} else {

	   						if ((carpm != null) && (!carpm.isEmpty()) && (!carpm.equals("-"))) {

	   							carpmd = Double.parseDouble(rs.getString("carpm"));

	   						}

	   						if ((carpt != null) && (!carpt.isEmpty()) && (!carpt.equals("-"))) {

	   							carptd = Double.parseDouble(rs.getString("carpt"));

	   						}

	   						carpa = carpmd + carptd;
	   						carp = carpa.toString();
	   					}

	   					if (carp.isEmpty() || carp.equals(null)) {

	   						m27 = "";
	   						gr27 = "";

	   					} else {

	   						if (carp.equals("-")) {

	   							m27 = "-";
	   							gr27 = "-";

	   						} else {

	   							m27 = carp;
	   							dm27 = Double.parseDouble(carp);

	   							if (dm27 >= g1 && dm27 <= g2) {
	   								gr27 = "A";br27 = rsaa.getString("inf");
	   							} else if (dm27 >= g3 && dm27 <= g4) {
	   								gr27 = "B";br27 = rsbb.getString("inf");
	   							} else if (dm27 >= g5 && dm27 <= g6) {
	   								gr27 = "C";br27 = rscc.getString("inf");
	   							} else if (dm27 >= g7 && dm27 <= g8) {
	   								gr27 = "D";br27 = rsdd.getString("inf");
	   							} else if (dm27 >= g9 && dm27 <= g10) {
	   								gr27 = "F";br27 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((brickm == null || brickm.isEmpty() || brickm.equals("-"))
	   							&& (brickt == null || brickt.isEmpty() || brickt.equals("-"))) {

	   						if ((brickm == null || brickm.isEmpty()) && (brickt == null || brickt.isEmpty())) {

	   							brick = "";

	   						} else {

	   							brick = "-";
	   						}

	   					} else {

	   						if ((brickm != null) && (!brickm.isEmpty()) && (!brickm.equals("-"))) {

	   							brickmd = Double.parseDouble(rs.getString("brickm"));

	   						}

	   						if ((brickt != null) && (!brickt.isEmpty()) && (!brickt.equals("-"))) {

	   							bricktd = Double.parseDouble(rs.getString("brickt"));

	   						}

	   						bricka = brickmd + bricktd;
	   						brick = bricka.toString();
	   					}

	   					if (brick.isEmpty() || brick.equals(null)) {

	   						m28 = "";
	   						gr28 = "";

	   					} else {

	   						if (brick.equals("-")) {

	   							m28 = "-";
	   							gr28 = "-";

	   						} else {

	   							m28 = brick;
	   							dm28 = Double.parseDouble(brick);

	   							if (dm28 >= g1 && dm28 <= g2) {
	   								gr28 = "A";br28 = rsaa.getString("inf");
	   							} else if (dm28 >= g3 && dm28 <= g4) {
	   								gr28 = "B";br28 = rsbb.getString("inf");
	   							} else if (dm28 >= g5 && dm28 <= g6) {
	   								gr28 = "C";br28 = rscc.getString("inf");
	   							} else if (dm28 >= g7 && dm28 <= g8) {
	   								gr28 = "D";br28 = rsdd.getString("inf");
	   							} else if (dm28 >= g9 && dm28 <= g10) {
	   								gr28 = "F";br28 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((paintm == null || paintm.isEmpty() || paintm.equals("-"))
	   							&& (paintt == null || paintt.isEmpty() || paintt.equals("-"))) {

	   						if ((paintm == null || paintm.isEmpty()) && (paintt == null || paintt.isEmpty())) {

	   							paint = "";

	   						} else {

	   							paint = "-";
	   						}

	   					} else {

	   						if ((paintm != null) && (!paintm.isEmpty()) && (!paintm.equals("-"))) {

	   							paintmd = Double.parseDouble(rs.getString("paintm"));

	   						}

	   						if ((paintt != null) && (!paintt.isEmpty()) && (!paintt.equals("-"))) {

	   							painttd = Double.parseDouble(rs.getString("paintt"));

	   						}

	   						painta = paintmd + painttd;
	   						paint = painta.toString();
	   					}

	   					if (paint.isEmpty() || paint.equals(null)) {

	   						m29 = "";
	   						gr29 = "";

	   					} else {

	   						if (paint.equals("-")) {

	   							m29 = "-";
	   							gr29 = "-";

	   						} else {

	   							m29 = paint;
	   							dm29 = Double.parseDouble(paint);

	   							if (dm29 >= g1 && dm29 <= g2) {
	   								gr29 = "A";br29 = rsaa.getString("inf");
	   							} else if (dm29 >= g3 && dm29 <= g4) {
	   								gr29 = "B";br29 = rsbb.getString("inf");
	   							} else if (dm29 >= g5 && dm29 <= g6) {
	   								gr29 = "C";br29 = rscc.getString("inf");
	   							} else if (dm29 >= g7 && dm29 <= g8) {
	   								gr29 = "D";br29 = rsdd.getString("inf");
	   							} else if (dm29 >= g9 && dm29 <= g10) {
	   								gr29 = "F";br29 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((plumbm == null || plumbm.isEmpty() || plumbm.equals("-"))
	   							&& (plumbt == null || plumbt.isEmpty() || plumbt.equals("-"))) {

	   						if ((plumbm == null || plumbm.isEmpty()) && (plumbt == null || plumbt.isEmpty())) {

	   							plumb = "";

	   						} else {

	   							plumb = "-";
	   						}

	   					} else {

	   						if ((plumbm != null) && (!plumbm.isEmpty()) && (!plumbm.equals("-"))) {

	   							plumbmd = Double.parseDouble(rs.getString("plumbm"));

	   						}

	   						if ((plumbt != null) && (!plumbt.isEmpty()) && (!plumbt.equals("-"))) {

	   							plumbtd = Double.parseDouble(rs.getString("plumbt"));

	   						}

	   						plumba = plumbmd + plumbtd;
	   						plumb = plumba.toString();
	   					}

	   					if (plumb.isEmpty() || plumb.equals(null)) {

	   						m30 = "";
	   						gr30 = "";

	   					} else {

	   						if (plumb.equals("-")) {

	   							m30 = "-";
	   							gr30 = "-";

	   						} else {

	   							m30 = plumb;
	   							dm30 = Double.parseDouble(plumb);

	   							if (dm30 >= g1 && dm30 <= g2) {
	   								gr30 = "A";br30 = rsaa.getString("inf");
	   							} else if (dm30 >= g3 && dm30 <= g4) {
	   								gr30 = "B";br30 = rsbb.getString("inf");
	   							} else if (dm30 >= g5 && dm30 <= g6) {
	   								gr30 = "C";br30 = rscc.getString("inf");
	   							} else if (dm30 >= g7 && dm30 <= g8) {
	   								gr30 = "D";br30 = rsdd.getString("inf");
	   							} else if (dm30 >= g9 && dm30 <= g10) {
	   								gr30 = "F";br30 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((electm == null || electm.isEmpty() || electm.equals("-"))
	   							&& (electt == null || electt.isEmpty() || electt.equals("-"))) {

	   						if ((electm == null || electm.isEmpty()) && (electt == null || electt.isEmpty())) {

	   							elect = "";

	   						} else {

	   							elect = "-";
	   						}

	   					} else {

	   						if ((electm != null) && (!electm.isEmpty()) && (!electm.equals("-"))) {

	   							electmd = Double.parseDouble(rs.getString("electm"));

	   						}

	   						if ((electt != null) && (!electt.isEmpty()) && (!electt.equals("-"))) {

	   							electtd = Double.parseDouble(rs.getString("electt"));

	   						}

	   						electa = electmd + electtd;
	   						elect = electa.toString();
	   					}

	   					if (elect.isEmpty() || elect.equals(null)) {

	   						m31 = "";
	   						gr31 = "";

	   					} else {

	   						if (elect.equals("-")) {

	   							m31 = "-";
	   							gr31 = "-";

	   						} else {

	   							m31 = elect;
	   							dm31 = Double.parseDouble(elect);

	   							if (dm31 >= g1 && dm31 <= g2) {
	   								gr31 = "A";br31 = rsaa.getString("inf");
	   							} else if (dm31 >= g3 && dm31 <= g4) {
	   								gr31 = "B";br31 = rsbb.getString("inf");
	   							} else if (dm31 >= g5 && dm31 <= g6) {
	   								gr31 = "C";br31 = rscc.getString("inf");
	   							} else if (dm31 >= g7 && dm31 <= g8) {
	   								gr31 = "D";br31 = rsdd.getString("inf");
	   							} else if (dm31 >= g9 && dm31 <= g10) {
	   								gr31 = "F";br31 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((engineerm == null || engineerm.isEmpty() || engineerm.equals("-"))
	   							&& (engineert == null || engineert.isEmpty() || engineert.equals("-"))) {

	   						if ((engineerm == null || engineerm.isEmpty()) && (engineert == null || engineert.isEmpty())) {

	   							engineer = "";

	   						} else {

	   							engineer = "-";
	   						}

	   					} else {

	   						if ((engineerm != null) && (!engineerm.isEmpty()) && (!engineerm.equals("-"))) {

	   							engineermd = Double.parseDouble(rs.getString("engineerm"));

	   						}

	   						if ((engineert != null) && (!engineert.isEmpty()) && (!engineert.equals("-"))) {

	   							engineertd = Double.parseDouble(rs.getString("engineert"));

	   						}

	   						engineera = engineermd + engineertd;
	   						engineer = engineera.toString();
	   					}

	   					if (engineer.isEmpty() || engineer.equals(null)) {

	   						m32 = "";
	   						gr32 = "";

	   					} else {

	   						if (engineer.equals("-")) {

	   							m32 = "-";
	   							gr32 = "-";

	   						} else {

	   							m32 = engineer;
	   							dm32 = Double.parseDouble(engineer);

	   							if (dm32 >= g1 && dm32 <= g2) {
	   								gr32 = "A";br32 = rsaa.getString("inf");
	   							} else if (dm32 >= g3 && dm32 <= g4) {
	   								gr32 = "B";br32 = rsbb.getString("inf");
	   							} else if (dm32 >= g5 && dm32 <= g6) {
	   								gr32 = "C";br32 = rscc.getString("inf");
	   							} else if (dm32 >= g7 && dm32 <= g8) {
	   								gr32 = "D";br32 = rsdd.getString("inf");
	   							} else if (dm32 >= g9 && dm32 <= g10) {
	   								gr32 = "F";br32 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((radiom == null || radiom.isEmpty() || radiom.equals("-"))
	   							&& (radiot == null || radiot.isEmpty() || radiot.equals("-"))) {

	   						if ((radiom == null || radiom.isEmpty()) && (radiot == null || radiot.isEmpty())) {

	   							radio = "";

	   						} else {

	   							radio = "-";
	   						}

	   					} else {

	   						if ((radiom != null) && (!radiom.isEmpty()) && (!radiom.equals("-"))) {

	   							radiomd = Double.parseDouble(rs.getString("radiom"));

	   						}

	   						if ((radiot != null) && (!radiot.isEmpty()) && (!radiot.equals("-"))) {

	   							radiotd = Double.parseDouble(rs.getString("radiot"));

	   						}

	   						radioa = radiomd + radiotd;
	   						radio = radioa.toString();
	   					}

	   					if (radio.isEmpty() || radio.equals(null)) {

	   						m33 = "";
	   						gr33 = "";

	   					} else {

	   						if (radio.equals("-")) {

	   							m33 = "-";
	   							gr33 = "-";

	   						} else {

	   							m33 = radio;
	   							dm33 = Double.parseDouble(radio);

	   							if (dm33 >= g1 && dm33 <= g2) {
	   								gr33 = "A";br33 = rsaa.getString("inf");
	   							} else if (dm33 >= g3 && dm33 <= g4) {
	   								gr33 = "B";br33 = rsbb.getString("inf");
	   							} else if (dm33 >= g5 && dm33 <= g6) {
	   								gr33 = "C";br33 = rscc.getString("inf");
	   							} else if (dm33 >= g7 && dm33 <= g8) {
	   								gr33 = "D";br33 = rsdd.getString("inf");
	   							} else if (dm33 >= g9 && dm33 <= g10) {
	   								gr33 = "F";br33 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((draughtm == null || draughtm.isEmpty() || draughtm.equals("-"))
	   							&& (draughtt == null || draughtt.isEmpty() || draughtt.equals("-"))) {

	   						if ((draughtm == null || draughtm.isEmpty()) && (draughtt == null || draughtt.isEmpty())) {

	   							draught = "";

	   						} else {

	   							draught = "-";
	   						}

	   					} else {

	   						if ((draughtm != null) && (!draughtm.isEmpty()) && (!draughtm.equals("-"))) {

	   							draughtmd = Double.parseDouble(rs.getString("draughtm"));

	   						}

	   						if ((draughtt != null) && (!draughtt.isEmpty()) && (!draughtt.equals("-"))) {

	   							draughttd = Double.parseDouble(rs.getString("draughtt"));

	   						}

	   						draughta = draughtmd + draughttd;
	   						draught = draughta.toString();
	   					}

	   					if (draught.isEmpty() || draught.equals(null)) {

	   						m34 = "";
	   						gr34 = "";

	   					} else {

	   						if (draught.equals("-")) {

	   							m34 = "-";
	   							gr34 = "-";

	   						} else {

	   							m34 = draught;
	   							dm34 = Double.parseDouble(draught);

	   							if (dm34 >= g1 && dm34 <= g2) {
	   								gr34 = "A";br34 = rsaa.getString("inf");
	   							} else if (dm34 >= g3 && dm34 <= g4) {
	   								gr34 = "B";br34 = rsbb.getString("inf");
	   							} else if (dm34 >= g5 && dm34 <= g6) {
	   								gr34 = "C";br34 = rscc.getString("inf");
	   							} else if (dm34 >= g7 && dm34 <= g8) {
	   								gr34 = "D";br34 = rsdd.getString("inf");
	   							} else if (dm34 >= g9 && dm34 <= g10) {
	   								gr34 = "F";br34 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((refm == null || refm.isEmpty() || refm.equals("-"))
	   							&& (reft == null || reft.isEmpty() || reft.equals("-"))) {

	   						if ((refm == null || refm.isEmpty()) && (reft == null || reft.isEmpty())) {

	   							ref = "";

	   						} else {

	   							ref = "-";
	   						}

	   					} else {

	   						if ((refm != null) && (!refm.isEmpty()) && (!refm.equals("-"))) {

	   							refmd = Double.parseDouble(rs.getString("refm"));

	   						}

	   						if ((reft != null) && (!reft.isEmpty()) && (!reft.equals("-"))) {

	   							reftd = Double.parseDouble(rs.getString("reft"));

	   						}

	   						refa = refmd + reftd;
	   						ref = refa.toString();
	   					}

	   					if (ref.isEmpty() || ref.equals(null)) {

	   						m35 = "";
	   						gr35 = "";

	   					} else {

	   						if (ref.equals("-")) {

	   							m35 = "-";
	   							gr35 = "-";

	   						} else {

	   							m35 = ref;
	   							dm35 = Double.parseDouble(ref);

	   							if (dm35 >= g1 && dm35 <= g2) {
	   								gr35 = "A";br35 = rsaa.getString("inf");
	   							} else if (dm35 >= g3 && dm35 <= g4) {
	   								gr35 = "B";br35 = rsbb.getString("inf");
	   							} else if (dm35 >= g5 && dm35 <= g6) {
	   								gr35 = "C";br35 = rscc.getString("inf");
	   							} else if (dm35 >= g7 && dm35 <= g8) {
	   								gr35 = "D";br35 = rsdd.getString("inf");
	   							} else if (dm35 >= g9 && dm35 <= g10) {
	   								gr35 = "F";br35 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((plantm == null || plantm.isEmpty() || plantm.equals("-"))
	   							&& (plantt == null || plantt.isEmpty() || plantt.equals("-"))) {

	   						if ((plantm == null || plantm.isEmpty()) && (plantt == null || plantt.isEmpty())) {

	   							plant = "";

	   						} else {

	   							plant = "-";
	   						}

	   					} else {

	   						if ((plantm != null) && (!plantm.isEmpty()) && (!plantm.equals("-"))) {

	   							plantmd = Double.parseDouble(rs.getString("plantm"));

	   						}

	   						if ((plantt != null) && (!plantt.isEmpty()) && (!plantt.equals("-"))) {

	   							planttd = Double.parseDouble(rs.getString("plantt"));

	   						}

	   						planta = plantmd + planttd;
	   						plant = planta.toString();
	   					}

	   					if (plant.isEmpty() || plant.equals(null)) {

	   						m36 = "";
	   						gr36 = "";

	   					} else {

	   						if (plant.equals("-")) {

	   							m36 = "-";
	   							gr36 = "-";

	   						} else {

	   							m36 = plant;
	   							dm36 = Double.parseDouble(plant);

	   							if (dm36 >= g1 && dm36 <= g2) {
	   								gr36 = "A";br36 = rsaa.getString("inf");
	   							} else if (dm36 >= g3 && dm36 <= g4) {
	   								gr36 = "B";br36 = rsbb.getString("inf");
	   							} else if (dm36 >= g5 && dm36 <= g6) {
	   								gr36 = "C";br36 = rscc.getString("inf");
	   							} else if (dm36 >= g7 && dm36 <= g8) {
	   								gr36 = "D";br36 = rsdd.getString("inf");
	   							} else if (dm36 >= g9 && dm36 <= g10) {
	   								gr36 = "F";br36 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((workm == null || workm.isEmpty() || workm.equals("-"))
	   							&& (workt == null || workt.isEmpty() || workt.equals("-"))) {

	   						if ((workm == null || workm.isEmpty()) && (workt == null || workt.isEmpty())) {

	   							work = "";

	   						} else {

	   							work = "-";
	   						}

	   					} else {

	   						if ((workm != null) && (!workm.isEmpty()) && (!workm.equals("-"))) {

	   							workmd = Double.parseDouble(rs.getString("workm"));

	   						}

	   						if ((workt != null) && (!workt.isEmpty()) && (!workt.equals("-"))) {

	   							worktd = Double.parseDouble(rs.getString("workt"));

	   						}

	   						worka = workmd + worktd;
	   						work = worka.toString();
	   					}

	   					if (work.isEmpty() || work.equals(null)) {

	   						m37 = "";
	   						gr37 = "";

	   					} else {

	   						if (work.equals("-")) {

	   							m37 = "-";
	   							gr37 = "-";

	   						} else {

	   							m37 = work;
	   							dm37 = Double.parseDouble(work);

	   							if (dm37 >= g1 && dm37 <= g2) {
	   								gr37 = "A";br37 = rsaa.getString("inf");
	   							} else if (dm37 >= g3 && dm37 <= g4) {
	   								gr37 = "B";br37 = rsbb.getString("inf");
	   							} else if (dm37 >= g5 && dm37 <= g6) {
	   								gr37 = "C";br37 = rscc.getString("inf");
	   							} else if (dm37 >= g7 && dm37 <= g8) {
	   								gr37 = "D";br37 = rsdd.getString("inf");
	   							} else if (dm37 >= g9 && dm37 <= g10) {
	   								gr37 = "F";br37 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((motorm == null || motorm.isEmpty() || motorm.equals("-"))
	   							&& (motort == null || motort.isEmpty() || motort.equals("-"))) {

	   						if ((motorm == null || motorm.isEmpty()) && (motort == null || motort.isEmpty())) {

	   							motor = "";

	   						} else {

	   							motor = "-";
	   						}

	   					} else {

	   						if ((motorm != null) && (!motorm.isEmpty()) && (!motorm.equals("-"))) {

	   							motormd = Double.parseDouble(rs.getString("motorm"));

	   						}

	   						if ((motort != null) && (!motort.isEmpty()) && (!motort.equals("-"))) {

	   							motortd = Double.parseDouble(rs.getString("motort"));

	   						}

	   						motora = motormd + motortd;
	   						motor = motora.toString();
	   					}

	   					if (motor.isEmpty() || motor.equals(null)) {

	   						m38 = "";
	   						gr38 = "";

	   					} else {

	   						if (motor.equals("-")) {

	   							m38 = "-";
	   							gr38 = "-";

	   						} else {

	   							m38 = motor;
	   							dm38 = Double.parseDouble(motor);

	   							if (dm38 >= g1 && dm38 <= g2) {
	   								gr38 = "A";br38 = rsaa.getString("inf");
	   							} else if (dm38 >= g3 && dm38 <= g4) {
	   								gr38 = "B";br38 = rsbb.getString("inf");
	   							} else if (dm38 >= g5 && dm38 <= g6) {
	   								gr38 = "C";br38 = rscc.getString("inf");
	   							} else if (dm38 >= g7 && dm38 <= g8) {
	   								gr38 = "D";br38 = rsdd.getString("inf");
	   							} else if (dm38 >= g9 && dm38 <= g10) {
	   								gr38 = "F";br38 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((weldingm == null || weldingm.isEmpty() || weldingm.equals("-"))
	   							&& (weldingt == null || weldingt.isEmpty() || weldingt.equals("-"))) {

	   						if ((weldingm == null || weldingm.isEmpty()) && (weldingt == null || weldingt.isEmpty())) {

	   							welding = "";

	   						} else {

	   							welding = "-";
	   						}

	   					} else {

	   						if ((weldingm != null) && (!weldingm.isEmpty()) && (!weldingm.equals("-"))) {

	   							weldingmd = Double.parseDouble(rs.getString("weldingm"));

	   						}

	   						if ((weldingt != null) && (!weldingt.isEmpty()) && (!weldingt.equals("-"))) {

	   							weldingtd = Double.parseDouble(rs.getString("weldingt"));

	   						}

	   						weldinga = weldingmd + weldingtd;
	   						welding = weldinga.toString();
	   					}

	   					if (welding.isEmpty() || welding.equals(null)) {

	   						m39 = "";
	   						gr39 = "";

	   					} else {

	   						if (welding.equals("-")) {

	   							m39 = "-";
	   							gr39 = "-";

	   						} else {

	   							m39 = welding;
	   							dm39 = Double.parseDouble(welding);

	   							if (dm39 >= g1 && dm39 <= g2) {
	   								gr39 = "A";br39 = rsaa.getString("inf");
	   							} else if (dm39 >= g3 && dm39 <= g4) {
	   								gr39 = "B";br39 = rsbb.getString("inf");
	   							} else if (dm39 >= g5 && dm39 <= g6) {
	   								gr39 = "C";br39 = rscc.getString("inf");
	   							} else if (dm39 >= g7 && dm39 <= g8) {
	   								gr39 = "D";br39 = rsdd.getString("inf");
	   							} else if (dm39 >= g9 && dm39 <= g10) {
	   								gr39 = "F";br39 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((fitm == null || fitm.isEmpty() || fitm.equals("-"))
	   							&& (fitt == null || fitt.isEmpty() || fitt.equals("-"))) {

	   						if ((fitm == null || fitm.isEmpty()) && (fitt == null || fitt.isEmpty())) {

	   							fit = "";

	   						} else {

	   							fit = "-";
	   						}

	   					} else {

	   						if ((fitm != null) && (!fitm.isEmpty()) && (!fitm.equals("-"))) {

	   							fitmd = Double.parseDouble(rs.getString("fitm"));

	   						}

	   						if ((fitt != null) && (!fitt.isEmpty()) && (!fitt.equals("-"))) {

	   							fittd = Double.parseDouble(rs.getString("fitt"));

	   						}

	   						fita = fitmd + fittd;
	   						fit = fita.toString();
	   					}

	   					if (fit.isEmpty() || fit.equals(null)) {

	   						m40 = "";
	   						gr40 = "";

	   					} else {

	   						if (fit.equals("-")) {

	   							m40 = "-";
	   							gr40 = "-";

	   						} else {

	   							m40 = fit;
	   							dm40 = Double.parseDouble(fit);

	   							if (dm40 >= g1 && dm40 <= g2) {
	   								gr40 = "A";br40 = rsaa.getString("inf");
	   							} else if (dm40 >= g3 && dm40 <= g4) {
	   								gr40 = "B";br40 = rsbb.getString("inf");
	   							} else if (dm40 >= g5 && dm40 <= g6) {
	   								gr40 = "C";br40 = rscc.getString("inf");
	   							} else if (dm40 >= g7 && dm40 <= g8) {
	   								gr40 = "D";br40 = rsdd.getString("inf");
	   							} else if (dm40 >= g9 && dm40 <= g10) {
	   								gr40 = "F";br40 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((autom == null || autom.isEmpty() || autom.equals("-"))
	   							&& (autot == null || autot.isEmpty() || autot.equals("-"))) {

	   						if ((autom == null || autom.isEmpty()) && (autot == null || autot.isEmpty())) {

	   							auto = "";

	   						} else {

	   							auto = "-";
	   						}

	   					} else {

	   						if ((autom != null) && (!autom.isEmpty()) && (!autom.equals("-"))) {

	   							automd = Double.parseDouble(rs.getString("autom"));

	   						}

	   						if ((autot != null) && (!autot.isEmpty()) && (!autot.equals("-"))) {

	   							autotd = Double.parseDouble(rs.getString("autot"));

	   						}

	   						autoa = automd + autotd;
	   						auto = autoa.toString();
	   					}

	   					if (auto.isEmpty() || auto.equals(null)) {

	   						m41 = "";
	   						gr41 = "";

	   					} else {

	   						if (auto.equals("-")) {

	   							m41 = "-";
	   							gr41 = "-";

	   						} else {

	   							m41 = auto;
	   							dm41 = Double.parseDouble(auto);

	   							if (dm41 >= g1 && dm41 <= g2) {
	   								gr41 = "A";br41 = rsaa.getString("inf");
	   							} else if (dm41 >= g3 && dm41 <= g4) {
	   								gr41 = "B";br41 = rsbb.getString("inf");
	   							} else if (dm41 >= g5 && dm41 <= g6) {
	   								gr41 = "C";br41 = rscc.getString("inf");
	   							} else if (dm41 >= g7 && dm41 <= g8) {
	   								gr41 = "D";br41 = rsdd.getString("inf");
	   							} else if (dm41 >= g9 && dm41 <= g10) {
	   								gr41 = "F";br41 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					if ((mechanicm == null || mechanicm.isEmpty() || mechanicm.equals("-"))
	   							&& (mechanict == null || mechanict.isEmpty() || mechanict.equals("-"))) {

	   						if ((mechanicm == null || mechanicm.isEmpty()) && (mechanict == null || mechanict.isEmpty())) {

	   							mechanic = "";

	   						} else {

	   							mechanic = "-";
	   						}

	   					} else {

	   						if ((mechanicm != null) && (!mechanicm.isEmpty()) && (!mechanicm.equals("-"))) {

	   							mechanicmd = Double.parseDouble(rs.getString("mechanicm"));

	   						}

	   						if ((mechanict != null) && (!mechanict.isEmpty()) && (!mechanict.equals("-"))) {

	   							mechanictd = Double.parseDouble(rs.getString("mechanict"));

	   						}

	   						mechanica = mechanicmd + mechanictd;
	   						mechanic = mechanica.toString();
	   					}

	   					if (mechanic.isEmpty() || mechanic.equals(null)) {

	   						m42 = "";
	   						gr42 = "";

	   					} else {

	   						if (mechanic.equals("-")) {

	   							m42 = "-";
	   							gr42 = "-";

	   						} else {

	   							m42 = mechanic;
	   							dm42 = Double.parseDouble(mechanic);

	   							if (dm42 >= g1 && dm42 <= g2) {
	   								gr42 = "A";br42 = rsaa.getString("inf");
	   							} else if (dm42 >= g3 && dm42 <= g4) {
	   								gr42 = "B";br42 = rsbb.getString("inf");
	   							} else if (dm42 >= g5 && dm42 <= g6) {
	   								gr42 = "C";br42 = rscc.getString("inf");
	   							} else if (dm42 >= g7 && dm42 <= g8) {
	   								gr42 = "D";br42 = rsdd.getString("inf");
	   							} else if (dm42 >= g9 && dm42 <= g10) {
	   								gr42 = "F";br42 = rsff.getString("inf");
	   							}

	   						}

	   					}
	  						
	   					
	   					if ((foundrym == null || foundrym.isEmpty() || foundrym.equals("-"))
	   							&& (foundryt == null || foundryt.isEmpty() || foundryt.equals("-"))) {

	   						if ((foundrym == null || foundrym.isEmpty()) && (foundryt == null || foundryt.isEmpty())) {

	   							foundry = "";

	   						} else {

	   							foundry = "-";
	   						}

	   					} else {

	   						if ((foundrym != null) && (!foundrym.isEmpty()) && (!foundrym.equals("-"))) {

	   							foundrymd = Double.parseDouble(rs.getString("foundrym"));

	   						}

	   						if ((foundryt != null) && (!foundryt.isEmpty()) && (!foundryt.equals("-"))) {

	   							foundrytd = Double.parseDouble(rs.getString("foundryt"));

	   						}

	   						foundrya = foundrymd + foundrytd;
	   						foundry = foundrya.toString();
	   					}

	   					if (foundry.isEmpty() || foundry.equals(null)) {

	   						m43 = "";
	   						gr43 = "";

	   					} else {

	   						if (foundry.equals("-")) {

	   							m43 = "-";
	   							gr43 = "-";

	   						} else {

	   							m43 = foundry;
	   							dm43 = Double.parseDouble(foundry);

	   							if (dm43 >= g1 && dm43 <= g2) {
	   								gr43 = "A";br43 = rsaa.getString("inf");
	   							} else if (dm43 >= g3 && dm43 <= g4) {
	   								gr43 = "B";br43 = rsbb.getString("inf");
	   							} else if (dm43 >= g5 && dm43 <= g6) {
	   								gr43 = "C";br43 = rscc.getString("inf");
	   							} else if (dm43 >= g7 && dm43 <= g8) {
	   								gr43 = "D";br43 = rsdd.getString("inf");
	   							} else if (dm43 >= g9 && dm43 <= g10) {
	   								gr43 = "F";br43 = rsff.getString("inf");
	   							}

	   						}

	   					}
	   					
	   					
	   					
	   					
	   					
	   					
	  					
	                	   
	                		if(value.equals("Kisw")) {
	                    		

	               		       para1 = new Paragraph("WIZARA YA ELIMU NA MAFUNZO YA AMALI ZANZIBAR").setFontSize(11)
	 								.setHorizontalAlignment(HorizontalAlignment.CENTER)
	 								.setBold();
	               		  
	 					       para2 = new Paragraph("SHULE YA SEKONDARI "+rsm.getString("info")).setFontSize(12)
	 									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	 									.setBold();
	 					      
	 					      para3 = new Paragraph("RIPOTI YA MAENDELEO YA MWANAFUNZI YA  "+tx).setFontSize(12)
	 									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	 									.setBold();
	 					      
	 					      para5 = new Paragraph("\nJINA: "+rr.getString("fname")+" "+rr.getString("mname")+" "+rr.getString("lname")+ "        JINSIA: "+rr.getString("gender")+"      "+rr.getString("class")).setFontSize(12)
										.setHorizontalAlignment(HorizontalAlignment.CENTER)
										.setBold();
						      
	                			
	                          	}
	                		
	                		else if(value.equals("Eng")) {
	                    		

	                		       para1 = new Paragraph("MINISTRY OF EDUCATIONAL AND VOCATIONAL TRAINING ZANZIBAR").setFontSize(12)
	  								.setHorizontalAlignment(HorizontalAlignment.CENTER)
	  								.setBold();
	                		  
	  					       para2 = new Paragraph(rsm.getString("info")+"  SECONDARY SCHOOL").setFontSize(12)
	  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	  									.setBold();
	  					      
	  					      para3 = new Paragraph(box44.getSelectedItem().toString()+"   STUDENT'S REPORT").setFontSize(12)
	  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	  									.setBold();
	  					      
	  					      para5 = new Paragraph("\nNAME: "+rr.getString("fname")+" "+rr.getString("mname")+" "+rr.getString("lname")+ "        SEX: "+rr.getString("gender")+"      "+rr.getString("class")).setFontSize(12)
										.setHorizontalAlignment(HorizontalAlignment.CENTER)
										.setBold();
						      
	                 			
	                           	}
	                    		
	                	

					      
					      para4 = new Paragraph(box45.getSelectedItem().toString()+"   "+"  "+box46.getSelectedItem().toString()).setFontSize(12)
									.setHorizontalAlignment(HorizontalAlignment.CENTER)
									.setBold();
					      
					      
					      mudi.addCell(c0);  
					    
					    
	              	   c1 = new Cell().add(para1).setTextAlignment(TextAlignment.CENTER).setFontSize(16).setBold()
	     						.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	     			         	mudi.addCell(c1);
	     			         	
	     			  c1 = new Cell().add(para2).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	             				.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	             			    mudi.addCell(c1);
	             
	             	  c1 = new Cell().add(para3).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	                        			.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	                        	       mudi.addCell(c1);
	                        			       
	                   c1 = new Cell().add(para4).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	                             	.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	                                mudi.addCell(c1);
	                	 
	       			       
	                       c1 = new Cell().add(para5).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	                                    	.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	                       
	                        mudi.addCell(c1);
	              		
	              		
	                        if(value.equals("Kisw")) {
	                        	
	                        	 para6 = new Paragraph("SOMO").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					       para7 = new Paragraph("JARIBIO").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      para8 = new Paragraph("MTIHANI").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      para9 = new Paragraph("WASTANI").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					   para10 = new Paragraph("DARAJA").setFontSize(10)
  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
  									.setBold();
  					      para11 = new Paragraph("MAONI").setFontSize(10)
  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
  									.setBold();
	   					    
	                        	
	                        }else if(value.equals("Eng")) {
	                        	
	                        	 para6 = new Paragraph("SUBJECT").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					       para7 = new Paragraph("MID-TERM").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					       
	   					       if(tid.equals("1")) {
	   					    	   
	   					    	  para8 = new Paragraph("TERMINAL").setFontSize(10)
		   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
		   									.setBold();
	   					       }else {
	   					    	   
	   					    	  para8 = new Paragraph("ANNUAL").setFontSize(10)
		   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
		   									.setBold();
	   					       }
	   					    
	   					      para9 = new Paragraph("AVERAGE").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      
	   					   para10 = new Paragraph("GRADE").setFontSize(10)
  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
  									.setBold();
	   					   
	   					 para11 = new Paragraph("REMARKS").setFontSize(10)
									.setHorizontalAlignment(HorizontalAlignment.CENTER)
									.setBold();
	   					    
	                        }
	                          
	                          
	                      
	                          
						  cc1 = new Cell(1,7).add(para6).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
	                               	.setFontColor(new DeviceRgb(0, 0, 0));
	                                 mudi1.addCell(cc1);
	                  cc1 = new Cell(1,3).add(para7).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	                                    .setFontColor(new DeviceRgb(0, 0, 0));
	                                    mudi1.addCell(cc1);
	                  cc1 = new Cell(1,3).add(para8).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	                                  	.setFontColor(new DeviceRgb(0, 0, 0));
	                                     mudi1.addCell(cc1);
	                  cc1 = new Cell(1,3).add(para9).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	                                   	.setFontColor(new DeviceRgb(0, 0, 0));
	                                    mudi1.addCell(cc1);
	                                    
	                                    cc1 = new Cell().add(para10).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	    	                                  	.setFontColor(new DeviceRgb(0, 0, 0));
	    	                                     mudi1.addCell(cc1);
	    	                  cc1 = new Cell(1,3).add(para11).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	    	                                   	.setFontColor(new DeviceRgb(0, 0, 0));
	    	                                    mudi1.addCell(cc1);
	    	                                    
	    	                                    
	    	                                     
	    	                                    	
	    	            if(!civ.isEmpty() && !civ.equals(null)) {
	    	            	
                         	
	    	            Paragraph par1 = new Paragraph("CIVICS");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
	    	            Paragraph par2 = new Paragraph(civm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
	    	            Paragraph par3 = new Paragraph(civt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
	    	            Paragraph par4 = new Paragraph(m0);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
	    	            Paragraph par5 = new Paragraph(gr0);cc1 = new Cell().add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
	    	            Paragraph par6 = new Paragraph(br0);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
	    	             
	    	            	
	    	            }
	    	            
	    	            if(!his.isEmpty() && !his.equals(null)) {
	    	            	
                         	
		    	            Paragraph par1 = new Paragraph("HISTORY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par2 = new Paragraph(hism);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par3 = new Paragraph(hist);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par4 = new Paragraph(m1);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par5 = new Paragraph(gr1);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par6 = new Paragraph(br1);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	             
		    	            	
		    	            }
	    	            
                            if(!geo.isEmpty() && !geo.equals(null)) {
	    	            	
                         	
		    	            Paragraph par1 = new Paragraph("GEOGRAPHY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par2 = new Paragraph(geom);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par3 = new Paragraph(geot);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par4 = new Paragraph(m2);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par5 = new Paragraph(gr2);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	            Paragraph par6 = new Paragraph(br2);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
		    	             
		    	            	
		    	            }
                            if(!bible.isEmpty() && !bible.equals(null)) {
    	    	            	
                             	
    		    	            Paragraph par1 = new Paragraph("BIBLE KNOWLEDGE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par2 = new Paragraph(biblem);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par3 = new Paragraph(biblet);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par4 = new Paragraph(m3);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par5 = new Paragraph(gr3);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par6 = new Paragraph(br3);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	             
    		    	            	
    		    	         }   
                             if(!dini.isEmpty() && !dini.equals(null)) {
    	    	            	
                             	
    		    	            Paragraph par1 = new Paragraph("DINI YA KIISLAMU");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par2 = new Paragraph(dinim);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par3 = new Paragraph(dinit);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par4 = new Paragraph(m4);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par5 = new Paragraph(gr4);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	            Paragraph par6 = new Paragraph(br4);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
    		    	             
    		    	            	
    		    	         }    if(!art.isEmpty() && !art.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("FINE ART");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(artm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(artt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m5);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr5);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br5);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!music.isEmpty() && !music.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("MUSIC");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(musicm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(musict);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m6);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr6);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br6);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!edu.isEmpty() && !edu.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("PHYSICAL EDUCATION");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(edum);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(edut);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m7);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr7);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br7);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!kisw.isEmpty() && !kisw.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("KISWAHILI");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(kiswm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(kiswt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m8);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr8);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br8);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!eng.isEmpty() && !eng.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ENGLISH LANGAUGE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(engm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(engt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m9);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr9);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br9);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!fre.isEmpty() && !fre.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("FRENCH LANGAUGE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(frem);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(fret);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m10);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr10);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br10);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!lit.isEmpty() && !lit.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("LITERATURE IN ENGLISH");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(litm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(litt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m11);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr11);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br11);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!ara.isEmpty() && !ara.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ARABIC LANGUAGE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(aram);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(arat);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m12);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr12);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br12);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!phy.isEmpty() && !phy.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("PHYSICS");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(phym);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(phyt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m13);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr13);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br13);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!che.isEmpty() && !che.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("CHEMISTRY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(chem);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(chet);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m14);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr14);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br14);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!bio.isEmpty() && !bio.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("BIOLOGY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(biom);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(biot);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m15);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr15);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br15);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!agri.isEmpty() && !agri.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("AGRICULTURAL  SCIENCE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(agrim);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(agrit);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m16);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr16);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br16);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!it.isEmpty() && !it.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("COMPUTER STUDIES");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(itm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(itt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m17);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr17);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br17);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!math.isEmpty() && !math.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("BASIC MATHEMATICS");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(mathm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(matht);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m18);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr18);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br18);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!adm.isEmpty() && !adm.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ADDITIONAL MATHEMATICS");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(admm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(admt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m19);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr19);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br19);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!food.isEmpty() && !food.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("FOOD AND NUTRITION");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(foodm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(foodt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m20);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr20);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br20);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!textile.isEmpty() && !textile.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("TEXTILES & DRESSMAKING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(textilem);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(textilet);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m21);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr21);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br21);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!com.isEmpty() && !com.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("COMMERCE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(comm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(comt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m22);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr22);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br22);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!book.isEmpty() && !book.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("BOOKEEPING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(bookm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(bookt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m23);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr23);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br23);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!build.isEmpty() && !build.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("BUILDING CONSTRUCTION");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(buildm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(buildt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m24);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr24);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br24);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!arch.isEmpty() && !arch.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ARCHITECTURAL DRAUGHT");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(archm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(archt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m25);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr25);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br25);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!survey.isEmpty() && !survey.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("SURVEYING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(surveym);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(surveyt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m26);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr26);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br26);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!carp.isEmpty() && !carp.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("CARPENTRY & JOINERY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(carpm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(carpt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m27);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr27);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br27);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!brick.isEmpty() && !brick.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("BRICKWORK & MASONRY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(brickm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(brickt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m28);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr28);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br28);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!paint.isEmpty() && !paint.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("PAINTING & SIGNWRITING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(paintm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(paintt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m29);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr29);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br29);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!plumb.isEmpty() && !plumb.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("PLUMBING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(plumbm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(plumbt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m30);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr30);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br30);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!elect.isEmpty() && !elect.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ELECTICAL INSTALLATION");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(electm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(electt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m31);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr31);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br31);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!engineer.isEmpty() && !engineer.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ELECTICAL ENGINEERING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(engineerm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(engineert);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m32);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr32);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br32);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!radio.isEmpty() && !radio.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("RADIO & TV SERVISING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(radiom);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(radiot);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m33);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr33);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br33);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!draught.isEmpty() && !draught.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("ELETRICAL DRAUGHTING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(draughtm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(draughtt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m34);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr34);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br34);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!ref.isEmpty() && !ref.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("REFRIGERATION & AC");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(refm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(reft);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m35);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr35);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br35);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!plant.isEmpty() && !plant.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("PLANT MAINTANANCE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(plantm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(plantt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m36);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr36);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br36);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!work.isEmpty() && !work.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("WORKSHOP TECHNOLOGY");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(workm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(workt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m37);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr37);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br37);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!motor.isEmpty() && !motor.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("MOTOR VEHICLE");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(motorm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(motort);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m38);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr38);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br38);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!welding.isEmpty() && !welding.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("WELDING & FABRICATION");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(weldingm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(weldingt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m39);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr39);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br39);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!fit.isEmpty() && !fit.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("FITTING & TURNING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(fitm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(fitt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m40);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr40);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br40);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!auto.isEmpty() && !auto.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("AUTO ELETRIC");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(autom);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(autot);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m41);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr41);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br41);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!mechanic.isEmpty() && !mechanic.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("MECHANICAL DRAUGHTING");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(mechanicm);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(mechanict);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m42);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr42);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br42);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    if(!foundry.isEmpty() && !foundry.equals(null)) {
     	    	            	
                              	
     		    	            Paragraph par1 = new Paragraph("FOUNDRY & BLACKSMITH");cc1 = new Cell(1,7).add(par1).setTextAlignment(TextAlignment.LEFT).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par2 = new Paragraph(foundrym);cc1 = new Cell(1,3).add(par2).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par3 = new Paragraph(foundryt);cc1 = new Cell(1,3).add(par3).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par4 = new Paragraph(m43);cc1 = new Cell(1,3).add(par4).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par5 = new Paragraph(gr43);cc1 = new Cell(1,1).add(par5).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	            Paragraph par6 = new Paragraph(br43);cc1 = new Cell(1,3).add(par6).setTextAlignment(TextAlignment.CENTER).setFontSize(13); mudi1.addCell(cc1);
     		    	             
     		    	            	
     		    	         }    
	    	                                  
	                        	   
	                                  Paragraph res=new Paragraph();
	                               	   
	                                 
	                                  if(value.equals("Kisw")) {
	                                	  
	                                	  res = new Paragraph("AMEPATA DIVISHENI    "+rr.getString("div")+"    YA POINTI    "+rr.getString("point")+""
	                                        		+ "\nWASTANI NI    "+rr.getString("ave")+"    NAFASI YAKE NI    "+rr.getString("rank")+"    KATI YA WANAFUNZI    "+count1+"    KATIKA DARASA");
	                                     
	                                  }else  if(value.equals("Eng")) {
	                                	  res = new Paragraph("DIVISION    "+rr.getString("div")+"    POINTS    "+rr.getString("point")+""
	                                        		+ "\nAVERAGE SCORE    "+rr.getString("ave")+"    POSITION    "+rr.getString("rank")+"    OUT OF    "+count1+"    IN A CLASS");
	                                     
	                                	  
	                                  }
	                                  cc1 = new Cell().add(res).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi2.addCell(cc1);
	                              	
	                                    Paragraph remark = new Paragraph(area1.getText());
	                                    cc1 = new Cell().add(remark).setBorder(Border3D.NO_BORDER).setTextAlignment(TextAlignment.JUSTIFIED).setFontSize(10); mudi3.addCell(cc1);
	                                	
	                	   document.add(new AreaBreak());
	                	   document.add(mudi); 
	                	   document.add(new Paragraph(""));
	                	   document.add(mudi1); 
	                	   document.add(mudi2); 
	                	   document.add(mudi3); 
	                	
	                	
	                	   
	                   }
	                  
	                
				//document.add(mudi);
	            pdf.removePage(1);
				document.close();

				JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
				 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"Report "+box44.getSelectedItem().toString().replaceAll("'", "''")+"~"+box45.getSelectedItem().toString().replaceAll("'", "''")+"~"+box46.getSelectedItem().toString().replaceAll("'", "''")+".pdf");
				
			}else {
				
				JOptionPane.showMessageDialog(null, "No user with that Record !");
				
			}
			
		}
		
			
		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
			
		}
	}

	private void text() {
		try {
			
			String ptext="select * from detail  where rowid='"+2+"'  ";
			 ps=con.prepareStatement(ptext);
			 ResultSet pt=ps.executeQuery();
			 
			 area1.setText(pt.getString("info"));
			 
			
		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage());
		}finally{
            try{
                rs.close();
                ps.close();
            }catch(Exception ex){
                ex.getMessage();
            }}
	
	}
	

	private void Form_Report() {
		
		update();
		
		try {



			text();
			
			
			int result1 = JOptionPane.showConfirmDialog(null, p57, "Edit ",
			        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
			
			if(result1==JOptionPane.OK_OPTION){
				
				
					String sql="update  detail set  info='"+area1.getText()+"' where rowid= '"+2+"'  ";
					
						ps=con.prepareStatement(sql);
						ps.execute();	
						//JOptionPane.showMessageDialog(b1,"Success !");
						
					}
					
			String rsa="select * from Remark_O where rid='A' ";
			ps=con.prepareStatement(rsa);
			ResultSet rsaa=ps.executeQuery();
			
			String rsb="select * from Remark_O where rid='B' ";
			ps=con.prepareStatement(rsb);
			ResultSet rsbb=ps.executeQuery();
			
			String rsc="select * from Remark_O where rid='C' ";
			ps=con.prepareStatement(rsc);
			ResultSet rscc=ps.executeQuery();
			
			String rsd="select * from Remark_O where rid='D' ";
			ps=con.prepareStatement(rsd);
			ResultSet rsdd=ps.executeQuery();
			
			String rsf="select * from Remark_O where rid='F' ";
			ps=con.prepareStatement(rsf);
			ResultSet rsff=ps.executeQuery();
			
			
			String sqll = "select * from Grade_O";
			ps = con.prepareStatement(sqll);
			ResultSet rs5 = ps.executeQuery();

			Double g1 = 0.0, g2 = 0.0, g3 = 0.0, g4 = 0.0, g5 = 0.0, g6 = 0.0, g7 = 0.0, g8 = 0.0, g9 = 0.0,
					g10 = 0.0;
			g1 = rs5.getDouble("g1");
			g2 = rs5.getDouble("g2");
			g3 = rs5.getDouble("g3");
			g4 = rs5.getDouble("g4");
			g5 = rs5.getDouble("g5");
			g6 = rs5.getDouble("g6");
			g7 = rs5.getDouble("g7");
			g8 = rs5.getDouble("g8");
			g9 = rs5.getDouble("g9");
			g10 = rs5.getDouble("g10");
			
		String gr0="";

		int result = JOptionPane.showConfirmDialog(null,pa8, "Select",
			        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
			
		String sql22="Select eid from Exam where ename= '"+box41.getSelectedItem().toString()+"'  ";
		ps=con.prepareStatement(sql22);
		ResultSet rs22=ps.executeQuery();
		

		String sql33="Select tid from Term where tname= '"+box42.getSelectedItem().toString()+"'  ";
		ps=con.prepareStatement(sql33);
		ResultSet rs33=ps.executeQuery();
		
		String sql="Select info from detail where id= '"+1+"' ";
		ps=con.prepareStatement(sql);
		rs=ps.executeQuery();

		String eid=rs22.getString("eid");
		String tid=rs33.getString("tid");
		
		String tx="";
		
		if(tid.equals("1")) {
			
			tx="MUHULA WA KWANZA";
			
		}else {
			
		    tx="MUHULA WA PILI";
			
		}
		
		String sql333="Select info from detail where id= '"+1+"' ";
		ps=con.prepareStatement(sql333);
		rs=ps.executeQuery();
		
		
		
		String ss1="select count(id) from Mark_O where eid='"+eid+"' and tid ='"+tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"'  ";
		ps=con.prepareStatement(ss1);
		ResultSet rs1=ps.executeQuery();
		
		String ss2="select count(id) from Ave_Mark where eid='"+eid+"' and tid ='"+tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"'  ";
		ps=con.prepareStatement(ss2);
		ResultSet rs2=ps.executeQuery();
		
		String sq=" SELECT Ave_Mark.id,fname,lname,gender,Ouser.class,mname,Ave_Mark.id,div,total,point,ave,RANK () OVER (  order by case when ave = '-' then 1 else 0 end, ave DESC ) rank "
		       		+ "FROM Ave_Mark "
		       		+ "INNER JOIN Ouser ON Ouser.id = Ave_Mark.id "
		       		+ "where Ave_Mark.eid='"+eid+"' and Ave_Mark.tid ='"+tid+"' and Ouser.class='"+box40.getSelectedItem().toString()+"' and Ave_Mark.year='"+box43.getSelectedItem().toString()+"'  ";
		
			 	    ps=con.prepareStatement(sq);
			 	    ResultSet rr=ps.executeQuery();
	    
		
		int count=Integer.parseInt(rs1.getString("count(id)"));
		int count1=Integer.parseInt(rs2.getString("count(id)"));
		///JOptionPane.showMessageDialog(null, count);
		
		if(result==JOptionPane.OK_OPTION) {
			
			
			if(count>0)	{
				
				
				
				String sqlll="update  detail set  info='"+area1.getText()+"' where rowid= '"+2+"'  ";
				ps=con.prepareStatement(sqlll);
				ps.execute();	
				//JOptionPane.showMessageDialog(b1,"Success !");
				
				  
				PdfDocument pdf = new PdfDocument(
						new PdfWriter("Report "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf"));
			
				Document document = new Document(pdf, PageSize.A4);

				Table mudi = new Table(1);
					mudi.setWidth(500).setAutoLayout();
				//    mudi = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
				    
				    Table mudi1 = new Table(10);
				mudi1.setWidth(500);
				
				Table mudi2 = new Table(1);
					mudi2.setWidth(500).setAutoLayout();
					
					Table mudi3 = new Table(1);
					mudi2.setWidth(500).setAutoLayout();
					
					ImageData data = ImageDataFactory.create("image/other.png");
					Image image = new Image(data);
					image.setAutoScale(true);
					image.setAutoScale(true);
					image.setBold();
					Cell c0 = new Cell().add(image);
					 Cell c1 =new Cell();
	          	   Cell cc1=new Cell();
	           	 Paragraph para1 =new Paragraph("");	
	           	 Paragraph para2 =new Paragraph("");	 
	           	 Paragraph para3 =new Paragraph("");	
	           	 Paragraph para4 =new Paragraph("");
	         	 Paragraph para5 =new Paragraph("");	
	           	Paragraph para6 =new Paragraph("");	
	          	 Paragraph para7 =new Paragraph("");	 
	          	 Paragraph para8 =new Paragraph("");	
	          	 Paragraph para9 =new Paragraph("");
	        
				      
	  	      
	                   while(rr.next()) {
	                	   
	                	
	                	   String mark = "select * from Mark_O where eid='" + eid + "' and tid ='" + tid + "' and class='"
	  								+ box40.getSelectedItem().toString() + "' and year='"
	  								+ box43.getSelectedItem().toString() + "'  and id = '"+rr.getString("id")+"' order by sid";
	  						ps = con.prepareStatement(mark);
	  						ResultSet rs4 = ps.executeQuery();
	  						
	  						
	                	   mudi = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
	                	   mudi1 = new Table(UnitValue.createPercentArray(10)).useAllAvailableWidth();
	                	   mudi2 = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
	                	   mudi3 = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
	                	   
	                		if(value.equals("Kisw")) {
	                    		

	               		       para1 = new Paragraph("WIZARA YA ELIMU NA MAFUNZO YA AMALI ZANZIBAR").setFontSize(12)
	 								.setHorizontalAlignment(HorizontalAlignment.CENTER)
	 								.setBold();
	               		  
	 					       para2 = new Paragraph("SHULE YA SEKONDARI "+rs.getString("info")).setFontSize(12)
	 									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	 									.setBold();
	 					      
	 					      para3 = new Paragraph("RIPOTI YA MAENDELEO YA MWANAFUNZI YA  "+tx).setFontSize(12)
	 									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	 									.setBold();
	 					      
	 					      para5 = new Paragraph("\nJINA: "+rr.getString("fname")+" "+rr.getString("mname")+" "+rr.getString("lname")+ "        JINSIA: "+rr.getString("gender")+"      "+rr.getString("class")).setFontSize(12)
										.setHorizontalAlignment(HorizontalAlignment.CENTER)
										.setBold();
						      
	                			
	                          	}
	                		
	                		else if(value.equals("Eng")) {
	                    		

	                		       para1 = new Paragraph("MINISTRY OF EDUCATIONAL AND VOCATIONAL TRAINING ZANZIBAR").setFontSize(12)
	  								.setHorizontalAlignment(HorizontalAlignment.CENTER)
	  								.setBold();
	                		  
	  					       para2 = new Paragraph(rs.getString("info")+"  SECONDARY SCHOOL").setFontSize(12)
	  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	  									.setBold();
	  					      
	  					      para3 = new Paragraph(box42.getSelectedItem().toString()+"   STUDENT'S REPORT").setFontSize(12)
	  									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	  									.setBold();
	  					      
	  					      para5 = new Paragraph("\nNAME: "+rr.getString("fname")+" "+rr.getString("mname")+" "+rr.getString("lname")+ "        SEX: "+rr.getString("gender")+"      "+rr.getString("class")).setFontSize(12)
										.setHorizontalAlignment(HorizontalAlignment.CENTER)
										.setBold();
						      
	                 			
	                           	}
	                    		
	                	

					      
					      para4 = new Paragraph(box41.getSelectedItem().toString()+"       "+box40.getSelectedItem().toString()+"   "+"  "+box43.getSelectedItem().toString()).setFontSize(12)
									.setHorizontalAlignment(HorizontalAlignment.CENTER)
									.setBold();
					      
					      
					      mudi.addCell(c0);  
					    
					    
	              	   c1 = new Cell().add(para1).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	     						.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	     			         	mudi.addCell(c1);
	     			         	
	     			  c1 = new Cell().add(para2).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	             				.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	             			    mudi.addCell(c1);
	             
	             	  c1 = new Cell().add(para3).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	                        			.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	                        	       mudi.addCell(c1);
	                        			       
	                   c1 = new Cell().add(para4).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	                             	.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	                                mudi.addCell(c1);
	                	 
	       			       
	                       c1 = new Cell().add(para5).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
	                                    	.setFontColor(new DeviceRgb(0, 0, 0)).setBorder(Border3D.NO_BORDER);
	                       
	                        mudi.addCell(c1);
	              		
	              		
	                        if(value.equals("Kisw")) {
	                        	
	                        	 para6 = new Paragraph("SOMO").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					       para7 = new Paragraph("ALAMA").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      para8 = new Paragraph("DARAJA").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      para9 = new Paragraph("MAONI").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					    
	                        	
	                        }else if(value.equals("Eng")) {
	                        	
	                        	 para6 = new Paragraph("SUBJECT").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					       para7 = new Paragraph("SCORE").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      para8 = new Paragraph("GRADE").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					      para9 = new Paragraph("REMARKS").setFontSize(10)
	   									.setHorizontalAlignment(HorizontalAlignment.CENTER)
	   									.setBold();
	   					    
	                        }
	                          
	                          
	                      
	                          
						  cc1 = new Cell(1,4).add(para6).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
	                               	.setFontColor(new DeviceRgb(0, 0, 0));
	                                 mudi1.addCell(cc1);
	                  cc1 = new Cell(1,2).add(para7).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	                                    .setFontColor(new DeviceRgb(0, 0, 0));
	                                    mudi1.addCell(cc1);
	                  cc1 = new Cell(1,2).add(para8).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	                                  	.setFontColor(new DeviceRgb(0, 0, 0));
	                                     mudi1.addCell(cc1);
	                  cc1 = new Cell(1,2).add(para9).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
	                                   	.setFontColor(new DeviceRgb(0, 0, 0));
	                                    mudi1.addCell(cc1);
	                                    
	                		 
	                	
	                	 
	                                  while(rs4.next()) {
	            							
	            							
	                                	  if(rs4.getString("sid").equals("010")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para10 = new Paragraph("CIVICS");
	                                          cc1 = new Cell(1,4).add(para10).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para11 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para11).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para12 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para12).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para13 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para13).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  
	                                	  if(rs4.getString("sid").equals("012")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para14 = new Paragraph("HISTORY");
	                                            cc1 = new Cell(1,4).add(para14).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para15 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para15).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para16 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para16).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para17 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para17).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("013")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("GEOGRAPHY");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("014")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("BIBLE KNOWLEDGE");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                  	  
	                                	  if(rs4.getString("sid").equals("015")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("ELIMU YA DINI YA KIISLAMU");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("016")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("FINE ART");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                  	  
	                                	  
	                                	  if(rs4.getString("sid").equals("017")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("MUSIC");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("018")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("PHYSICAL EDUCATION");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("021")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("KISWAHILI");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  
	                                	  if(rs4.getString("sid").equals("022")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("ENGLISH LANGAUGE");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("023")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("FRENCH LANGAUGE");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("024")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("LITERATURE IN ENGLISH");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  if(rs4.getString("sid").equals("025")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("ARABIC LANGUAGE");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("031")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("PHYSICS");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("032")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("CHEMISTRY");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("033")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("BIOLOGY");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                              	  
	                                	  
	                                	  if(rs4.getString("sid").equals("034")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("AGRICULTURAL  SCIENCE");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                            	  
	                              	  
	                                	  if(rs4.getString("sid").equals("036")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("INFORMATION AND COMPUTER STUDIES");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("041")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("BASIC MATHEMATICS");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                              	  
	                                	  if(rs4.getString("sid").equals("042")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("ADDITIONAL MATHEMATICS");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("051")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("FOOD AND NUTRITION");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("052")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("TEXTILES AND DRESSMAKING");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("061")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("COMMERCE");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("062")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("BOOKEEPING");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("071")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("BUILDING CONSTRUCTION");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("072")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("ARCHITECTURAL DRAUGHTING");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("073")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("SURVEYING");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                  	  
	                                	  
	                                	  if(rs4.getString("sid").equals("074")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("CARPENTRY AND JOINERY");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  if(rs4.getString("sid").equals("075")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("BRICKWORK AND MASONRY");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("076")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("PAINTING AND SIGNWRITING");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("077")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("PLUMBING");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                  	  
	                                	  
	                                	  if(rs4.getString("sid").equals("081")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("ELECTICAL INSTALLATION");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("082")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("ELECTICAL ENGINEERING SCIENCE");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("083")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("RADIO AND TELEVISION SERVISING");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  if(rs4.getString("sid").equals("084")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("ELETRICAL DRAUGHTING");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  
	                                	  if(rs4.getString("sid").equals("085")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("REFRIGERATION AND AIR CONDITION");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  if(rs4.getString("sid").equals("086")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("PLANT AND EQUIPMENT MAINTANANCE");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  if(rs4.getString("sid").equals("092")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("WORKSHOP TECHNOLOGY");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  
	                                	  if(rs4.getString("sid").equals("093")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("MOTOR VEHICLE MECHANICS");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                	  
	                                	  if(rs4.getString("sid").equals("094")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                        	 
	                                        	Paragraph para18 = new Paragraph("WELDING AND METAL FABRICATION");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                    	  
	                                	  
	                                	  if(rs4.getString("sid").equals("095")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                     	 
	                                      	Paragraph para18 = new Paragraph("FITTING AND TURNING");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                  	  
	                                	  if(rs4.getString("sid").equals("096")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("AUTO ELETRIC");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  if(rs4.getString("sid").equals("097")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                      	 
	                                        	Paragraph para18 = new Paragraph("MECHANICAL DRAUGHTING");
	                                            cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                        	
	                                            Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                            cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                            cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                            
	                                            Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                        	
	                                            if (dm0 >= g1 && dm0 <= g2) {
	                 								gr0 = rsaa.getString("inf");
	                 							} else if (dm0 >= g3 && dm0 <= g4) {
	                 								gr0 = rsbb.getString("inf");
	                 							} else if (dm0 >= g5 && dm0 <= g6) {
	                 								gr0 = rscc.getString("inf");
	                 							} else if (dm0 >= g7 && dm0 <= g8) {
	                 								gr0 =rsdd.getString("inf");
	                 							} else if (dm0 >= g9 && dm0 <= g10) {
	                 								gr0 = rsff.getString("inf");
	                 							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                        	 
	                                         }
	                                	  if(rs4.getString("sid").equals("098")  && !rs4.getString("mark").equals(null)&& !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
	                                       	 
	                                      	Paragraph para18 = new Paragraph("FOUNDRY AND BLACKSMITH");
	                                          cc1 = new Cell(1,4).add(para18).setTextAlignment(TextAlignment.LEFT).setFontSize(10); mudi1.addCell(cc1);
	                                      	
	                                          Paragraph para19 = new Paragraph(rs4.getString("mark"));
	                                          cc1 = new Cell(1,2).add(para19).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Paragraph para20 = new Paragraph(rs4.getString("grade"));
	                                          cc1 = new Cell(1,2).add(para20).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
	                                          
	                                          Double dm0=Double.parseDouble(rs4.getString("mark"));
	                                      	
	                                          if (dm0 >= g1 && dm0 <= g2) {
	               								gr0 = rsaa.getString("inf");
	               							} else if (dm0 >= g3 && dm0 <= g4) {
	               								gr0 = rsbb.getString("inf");
	               							} else if (dm0 >= g5 && dm0 <= g6) {
	               								gr0 = rscc.getString("inf");
	               							} else if (dm0 >= g7 && dm0 <= g8) {
	               								gr0 =rsdd.getString("inf");
	               							} else if (dm0 >= g9 && dm0 <= g10) {
	               								gr0 = rsff.getString("inf");
	               							}
												  Paragraph para21 = new Paragraph(gr0);
		                                             cc1 = new Cell(1,2).add(para21).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi1.addCell(cc1);
		                                         	 
	                                      	 
	                                       }
	                                  	  
	                                		
	          						}
	                        	   
	                                  Paragraph res=new Paragraph();
	                               	   
	                                 
	                                  if(value.equals("Kisw")) {
	                                	  
	                                	  res = new Paragraph("AMEPATA DIVISHENI    "+rr.getString("div")+"    YA POINTI    "+rr.getString("point")+""
	                                        		+ "\nWASTANI NI    "+rr.getString("ave")+"    NAFASI YAKE NI    "+rr.getString("rank")+"    KATI YA WANAFUNZI    "+count1+"    KATIKA DARASA");
	                                     
	                                  }else  if(value.equals("Eng")) {
	                                	  res = new Paragraph("DIVISION    "+rr.getString("div")+"    POINTS    "+rr.getString("point")+""
	                                        		+ "\nAVERAGE SCORE    "+rr.getString("ave")+"    POSITION    "+rr.getString("rank")+"    OUT OF    "+count1+"    IN A CLASS");
	                                     
	                                	  
	                                  }
	                                  cc1 = new Cell().add(res).setTextAlignment(TextAlignment.CENTER).setFontSize(10); mudi2.addCell(cc1);
	                              	
	           					      
	                                  Paragraph remark = new Paragraph(area1.getText());
	                                    cc1 = new Cell().setBorder(com.itextpdf.layout.borders.Border.NO_BORDER).add(remark).setTextAlignment(TextAlignment.JUSTIFIED).setFontSize(10); mudi3.addCell(cc1);
	                                	
	                                    
	                                    
	                       
	                    
	                	   document.add(new AreaBreak());
	                	   document.add(mudi); 
	                	  // document.add(new Paragraph(""));
	                	   document.add(mudi1); 
	                	   document.add(mudi2); 
	                	   document.add(mudi3); 
	                	
	                	
	                   }
	                  
	                
				//document.add(mudi);
	            pdf.removePage(1);
				document.close();

				JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
				 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"Report "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf");
				
			}else {
				
				JOptionPane.showMessageDialog(null, "No user with that Record !");
				
			}
			
		}
		
			
		
			
		
			
		}catch(Exception ex) {
			
			
		}
	}




	private void Class_Report() {
		update();

		try {
			
			int result = JOptionPane.showConfirmDialog(null,pa8, "Select",
			        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
			
			update();
			
			Table mudi11 = new Table(11);
			mudi11.setWidth(400);
			

			Table mudi00 = new Table(1);
			mudi00.setWidth(100);
			
			int ma = 0, mb = 0, mc = 0, md = 0, me = 0, mf = 0, sm = 0;
			int fa = 0, fb = 0, fc = 0, fd = 0, fe = 0, ff = 0, sf = 0;
			int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;

		
		ImageData data = ImageDataFactory.create("image/other.png");
		Image image = new Image(data);
		image.setAutoScale(true);
		image.setAutoScale(true);
		image.setBold();

		Table mudi1 = new Table(1);
		mudi1.setWidth(770).setAutoLayout();
		Cell c0 = new Cell().add(image);
		mudi1.addCell(c0);
		
		
		
		
		if(result==JOptionPane.OK_OPTION) {
			
			String sql22="Select eid from Exam where ename= '"+box41.getSelectedItem().toString()+"'  ";
			ps=con.prepareStatement(sql22);
			ResultSet rs22=ps.executeQuery();
			

			String sql33="Select tid from Term where tname= '"+box42.getSelectedItem().toString()+"'  ";
			ps=con.prepareStatement(sql33);
			ResultSet rs33=ps.executeQuery();
			
			String eid=rs22.getString("eid");
			String tid=rs33.getString("tid");
			
			
			String ss1="select count(id) from Ave_Mark where eid='"+eid+"' and tid ='"+tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"' ";
			ps=con.prepareStatement(ss1);
			ResultSet rs1=ps.executeQuery();
			
			int count=Integer.parseInt(rs1.getString("count(id)"));
			
			
			//JOptionPane.showMessageDialog(null, count);
			
		if(count>0)	{
			
		
		
			try {
				
				String sql="select * from Ave_Mark "
						+ "INNER JOIN Ouser ON Ouser.id =Ave_Mark.id "
						+ "where Ouser.gender= 'F' AND eid='"+eid+"' and tid ='"+tid+"' and Ave_Mark.class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"'";
						
				ps=con.prepareStatement(sql);
			   rs=ps.executeQuery();
				
				while(rs.next()) {
					String ss=rs.getString("div");
					
					if(ss.equals("I")) {
						fa++;
					}else if(ss.equals("II")) {
						fb++;
					}else if(ss.equals("III")) {
						fc++;
					}else if(ss.equals("IV")) {
						fd++;
					}else if(ss.equals("0")) {
						fe++;
					}else {
						ff++;
					}
					
				}
				
				
				
				String sql1="select * from Ave_Mark "
						+ "INNER JOIN Ouser ON Ouser.id =Ave_Mark.id "
						+ "where Ouser.gender= 'M' AND eid='"+eid+"' and tid ='"+tid+"' and Ave_Mark.class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"' ";
						
				ps=con.prepareStatement(sql1);
			    rs=ps.executeQuery();
				
				while(rs.next()) {
					String ss=rs.getString("div");
					
					if(ss.equals("I")) {
						ma++;
					}else if(ss.equals("II")) {
						mb++;
					}else if(ss.equals("III")) {
						mc++;
					}else if(ss.equals("IV")) {
						md++;
					}else if(ss.equals("0")) {
						me++;
					}else {
						mf++;
					}
					
				}
				
				sf = fa + fb + fc + fd + fe + ff;
				sm = ma + mb + mc + md + me + mf;

				a = fa + ma;
				b = fb + mb;
				c = fc + mc;
				d = fd + md;
				e = fe + me;
				f = mf + ff;
				g = a + b + c + d + e + f;

				

				Paragraph parr4 = new Paragraph("SEX");
				Paragraph parr5 = new Paragraph("I");
				Paragraph parr6 = new Paragraph("II");
				Paragraph parr7 = new Paragraph("III");
				Paragraph parr8 = new Paragraph("IV");
				Paragraph parr9 = new Paragraph("O");
				Paragraph parr10 = new Paragraph("INCOMPLETE");
				Paragraph parr11 = new Paragraph("TOTAL");
				Paragraph tt = new Paragraph("DIVISION PERFORMANCE SUMMARY");

				Cell cel1 = new Cell(1, 11).add(tt).setTextAlignment(TextAlignment.CENTER).setFontSize(10)
						.setBold().setBorder(com.itextpdf.layout.borders.Border.NO_BORDER)
						.setFontColor(new DeviceRgb(0, 0, 255));
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr6).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr7).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr8).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr9).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr10).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr11).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi11.addCell(cel1);

				Paragraph parr12 = new Paragraph("F");
				Paragraph parr13 = new Paragraph("" + fa);
				Paragraph parr14 = new Paragraph("" + fb);
				Paragraph parr15 = new Paragraph("" + fc);
				Paragraph parr16 = new Paragraph("" + fd);
				Paragraph parr17 = new Paragraph("" + fe);
				Paragraph parr18 = new Paragraph("" + ff);
				Paragraph parr19 = new Paragraph("" + sf);

				cel1 = new Cell(1, 2).add(parr12).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr13).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr14).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr15).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr16).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr17).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr18).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr19).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);

				Paragraph parr20 = new Paragraph("M");
				Paragraph parr21 = new Paragraph("" + ma);
				Paragraph parr22 = new Paragraph("" + mb);
				Paragraph parr23 = new Paragraph("" + mc);
				Paragraph parr24 = new Paragraph("" + md);
				Paragraph parr25 = new Paragraph("" + me);
				Paragraph parr26 = new Paragraph("" + mf);
				Paragraph parr27 = new Paragraph("" + sm);

				cel1 = new Cell(1, 2).add(parr20).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr21).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr22).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr23).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr24).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr25).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr26).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr27).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);

				Paragraph parr28 = new Paragraph("T");
				Paragraph parr29 = new Paragraph("" + a);
				Paragraph parr30 = new Paragraph("" + b);
				Paragraph parr31 = new Paragraph("" + c);
				Paragraph parr32 = new Paragraph("" + d);
				Paragraph parr33 = new Paragraph("" + e);
				Paragraph parr34 = new Paragraph("" + f);
				Paragraph parr35 = new Paragraph("" + g);

				cel1 = new Cell(1, 2).add(parr28).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr29).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr30).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr31).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr32).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr33).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr34).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr35).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				
				String sql333 = "Select info from detail where id= '" + 1 + "' ";
				ps = con.prepareStatement(sql333);
				rs = ps.executeQuery();
				
				Paragraph parr1 = new Paragraph(rs.getString("info") + " SECONDARY SCHOOL");
				Paragraph parr2 = new Paragraph("" + box41.getSelectedItem().toString() + "  EXAM RESULT");
				Paragraph parr3 = new Paragraph(
						"" + box40.getSelectedItem().toString()+" :: "+box42.getSelectedItem().toString() + " ~ " + box43.getSelectedItem().toString());

				Cell c1 = new Cell().add(parr1).setTextAlignment(TextAlignment.CENTER).setFontSize(20).setBold()
						.setFontColor(new DeviceRgb(0, 128, 255));
				c1.setBorder(Border3D.NO_BORDER);
				mudi00.addCell(c1);

				Cell c2 = new Cell().add(parr2).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
						.setFontColor(new DeviceRgb(0, 128, 255));
				c2.setBorder(Border3D.NO_BORDER);
				mudi00.addCell(c2);

				Cell c3 = new Cell().add(parr3).setTextAlignment(TextAlignment.CENTER).setFontSize(15).setBold()
						.setFontColor(new DeviceRgb(0, 128, 255));
				c3.setBorder(Border3D.NO_BORDER);
				mudi00.addCell(c3);
				mudi00.setWidth(770);
				
				
				
				
			}catch(Exception ex) {
				JOptionPane.showMessageDialog(null, ex.getStackTrace());
			}
			
			
			

				try {
					
                String sqll="select * from Grade_O";
					ps=con.prepareStatement(sqll);
					ResultSet rs5=ps.executeQuery();
					
					String ss="select count(id) from Mark_O where eid='"+eid+"' and tid ='"+tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"' ";
					ps=con.prepareStatement(ss);
					ResultSet rs6=ps.executeQuery();
					
					
					String gpa="select * from Mark_O where eid='"+eid+"' and tid ='"+tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().toString()+"' ";
					ps=con.prepareStatement(gpa);
					ResultSet rs4=ps.executeQuery();
					
					
					
					

					Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
					g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
					g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
					
					
					
					int cou=Integer.parseInt(rs6.getString("count(id)"));
					int total=0;
					


					  String sql11="Select Mark_O.id,Mark_O.mark,Subject_O.sname,Mark_O.year,Mark_O.class, " 
							    + "sum(CASE WHEN Mark_O.sid = '010' THEN Mark_O.mark ELSE '' END) as civ ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '012' THEN Mark_O.mark ELSE '' END) as his, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '013' THEN Mark_O.mark ELSE '' END) as geo, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '014' THEN Mark_O.mark ELSE '' END) as bible ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '015' THEN Mark_O.mark ELSE '' END) as dini, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '016' THEN Mark_O.mark ELSE '' END) as art, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '017' THEN Mark_O.mark ELSE '' END) as music ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '018' THEN Mark_O.mark ELSE '' END) as edu ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '021' THEN Mark_O.mark ELSE '' END) as kisw, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '022' THEN Mark_O.mark ELSE '' END) as eng ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '023' THEN Mark_O.mark ELSE '' END) as fre, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '024' THEN Mark_O.mark ELSE '' END) as lit, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '025' THEN Mark_O.mark ELSE '' END) as ara ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '031' THEN Mark_O.mark ELSE '' END) as phy, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '032' THEN Mark_O.mark ELSE '' END) as che, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '033' THEN Mark_O.mark ELSE '' END) as bio ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '034' THEN Mark_O.mark ELSE '' END) as agri, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '036' THEN Mark_O.mark ELSE '' END) as it, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '041' THEN Mark_O.mark ELSE '' END) as math ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '042' THEN Mark_O.mark ELSE '' END) as adm, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '051' THEN Mark_O.mark ELSE '' END) as food, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '052' THEN Mark_O.mark ELSE '' END) as textile,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '061' THEN Mark_O.mark ELSE '' END) as com, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '062' THEN Mark_O.mark ELSE '' END) as book, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '071' THEN Mark_O.mark ELSE '' END) as build,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '072' THEN Mark_O.mark ELSE '' END) as arch, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '073' THEN Mark_O.mark ELSE '' END) as survey, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '074' THEN Mark_O.mark ELSE '' END) as carp ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '075' THEN Mark_O.mark ELSE '' END) as brick, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '076' THEN Mark_O.mark ELSE '' END) as paint, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '077' THEN Mark_O.mark ELSE '' END) as plumb, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '081' THEN Mark_O.mark ELSE '' END) as elect, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '082' THEN Mark_O.mark ELSE '' END) as engineer ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '083' THEN Mark_O.mark ELSE '' END) as radio, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '084' THEN Mark_O.mark ELSE '' END) as draught, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '085' THEN Mark_O.mark ELSE '' END) as ref, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '086' THEN Mark_O.mark ELSE '' END) as plant, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '092' THEN Mark_O.mark ELSE '' END) as work ,"
		                 		+ "sum(CASE WHEN Mark_O.sid = '093' THEN Mark_O.mark ELSE '' END) as motor, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '094' THEN Mark_O.mark ELSE '' END) as welding, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '095' THEN Mark_O.mark ELSE '' END) as fit, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '096' THEN Mark_O.mark ELSE '' END) as auto, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '097' THEN Mark_O.mark ELSE '' END) as mechanic, "
		                 		+ "sum(CASE WHEN Mark_O.sid = '098' THEN Mark_O.mark ELSE '' END) as foundry "
							    + "from Mark_O " 
		                 		+ "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
							    + "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid " 
							    + " where Mark_O.eid='"+eid+"' and Mark_O.tid ='"+tid+"' and Mark_O.class='"+box40.getSelectedItem().toString()+"' and Mark_O.year='"+box43.getSelectedItem().toString()+"' ";
					            ps = con.prepareStatement(sql11);
				            	ResultSet rs44 = ps.executeQuery();

				            	int n0=0;int n1=0;int n2=0;int n3=0;int n4=0;int n5=0;int n6=0;int n7=0;int n8=0;int n9=0;
								int n10=0;int n11=0;int n12=0;int n13=0;int n14=0;int n15=0;int n16=0;int n17=0;int n18=0;int n19=0;
								int n20=0;int n21=0;int n22=0;int n23=0;int n24=0;int n25=0;int n26=0;int n27=0;int n28=0;int n29=0;
								int n30=0;int n31=0;int n32=0;int n33=0;int n34=0;int n35=0;int n36=0;int n37=0;int n38=0;int n39=0;
								int n40=0;int n41=0;int n42=0;int n43=0;
								
								
								String civ= "";String his = "";String geo =  "";String bible = "";	String dini=  "";String art =  "";String music =  "";String edu =  "";							
								String ara =  "";String phy =  "";String che =  "";	String bio =  ""; String kisw =  "";String eng =  "";String fre =  "";String lit =  ""; 								
								String agri =  "";String it =  "";String math = "";	String adm =  "";String food =  "";String textile =  "";String com = "";String book =  "";							
								String build =  "";	String arch =  "";String survey = "";String carp =  ""; String brick = "";String paint =  "";String plumb =  "";							
								String elect =  "";	String engineer =  "";String radio =  "";String draught =  "";String ref =  "";	String plant =  "";	String work =  "";						
								String motor = "";String welding =  "";	String fit =  "";String auto =  "";	String mechanic =  "";String foundry =  "";
						
							
								
					

					String m0="";String m1="";String m2="";String m3="";String m4="";String m5="";String m6="";String m7="";String m8="";String m9="";
					String m10="";String m11="";String m12="";String m13="";String m14="";String m15="";String m16="";String m17="";String m18="";String m19="";
					String m20="";String m21="";String m22="";String m23="";String m24="";String m25="";String m26="";String m27="";String m28="";String m29="";
					String m30="";String m31="";String m32="";String m33="";String m34="";String m35="";String m36="";String m37="";String m38="";String m39="";
					String m40="";String m41="";String m42="";String m43="";
					
					Double dm0=0.0;Double dm1=0.0;Double dm2=0.0;Double dm3=0.0;Double dm4=0.0;Double dm5=0.0;Double dm6=0.0;Double dm7=0.0;Double dm8=0.0;Double dm9=0.0;
					Double dm10=0.0;Double dm11=0.0;Double dm12=0.0;Double dm13=0.0;Double dm14=0.0;Double dm15=0.0;Double dm16=0.0;Double dm17=0.0;Double dm18=0.0;Double dm19=0.0;
					Double dm20=0.0;Double dm21=0.0;Double dm22=0.0;Double dm23=0.0;Double dm24=0.0;Double dm25=0.0;Double dm26=0.0;Double dm27=0.0;Double dm28=0.0;Double dm29=0.0;
					Double dm30=0.0;Double dm31=0.0;Double dm32=0.0;Double dm33=0.0;Double dm34=0.0;Double dm35=0.0;Double dm36=0.0;Double dm37=0.0;Double dm38=0.0;Double dm39=0.0;
					Double dm40=0.0;Double dm41=0.0;Double dm42=0.0;Double dm43=0.0;
					
					
					String gr0="";String gr1="";String gr2="";String gr3="";String gr4="";String gr5="";String gr6="";String gr7="";String gr8="";String gr9="";
					String gr10="";String gr11="";String gr12="";String gr13="";String gr14="";String gr15="";String gr16="";String gr17="";String gr18="";String gr19="";
					String gr20="";String gr21="";String gr22="";String gr23="";String gr24="";String gr25="";String gr26="";String gr27="";String gr28="";String gr29="";
					String gr30="";String gr31="";String gr32="";String gr33="";String gr34="";String gr35="";String gr36="";String gr37="";String gr38="";String gr39="";
					String gr40="";String gr41="";String gr42="";String gr43="";
					
					 civ=rs44.getString("civ"); his=rs44.getString("his"); geo=rs44.getString("geo"); bible=rs44.getString("bible");
					 dini=rs44.getString("dini"); art=rs44.getString("art"); music=rs44.getString("music"); edu=rs44.getString("edu");
					 kisw=rs44.getString("kisw"); eng=rs44.getString("eng"); fre=rs44.getString("fre"); lit=rs44.getString("lit");
					 ara=rs44.getString("ara"); phy=rs44.getString("phy"); che=rs44.getString("che"); bio=rs44.getString("bio");
					 agri=rs44.getString("agri"); it=rs44.getString("it"); math=rs44.getString("math"); adm=rs44.getString("adm");
					 food=rs44.getString("food"); textile=rs44.getString("textile"); com=rs44.getString("com"); book=rs44.getString("book");
					 build=rs44.getString("build"); arch=rs44.getString("arch"); survey=rs44.getString("survey"); carp=rs44.getString("carp");
					 brick=rs44.getString("brick"); paint=rs44.getString("paint"); plumb=rs44.getString("plumb"); elect=rs44.getString("elect");
					 engineer=rs44.getString("engineer"); radio=rs44.getString("radio"); draught=rs44.getString("draught"); ref=rs44.getString("ref");
					 plant=rs44.getString("plant"); work=rs44.getString("work"); motor=rs44.getString("motor"); welding=rs44.getString("welding");
					 fit=rs44.getString("fit"); auto=rs44.getString("auto"); mechanic=rs44.getString("mechanic"); foundry=rs44.getString("foundry");
					
					
					if (civ.equals("0.0") ) {

						n0 = 1;
					}
					if (his.equals("0.0") ) {

						n1 = 1;
					}
					if (geo.equals("0.0") ) {

						n2 = 1;
					}
					if (bible.equals("0.0") ) {

						n3 = 1;
					}
					if (dini.equals("0.0") ) {

						n4 = 1;
					}
					if (art.equals("0.0") ) {

						n5 = 1;
					}
					if (music.equals("0.0") ) {

						n6 = 1;
					}
					if (edu.equals("0.0") ) {

						n7 = 1;
					}
					if (kisw.equals("0.0")) {

						n8 = 1;
					}
					if (eng.equals("0.0") ) {

						n9 = 1;
					}
					if (fre.equals("0.0")) {

						n10 = 1;
					}
					if (lit.equals("0.0") ) {

						n11 = 1;
					}
					if (ara.equals("0.0")) {

						n12 = 1;
					}
					if (phy.equals("0.0") ) {

						n13 = 1;
					}
					if (che.equals("0.0") ) {

						n14 = 1;
					}
					if (bio.equals("0.0") ) {

						n15 = 1;
					}
					if (agri.equals("0.0") ) {

						n16 = 1;
					}
					if (it.equals("0.0")) {

						n17 = 1;
					}
					if (math.equals("0.0") ) {

						n18 = 1;
					}
					if (adm.equals("0.0") ) {

						n19 = 1;
					}
					if (food.equals("0.0") ) {

						n20 = 1;
					}
					if (textile.equals("0.0") ) {

						n21 = 1;
					}
					if (com.equals("0.0") ) {

						n22 = 1;
					}
					if (book.equals("0.0") ) {

						n23 = 1;
					}
					if (build.equals("0.0") ) {

						n24 = 1;
					}
					if (arch.equals("0.0") ) {
						n25 = 1;
					}
					if (survey.equals("0.0") ) {

						n26 = 1;
					}
					if (carp.equals("0.0") ) {

						n27 = 1;
					}
					if (brick.equals("0.0") ) {

						n28 = 1;
					}
					if (paint.equals("0.0") ) {

						n29 = 1;
					}
					if (plumb.equals("0.0") ) {

						n30 = 1;
					}
					if (elect.equals("0.0")) {

						n31 = 1;
					}
					if (engineer.equals("0.0") ) {

						n32 = 1;
					}
					if (radio.equals("0.0")) {

						n33 = 1;
					}
					if (draught.equals("0.0") ) {

						n34 = 1;
					}
					if (ref.equals("0.0") ) {

						n35 = 1;
					}
					if (plant.equals("0.0") ) {

						n36 = 1;
					}
					if (work.equals("0.0") ) {

						n37 = 1;
					}
					if (motor.equals("0.0") ) {

						n38 = 1;
					}
					if (welding.equals("0.0") ) {

						n39 = 1;
					}
					if (fit.equals("0.0") ) {

						n40 = 1;
					}
					if (auto.equals("0.0")) {

						n41 = 1;
					}
					if (mechanic.equals("0.0") ) {

						n42 = 1;
					}
					if (foundry.equals("0.0") ) {

						n43 = 1;
					}

					int st =n0+ n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + n10 + n11 + n12 + n13 + n14 + n15 + n16
							+ n17 + n18 + n19 + n20 + n21 + n22 + n23 + n24 + n25 + n26 + n27 + n28 + n29 + n30
							+ n31 + n32 + n33 + n34 + n35 + n36 + n37 + n38 + n39 + n40 + n41 + n42 + n43;
				
					Paragraph par1 = new Paragraph("STUDENT NAME").setFontSize(9)
							.setTextAlignment(TextAlignment.CENTER).setBold();
					Paragraph par2 = new Paragraph("SEX").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph par3 = new Paragraph("AVERAGE").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph par4 = new Paragraph("POSITION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph par5 = new Paragraph("POINT").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph par6 = new Paragraph("DIVISION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para1 = new Paragraph("CIVICS").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para2 = new Paragraph("HISTRORY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para3 = new Paragraph("GEOGRAPHY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para4 = new Paragraph("BIBLE KNOWLEDGE").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para5 = new Paragraph("DINI YA KIISLAMU").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para6 = new Paragraph("FINE ART").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para7 = new Paragraph("MUSIC").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para8 = new Paragraph("PHYSICAL EDUCATION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para9 = new Paragraph("KISWAHILI").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para10 = new Paragraph("ENGLISH").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para11 = new Paragraph("FRENCH").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para12 = new Paragraph("LITERATURE").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para13 = new Paragraph("ARABIC").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para14 = new Paragraph("PHYSICS").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para15 = new Paragraph("CHEMISTRY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para16 = new Paragraph("BIOLOGY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para17 = new Paragraph("AGRICULTURE").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para18 = new Paragraph("INFORMATION TECHNOLOGY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para19 = new Paragraph("BASIC MATHEMATICS").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para20 = new Paragraph("ADDITIONAL MATHEMATICS").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para21 = new Paragraph("FOOOD & NUTRITION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para22 = new Paragraph("TEXTILES & DRESSMAKING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para23 = new Paragraph("COMMERCE").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para24 = new Paragraph("BOOKEEPING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para25 = new Paragraph("BUILDING CONSTRUCTION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para26 = new Paragraph("ARCHITECTURAL DRAUGHTING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para27 = new Paragraph("SURVEYING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para28 = new Paragraph("CARPENTRY & JOINERY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para29 = new Paragraph("BRICKWORK & MASONRY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para30 = new Paragraph("PAINTING & SIGNWRITING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para31 = new Paragraph("PLUMBING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para32 = new Paragraph("ELECTICAL INSTALLATION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para33 = new Paragraph("ELECTICAL ENGINEERING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para34 = new Paragraph("RADIO & TELEVISION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para35 = new Paragraph("ELETRICAL DRAUGHTING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para36 = new Paragraph("REFRIGERATION & AIR CONDITION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para37 = new Paragraph("PLANT & EQUIPMENT").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para38 = new Paragraph("WORKSHOP TECHNOLOGY").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para39 = new Paragraph("MOTOR VEHICLE MECHANICS").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para40 = new Paragraph("WELDING & FABRICATION").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para41 = new Paragraph("FITTING & TURNING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para42 = new Paragraph("AUTO ELETRIC").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para43 = new Paragraph("MECHANICAL DRAUGHTING").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					Paragraph para44 = new Paragraph("FOUNDRY & BLACKSMITH").setFontSize(9)
							.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
							.setBold();
					
					if(value.equals("All")) {
						
						mudi2 = new Table(12 + (44 - st) * 2);
						mudi2.setWidth(770);
						mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

						
					}
					
	                  if(value.equals("No Division")) {
						
						mudi2 = new Table(10 + (44 - st) * 2);
						mudi2.setWidth(770);
						mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

						
					}
	                  
	                  if(value.equals("No Position")) {
	                	  
	                	  mudi2 = new Table(11 + (44 - st) * 2);
	  					mudi2.setWidth(770);
	  					mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
	  					mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
	  							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

	                  }
	                  
	                  if(value.equals("No Division & Position")) {
	                		
	                	  mudi2 = new Table(9 + (44 - st) * 2);
	  					mudi2.setWidth(770);
	  					mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
	  					mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
	  							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

	                		
	                  }


					
					if (!civ.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para1));
					}

					if (!his.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para2));
					}

					if (!geo.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para3));
					}

					if (!bible.equals("0.0")) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para4));
					}

					if (!dini.equals("0.0")) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(7).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para5));
					}

					if (!art.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(7).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para6));
					}

					if (!music.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para7));
					}

					if (!edu.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(7).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para8));
					}

					if (!kisw.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para9));
					}

					if (!eng.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para10));
					}

					if (!fre.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para11));
					}

					if (!lit.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para12));
					}

					if (!ara.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para13));
					}

					if (!phy.equals("0.0")) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para14));
					}

					if (!che.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para15));
					}

					if (!bio.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para16));
					}

					if (!agri.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para17));
					}

					if (!it.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para18));
					}

					if (!math.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para19));
					}

					if (!adm.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para20));
					}

					if (!food.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para21));
					}

					if (!textile.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para22));
					}

					if (!com.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para23));
					}

					if (!book.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para24));
					}

					if (!build.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para25));
					}

					if (!arch.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para26));
					}

					if (!survey.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para27));
					}

					if (!carp.equals("0.0")) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para28));
					}

					if (!brick.equals("0.0")) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para29));
					}

					if (!paint.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para30));
					}

					if (!plumb.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para31));
					}

					if (!engineer.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para32));
					}

					if (!elect.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para33));
					}

					if (!radio.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para34));
					}

					if (!draught.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para35));
					}

					if (!ref.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para36));
					}

					if (!plant.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para37));
					}

					if (!work.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para38));
					}

					if (!motor.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para39));
					}

					if (!welding.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para40));
					}

					if (!fit.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para41));
					}

					if (!auto.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para42));
					}

					if (!mechanic.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para43));
					}

					if (!foundry.equals("0.0") ) {
						mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE)
								.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para44));
					}

					if(value.equals("All")) {
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
						
					}
					
					  if(value.equals("No Division")) {
						  
						  mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
									.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
							mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
									.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
						//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
						//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
						//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
						//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
					  }
					
					  if(value.equals("No Position")) {
							

							mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
									.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
						//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
						//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
							mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
									.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
							mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
									.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
							
						
							
						}


		                 if(value.equals("No Division & Position")) {
			

		 					mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
		 							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
		 				//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
		 				//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
		 				//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
		 				//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
		 				//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
		 				//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
		 					
		 				
			
		                }

					String sq = " SELECT * ,RANK () OVER (  order by case when ave = '-' then 1 else 0 end, ave DESC ) rank "
							+ "FROM Ave_Mark " + "INNER JOIN Ouser ON Ouser.id = Ave_Mark.id "
							+ "where Ave_Mark.tid ='" + tid + "' and Ave_Mark.eid='"+eid+"' and  Ave_Mark.class='"+ box40.getSelectedItem().toString() + "' and "
							+ "Ave_Mark.year='"+ box43.getSelectedItem().toString()
							+ "'  ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC  ";

					ps = con.prepareStatement(sq);
					ResultSet rr = ps.executeQuery();

					while (rr.next()) {
						
						


						String sqll1 = "Select Mark_O.id,Mark_O.mark,Subject_O.sname, "
								+ "max(CASE WHEN Mark_O.sid = '010' THEN Mark_O.mark ELSE '' END) as civ ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '012' THEN Mark_O.mark ELSE '' END) as his, "
		                 		+ "max(CASE WHEN Mark_O.sid = '013' THEN Mark_O.mark ELSE '' END) as geo, "
		                 		+ "max(CASE WHEN Mark_O.sid = '014' THEN Mark_O.mark ELSE '' END) as bible ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '015' THEN Mark_O.mark ELSE '' END) as dini, "
		                 		+ "max(CASE WHEN Mark_O.sid = '016' THEN Mark_O.mark ELSE '' END) as art, "
		                 		+ "max(CASE WHEN Mark_O.sid = '017' THEN Mark_O.mark ELSE '' END) as music ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '018' THEN Mark_O.mark ELSE '' END) as edu ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '021' THEN Mark_O.mark ELSE '' END) as kisw, "
		                 		+ "max(CASE WHEN Mark_O.sid = '022' THEN Mark_O.mark ELSE '' END) as eng ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '023' THEN Mark_O.mark ELSE '' END) as fre, "
		                 		+ "max(CASE WHEN Mark_O.sid = '024' THEN Mark_O.mark ELSE '' END) as lit, "
		                 		+ "max(CASE WHEN Mark_O.sid = '025' THEN Mark_O.mark ELSE '' END) as ara ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '031' THEN Mark_O.mark ELSE '' END) as phy, "
		                 		+ "max(CASE WHEN Mark_O.sid = '032' THEN Mark_O.mark ELSE '' END) as che, "
		                 		+ "max(CASE WHEN Mark_O.sid = '033' THEN Mark_O.mark ELSE '' END) as bio ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '034' THEN Mark_O.mark ELSE '' END) as agri, "
		                 		+ "max(CASE WHEN Mark_O.sid = '036' THEN Mark_O.mark ELSE '' END) as it, "
		                 		+ "max(CASE WHEN Mark_O.sid = '041' THEN Mark_O.mark ELSE '' END) as math ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '042' THEN Mark_O.mark ELSE '' END) as adm, "
		                 		+ "max(CASE WHEN Mark_O.sid = '051' THEN Mark_O.mark ELSE '' END) as food, "
		                 		+ "max(CASE WHEN Mark_O.sid = '052' THEN Mark_O.mark ELSE '' END) as textile,"
		                 		+ "max(CASE WHEN Mark_O.sid = '061' THEN Mark_O.mark ELSE '' END) as com, "
		                 		+ "max(CASE WHEN Mark_O.sid = '062' THEN Mark_O.mark ELSE '' END) as book, "
		                 		+ "max(CASE WHEN Mark_O.sid = '071' THEN Mark_O.mark ELSE '' END) as build,"
		                 		+ "max(CASE WHEN Mark_O.sid = '072' THEN Mark_O.mark ELSE '' END) as arch, "
		                 		+ "max(CASE WHEN Mark_O.sid = '073' THEN Mark_O.mark ELSE '' END) as survey, "
		                 		+ "max(CASE WHEN Mark_O.sid = '074' THEN Mark_O.mark ELSE '' END) as carp ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '075' THEN Mark_O.mark ELSE '' END) as brick, "
		                 		+ "max(CASE WHEN Mark_O.sid = '076' THEN Mark_O.mark ELSE '' END) as paint, "
		                 		+ "max(CASE WHEN Mark_O.sid = '077' THEN Mark_O.mark ELSE '' END) as plumb, "
		                 		+ "max(CASE WHEN Mark_O.sid = '081' THEN Mark_O.mark ELSE '' END) as elect, "
		                 		+ "max(CASE WHEN Mark_O.sid = '082' THEN Mark_O.mark ELSE '' END) as engineer ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '083' THEN Mark_O.mark ELSE '' END) as radio, "
		                 		+ "max(CASE WHEN Mark_O.sid = '084' THEN Mark_O.mark ELSE '' END) as draught, "
		                 		+ "max(CASE WHEN Mark_O.sid = '085' THEN Mark_O.mark ELSE '' END) as ref, "
		                 		+ "max(CASE WHEN Mark_O.sid = '086' THEN Mark_O.mark ELSE '' END) as plant, "
		                 		+ "max(CASE WHEN Mark_O.sid = '092' THEN Mark_O.mark ELSE '' END) as work ,"
		                 		+ "max(CASE WHEN Mark_O.sid = '093' THEN Mark_O.mark ELSE '' END) as motor, "
		                 		+ "max(CASE WHEN Mark_O.sid = '094' THEN Mark_O.mark ELSE '' END) as welding, "
		                 		+ "max(CASE WHEN Mark_O.sid = '095' THEN Mark_O.mark ELSE '' END) as fit, "
		                 		+ "max(CASE WHEN Mark_O.sid = '096' THEN Mark_O.mark ELSE '' END) as auto, "
		                 		+ "max(CASE WHEN Mark_O.sid = '097' THEN Mark_O.mark ELSE '' END) as mechanic, "
		                 		+ "max(CASE WHEN Mark_O.sid = '098' THEN Mark_O.mark ELSE '' END) as foundry "
								+ "from Mark_O " 
		                 		+ "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
								+ "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid " 
							    + " where Mark_O.eid='"+eid+"' and Mark_O.tid ='"+tid+"' and Mark_O.class='" +box40.getSelectedItem().toString()+"' and Mark_O.year='"+box43.getSelectedItem().toString()+ "' and Mark_O.id='"+rr.getString("id") + "'  ";
					         	ps = con.prepareStatement(sqll1);
					        	rs = ps.executeQuery();
						
						
						 civ= rs.getString("civ");
						
						 his = rs.getString("his");
						
						 geo = rs.getString("geo");
						
						 bible = rs.getString("bible");
						
						 dini= rs.getString("dini");
						
						 art = rs.getString("art");
						
						 music = rs.getString("music");
						
						 edu = rs.getString("edu");
						
						 ara = rs.getString("ara");
						
						 phy = rs.getString("phy");
						
						 che = rs.getString("che");
						
						 bio = rs.getString("bio");
						
					     kisw = rs.getString("kisw");
						
						 eng = rs.getString("eng");
						
						 fre = rs.getString("fre");
						
						 lit = rs.getString("lit");
						
						 agri = rs.getString("agri");
						
						 it = rs.getString("it");
						
						 math = rs.getString("math");
						
						 adm = rs.getString("adm");
						
						 food = rs.getString("food");
						
						 textile = rs.getString("textile");
						
						 com = rs.getString("com");
						
						 book = rs.getString("book");
						
						 build = rs.getString("build");
						
						 arch = rs.getString("arch");
						
						 survey = rs.getString("survey");
						
						 carp = rs.getString("carp");
						
						 brick = rs.getString("brick");
						
						 paint = rs.getString("paint");
						
						 plumb = rs.getString("plumb");
						
						 elect = rs.getString("elect");
						
						 engineer = rs.getString("engineer");
						
						 radio = rs.getString("radio");
						
						 draught = rs.getString("draught");
						
						 ref = rs.getString("ref");
						
						 plant = rs.getString("plant");
						
						 work = rs.getString("work");
						
						 motor = rs.getString("motor");
						
						 welding = rs.getString("welding");
						
						 fit = rs.getString("fit");
						
						 auto = rs.getString("auto");
						
						 mechanic = rs.getString("mechanic");
						
						 foundry = rs.getString("foundry");
						


						 if(civ.isEmpty() || civ.equals(null)) {
								
								m0="";
								gr0="";
								
							}else {
								
								if(civ.equals("-")) {
									
									m0="-";
									gr0="-";
									
								}else {
									
									m0=civ;
									dm0=Double.parseDouble(civ);
									n0=1;
									
									if(dm0>=g1 && dm0<=g2) {
										gr0="A";
									}else if(dm0>=g3 && dm0<=g4) {
										gr0="B";
									}else if(dm0>=g5 && dm0<=g6) {
										gr0="C";
									}else if(dm0>=g7 && dm0<=g8) {
										gr0="D";
									}else if(dm0>=g9 && dm0<=g10) {
										gr0="F";
									}
									
									
								}
								
							}
							
							

							if(his.isEmpty() || his.equals(null)) {
								
								m1="";
								gr1="";
								
							}else {
								
								if(his.equals("-")) {
									
									m1="-";
									gr1="-";
									
								}else {
									
									m1=his;
									dm1=Double.parseDouble(his);
									n1=1;
									
									if(dm1>=g1 && dm1<=g2) {
										gr1="A";
									}else if(dm1>=g3 && dm1<=g4) {
										gr1="B";
									}else if(dm1>=g5 && dm1<=g6) {
										gr1="C";
									}else if(dm1>=g7 && dm1<=g8) {
										gr1="D";
									}else if(dm1>=g9 && dm1<=g10) {
										gr1="F";
									}
									
									
								}
								
							}	
							
							
							
							
	                   if(geo.isEmpty() || geo.equals(null)) {
								
								m2="";
								gr2="";
								
							}else {
								
								if(geo.equals("-")) {
									
									m2="-";
									gr2="-";
									
								}else {
									
									m2=geo;
									dm2=Double.parseDouble(geo);
									n2=1;
									
									if(dm2>=g1 && dm2<=g2) {
										gr2="A";
									}else if(dm2>=g3 && dm2<=g4) {
										gr2="B";
									}else if(dm2>=g5 && dm2<=g6) {
										gr2="C";
									}else if(dm2>=g7 && dm2<=g8) {
										gr2="D";
									}else if(dm2>=g9 && dm2<=g10) {
										gr2="F";
									}
									
									
								}
								
							}	
							
							
							
	                   if(bible.isEmpty() || bible.equals(null)) {
								
								m3="";
								gr3="";
								
							}else {
								
								if(bible.equals("-")) {
									
									m3="-";
									gr3="-";
									
								}else {
									
									m3=bible;
									dm3=Double.parseDouble(bible);
									n3=1;
									
									if(dm3>=g1 && dm3<=g2) {
										gr3="A";
									}else if(dm3>=g3 && dm3<=g4) {
										gr3="B";
									}else if(dm3>=g5 && dm3<=g6) {
										gr3="C";
									}else if(dm3>=g7 && dm3<=g8) {
										gr3="D";
									}else if(dm3>=g9 && dm3<=g10) {
										gr3="F";
									}
									
									
								}
								
							}	
							
	                   
	                   if(dini.isEmpty() || dini.equals(null)) {
								
								m4="";
								gr4="";
								
							}else {
								
								if(dini.equals("-")) {
									
									m4="-";
									gr4="-";
									
								}else {
									
									m4=dini;
									dm4=Double.parseDouble(dini);
									n4=1;
									
									if(dm4>=g1 && dm4<=g2) {
										gr4="A";
									}else if(dm4>=g3 && dm4<=g4) {
										gr4="B";
									}else if(dm4>=g5 && dm4<=g6) {
										gr4="C";
									}else if(dm4>=g7 && dm4<=g8) {
										gr4="D";
									}else if(dm4>=g9 && dm4<=g10) {
										gr4="F";
									}
									
									
								}
								
							}	
	                   
	                   
	                   if(art.isEmpty() || art.equals(null)) {
								
								m5="";
								gr5="";
								
							}else {
								
								if(art.equals("-")) {
									
									m5="-";
									gr5="-";
									
								}else {
									
									m5=art;
									dm5=Double.parseDouble(art);
									n5=1;
									
									if(dm5>=g1 && dm5<=g2) {
										gr5="A";
									}else if(dm5>=g3 && dm5<=g4) {
										gr5="B";
									}else if(dm5>=g5 && dm5<=g6) {
										gr5="C";
									}else if(dm5>=g7 && dm5<=g8) {
										gr5="D";
									}else if(dm5>=g9 && dm5<=g10) {
										gr5="F";
									}
									
									
								}
								
							}	
	                   
	                   
	                   if(music.isEmpty() || music.equals(null)) {
								
								m6="";
								gr6="";
								
							}else {
								
								if(music.equals("-")) {
									
									m6="-";
									gr6="-";
									
								}else {
									
									m6=music;
									dm6=Double.parseDouble(music);
									n6=1;
									
									if(dm6>=g1 && dm6<=g2) {
										gr6="A";
									}else if(dm6>=g3 && dm6<=g4) {
										gr6="B";
									}else if(dm6>=g5 && dm6<=g6) {
										gr6="C";
									}else if(dm6>=g7 && dm6<=g8) {
										gr6="D";
									}else if(dm6>=g9 && dm6<=g10) {
										gr6="F";
									}
										
								}
								
							}	
	                   
	                   
	                   if(edu.isEmpty() || edu.equals(null)) {
								
								m7="";
								gr7="";
								
							}else {
								
								if(edu.equals("-")) {
									
									m7="-";
									gr7="-";
									
								}else {
									
									m7=edu;
									dm7=Double.parseDouble(edu);
									n7=1;
									
									if(dm7>=g1 && dm7<=g2) {
										gr7="A";
									}else if(dm7>=g3 && dm7<=g4) {
										gr7="B";
									}else if(dm7>=g5 && dm7<=g6) {
										gr7="C";
									}else if(dm7>=g7 && dm7<=g8) {
										gr7="D";
									}else if(dm7>=g9 && dm7<=g10) {
										gr7="F";
									}
										
								}
								
							}	
	                   
	                   
	                   
	                   if(kisw.isEmpty() || kisw.equals(null)) {
								
								m8="";
								gr8="";
								
							}else {
								
								if(kisw.equals("-")) {
									
									m8="-";
									gr8="-";
									
								}else {
									
									m8=kisw;
									dm8=Double.parseDouble(kisw);
									n8=1;
									
									if(dm8>=g1 && dm8<=g2) {
										gr8="A";
									}else if(dm8>=g3 && dm8<=g4) {
										gr8="B";
									}else if(dm8>=g5 && dm8<=g6) {
										gr8="C";
									}else if(dm8>=g7 && dm8<=g8) {
										gr8="D";
									}else if(dm8>=g9 && dm8<=g10) {
										gr8="F";
									}
										
								}
								
							}	
	                   
	                   
	                   
	                   if(eng.isEmpty() || eng.equals(null)) {
								
								m9="";
								gr9="";
								
							}else {
								
								if(eng.equals("-")) {
									
									m9="-";
									gr9="-";
									
								}else {
									
									m9=eng;
									dm9=Double.parseDouble(eng);
									n9=1;
									
									if(dm9>=g1 && dm9<=g2) {
										gr9="A";
									}else if(dm9>=g3 && dm9<=g4) {
										gr9="B";
									}else if(dm9>=g5 && dm9<=g6) {
										gr9="C";
									}else if(dm9>=g7 && dm9<=g8) {
										gr9="D";
									}else if(dm9>=g9 && dm9<=g10) {
										gr9="F";
									}
										
								}
								
							}	
	                   
	                   
	                   
	                   
	                   if(fre.isEmpty() || fre.equals(null)) {
								
								m10="";
								gr10="";
								
							}else {
								
								if(fre.equals("-")) {
									
									m10="-";
									gr10="-";
									
								}else {
									
									m10=fre;
									dm10=Double.parseDouble(fre);
									n10=1;
									
									if(dm10>=g1 && dm10<=g2) {
										gr10="A";
									}else if(dm10>=g3 && dm10<=g4) {
										gr10="B";
									}else if(dm10>=g5 && dm10<=g6) {
										gr10="C";
									}else if(dm10>=g7 && dm10<=g8) {
										gr10="D";
									}else if(dm10>=g9 && dm10<=g10) {
										gr10="F";
									}
										
								}
								
							}	
	                   
	                   
	                   if(lit.isEmpty() || lit.equals(null)) {
								
								m11="";
								gr11="";
								
							}else {
								
								if(lit.equals("-")) {
									
									m11="-";
									gr11="-";
									
								}else {
									
									m11=lit;
									dm11=Double.parseDouble(lit);
									n11=1;
									
									if(dm11>=g1 && dm11<=g2) {
										gr11="A";
									}else if(dm11>=g3 && dm11<=g4) {
										gr11="B";
									}else if(dm11>=g5 && dm11<=g6) {
										gr11="C";
									}else if(dm11>=g7 && dm11<=g8) {
										gr11="D";
									}else if(dm11>=g9 && dm11<=g10) {
										gr11="F";
									}
										
								}
								
							}	
	                   
	                   
	                   
	                   if(ara.isEmpty() || ara.equals(null)) {
								
								m12="";
								gr12="";
								
							}else {
								
								if(ara.equals("-")) {
									
									m12="-";
									gr12="-";
									
								}else {
									
									m12=ara;
									dm12=Double.parseDouble(ara);
									n12=1;
									
									if(dm12>=g1 && dm12<=g2) {
										gr12="A";
									}else if(dm12>=g3 && dm12<=g4) {
										gr12="B";
									}else if(dm12>=g5 && dm12<=g6) {
										gr12="C";
									}else if(dm12>=g7 && dm12<=g8) {
										gr12="D";
									}else if(dm12>=g9 && dm12<=g10) {
										gr12="F";
									}
										
								}
								
							}	
	                   
	                   
	                   
	                   if(phy.isEmpty() || phy.equals(null)) {
								
								m13="";
								gr13="";
								
							}else {
								
								if(phy.equals("-")) {
									
									m13="-";
									gr13="-";
									
								}else {
									
									m13=phy;
									dm13=Double.parseDouble(phy);
									n13=1;
									
									if(dm13>=g1 && dm13<=g2) {
										gr13="A";
									}else if(dm13>=g3 && dm13<=g4) {
										gr13="B";
									}else if(dm13>=g5 && dm13<=g6) {
										gr13="C";
									}else if(dm13>=g7 && dm13<=g8) {
										gr13="D";
									}else if(dm13>=g9 && dm13<=g10) {
										gr13="F";
									}
										
								}
								
							}	
	                   
	                   
	                   if(che.isEmpty() || che.equals(null)) {
								
								m14="";
								gr14="";
								
							}else {
								
								if(che.equals("-")) {
									
									m14="-";
									gr14="-";
									
								}else {
									
									m14=che;
									dm14=Double.parseDouble(che);
									n14=1;
									
									if(dm14>=g1 && dm14<=g2) {
										gr14="A";
									}else if(dm14>=g3 && dm14<=g4) {
										gr14="B";
									}else if(dm14>=g5 && dm14<=g6) {
										gr14="C";
									}else if(dm14>=g7 && dm14<=g8) {
										gr14="D";
									}else if(dm14>=g9 && dm14<=g10) {
										gr14="F";
									}
										
								}
								
							}	
	                   
	                   
	                   if(bio.isEmpty() || bio.equals(null)) {
								
								m15="";
								gr15="";
								
							}else {
								
								if(bio.equals("-")) {
									
									m15="-";
									gr15="-";
									
								}else {
									
									m15=bio;
									dm15=Double.parseDouble(bio);
									n15=1;
									
									if(dm15>=g1 && dm15<=g2) {
										gr15="A";
									}else if(dm15>=g3 && dm15<=g4) {
										gr15="B";
									}else if(dm15>=g5 && dm15<=g6) {
										gr15="C";
									}else if(dm15>=g7 && dm15<=g8) {
										gr15="D";
									}else if(dm15>=g9 && dm15<=g10) {
										gr15="F";
									}
										
								}
								
							}	
	                   
	                   
	                   if(agri.isEmpty() || agri.equals(null)) {
								
								m16="";
								gr16="";
								
							}else {
								
								if(agri.equals("-")) {
									
									m16="-";
									gr16="-";
									
								}else {
									
									m16=agri;
									dm16=Double.parseDouble(agri);
									n16=1;
									
									if(dm16>=g1 && dm16<=g2) {
										gr16="A";
									}else if(dm16>=g3 && dm16<=g4) {
										gr16="B";
									}else if(dm16>=g5 && dm16<=g6) {
										gr16="C";
									}else if(dm16>=g7 && dm16<=g8) {
										gr16="D";
									}else if(dm16>=g9 && dm16<=g10) {
										gr16="F";
									}
										
								}
								
							}	
	                   
	                   
	                   if(it.isEmpty() || it.equals(null)) {
								
								m17="";
								gr17="";
								
							}else {
								
								if(it.equals("-")) {
									
									m17="-";
									gr17="-";
									
								}else {
									
									m17=it;
									dm17=Double.parseDouble(it);
									n17=1;
									
									if(dm17>=g1 && dm17<=g2) {
										gr17="A";
									}else if(dm17>=g3 && dm17<=g4) {
										gr17="B";
									}else if(dm17>=g5 && dm17<=g6) {
										gr17="C";
									}else if(dm17>=g7 && dm17<=g8) {
										gr17="D";
									}else if(dm17>=g9 && dm17<=g10) {
										gr17="F";
									}
										
								}
								
							}
	                   
	                   if(math.isEmpty() || math.equals(null)) {
								
								m18="";
								gr18="";
								
							}else {
								
								if(math.equals("-")) {
									
									m18="-";
									gr18="-";
									
								}else {
									
									m18=math;
									dm18=Double.parseDouble(math);
									n18=1;
									
									if(dm18>=g1 && dm18<=g2) {
										gr18="A";
									}else if(dm18>=g3 && dm18<=g4) {
										gr18="B";
									}else if(dm18>=g5 && dm18<=g6) {
										gr18="C";
									}else if(dm18>=g7 && dm18<=g8) {
										gr18="D";
									}else if(dm18>=g9 && dm18<=g10) {
										gr18="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(adm.isEmpty() || adm.equals(null)) {
								
								m19="";
								gr19="";
								
							}else {
								
								if(adm.equals("-")) {
									
									m19="-";
									gr19="-";
									
								}else {
									
									m19=adm;
									dm19=Double.parseDouble(adm);
									n19=1;
									
									if(dm19>=g1 && dm19<=g2) {
										gr19="A";
									}else if(dm19>=g3 && dm19<=g4) {
										gr19="B";
									}else if(dm19>=g5 && dm19<=g6) {
										gr19="C";
									}else if(dm19>=g7 && dm19<=g8) {
										gr19="D";
									}else if(dm19>=g9 && dm19<=g10) {
										gr19="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(food.isEmpty() || food.equals(null)) {
								
								m20="";
								gr20="";
								
							}else {
								
								if(food.equals("-")) {
									
									m20="-";
									gr20="-";
									
								}else {
									
									m20=food;
									dm20=Double.parseDouble(food);
									n20=1;
									
									if(dm20>=g1 && dm20<=g2) {
										gr20="A";
									}else if(dm20>=g3 && dm20<=g4) {
										gr20="B";
									}else if(dm20>=g5 && dm20<=g6) {
										gr20="C";
									}else if(dm20>=g7 && dm20<=g8) {
										gr20="D";
									}else if(dm20>=g9 && dm20<=g10) {
										gr20="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(textile.isEmpty() || textile.equals(null)) {
								
								m21="";
								gr21="";
								
							}else {
								
								if(textile.equals("-")) {
									
									m21="-";
									gr21="-";
									
								}else {
									
									m21=textile;
									dm21=Double.parseDouble(textile);
									n21=1;
									
									if(dm21>=g1 && dm21<=g2) {
										gr21="A";
									}else if(dm21>=g3 && dm21<=g4) {
										gr21="B";
									}else if(dm21>=g5 && dm21<=g6) {
										gr21="C";
									}else if(dm21>=g7 && dm21<=g8) {
										gr21="D";
									}else if(dm21>=g9 && dm21<=g10) {
										gr21="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(com.isEmpty() || com.equals(null)) {
								
								m22="";
								gr22="";
								
							}else {
								
								if(com.equals("-")) {
									
									m22="-";
									gr22="-";
									
								}else {
									
									m22=com;
									dm22=Double.parseDouble(com);
									n22=1;
									
									if(dm22>=g1 && dm22<=g2) {
										gr22="A";
									}else if(dm22>=g3 && dm22<=g4) {
										gr22="B";
									}else if(dm22>=g5 && dm22<=g6) {
										gr22="C";
									}else if(dm22>=g7 && dm22<=g8) {
										gr22="D";
									}else if(dm22>=g9 && dm22<=g10) {
										gr22="F";
									}
										
								}
								
							}
	                
	                   
	                   
	                   if(book.isEmpty() || book.equals(null)) {
								
								m23="";
								gr23="";
								
							}else {
								
								if(book.equals("-")) {
									
									m23="-";
									gr23="-";
									
								}else {
									
									m23=book;
									dm23=Double.parseDouble(book);
									n23=1;
									
									if(dm23>=g1 && dm23<=g2) {
										gr23="A";
									}else if(dm23>=g3 && dm23<=g4) {
										gr23="B";
									}else if(dm23>=g5 && dm23<=g6) {
										gr23="C";
									}else if(dm23>=g7 && dm23<=g8) {
										gr23="D";
									}else if(dm23>=g9 && dm23<=g10) {
										gr23="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(build.isEmpty() || build.equals(null)) {
								
								m24="";
								gr24="";
								
							}else {
								
								if(build.equals("-")) {
									
									m24="-";
									gr24="-";
									
								}else {
									
									m24=build;
									dm24=Double.parseDouble(build);
									n24=1;
									
									if(dm24>=g1 && dm24<=g2) {
										gr24="A";
									}else if(dm24>=g3 && dm24<=g4) {
										gr24="B";
									}else if(dm24>=g5 && dm24<=g6) {
										gr24="C";
									}else if(dm24>=g7 && dm24<=g8) {
										gr24="D";
									}else if(dm24>=g9 && dm24<=g10) {
										gr24="F";
									}
										
								}
								
							}
	                   
	                   if(arch.isEmpty() || arch.equals(null)) {
								
								m25="";
								gr25="";
								
							}else {
								
								if(arch.equals("-")) {
									
									m25="-";
									gr25="-";
									
								}else {
									
									m25=arch;
									dm25=Double.parseDouble(arch);
									n25=1;
									
									if(dm25>=g1 && dm25<=g2) {
										gr25="A";
									}else if(dm25>=g3 && dm25<=g4) {
										gr25="B";
									}else if(dm25>=g5 && dm25<=g6) {
										gr25="C";
									}else if(dm25>=g7 && dm25<=g8) {
										gr25="D";
									}else if(dm25>=g9 && dm25<=g10) {
										gr25="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(survey.isEmpty() || survey.equals(null)) {
								
								m26="";
								gr26="";
								
							}else {
								
								if(survey.equals("-")) {
									
									m26="-";
									gr26="-";
									
								}else {
									
									m26=survey;
									dm26=Double.parseDouble(survey);
									n26=1;
									
									if(dm26>=g1 && dm26<=g2) {
										gr26="A";
									}else if(dm26>=g3 && dm26<=g4) {
										gr26="B";
									}else if(dm26>=g5 && dm26<=g6) {
										gr26="C";
									}else if(dm26>=g7 && dm26<=g8) {
										gr26="D";
									}else if(dm26>=g9 && dm26<=g10) {
										gr26="F";
									}
										
								}
								
							}
	                
	                   
	                   if(carp.isEmpty() || carp.equals(null)) {
								
								m27="";
								gr27="";
								
							}else {
								
								if(carp.equals("-")) {
									
									m27="-";
									gr27="-";
									
								}else {
									
									m27=carp;
									dm27=Double.parseDouble(carp);
									n27=1;
									
									if(dm27>=g1 && dm27<=g2) {
										gr27="A";
									}else if(dm27>=g3 && dm27<=g4) {
										gr27="B";
									}else if(dm27>=g5 && dm27<=g6) {
										gr27="C";
									}else if(dm27>=g7 && dm27<=g8) {
										gr27="D";
									}else if(dm27>=g9 && dm27<=g10) {
										gr27="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(brick.isEmpty() || brick.equals(null)) {
								
								m28="";
								gr28="";
								
							}else {
								
								if(brick.equals("-")) {
									
									m28="-";
									gr28="-";
									
								}else {
									
									m28=brick;
									dm28=Double.parseDouble(brick);
									n28=1;
									
									if(dm28>=g1 && dm28<=g2) {
										gr28="A";
									}else if(dm28>=g3 && dm28<=g4) {
										gr28="B";
									}else if(dm28>=g5 && dm28<=g6) {
										gr28="C";
									}else if(dm28>=g7 && dm28<=g8) {
										gr28="D";
									}else if(dm28>=g9 && dm28<=g10) {
										gr28="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(paint.isEmpty() || paint.equals(null)) {
								
								m29="";
								gr29="";
								
							}else {
								
								if(paint.equals("-")) {
									
									m29="-";
									gr29="-";
									
								}else {
									
									m29=paint;
									dm29=Double.parseDouble(paint);
									n29=1;
									
									if(dm29>=g1 && dm29<=g2) {
										gr29="A";
									}else if(dm29>=g3 && dm29<=g4) {
										gr29="B";
									}else if(dm29>=g5 && dm29<=g6) {
										gr29="C";
									}else if(dm29>=g7 && dm29<=g8) {
										gr29="D";
									}else if(dm29>=g9 && dm29<=g10) {
										gr29="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(plumb.isEmpty() || plumb.equals(null)) {
								
								m30="";
								gr30="";
								
							}else {
								
								if(plumb.equals("-")) {
									
									m30="-";
									gr30="-";
									
								}else {
									
									m30=plumb;
									dm30=Double.parseDouble(plumb);
									n30=1;
									
									if(dm30>=g1 && dm30<=g2) {
										gr30="A";
									}else if(dm30>=g3 && dm30<=g4) {
										gr30="B";
									}else if(dm30>=g5 && dm30<=g6) {
										gr30="C";
									}else if(dm30>=g7 && dm30<=g8) {
										gr30="D";
									}else if(dm30>=g9 && dm30<=g10) {
										gr30="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(elect.isEmpty() || elect.equals(null)) {
								
								m31="";
								gr31="";
								
							}else {
								
								if(elect.equals("-")) {
									
									m31="-";
									gr31="-";
									
								}else {
									
									m31=elect;
									dm31=Double.parseDouble(elect);
									n31=1;
									
									if(dm31>=g1 && dm31<=g2) {
										gr31="A"; 
									}else if(dm31>=g3 && dm31<=g4) {
										gr31="B";
									}else if(dm31>=g5 && dm31<=g6) {
										gr31="C";
									}else if(dm31>=g7 && dm31<=g8) {
										gr31="D";
									}else if(dm31>=g9 && dm31<=g10) {
										gr31="F";
									}
										
								}
								
							}
	                
	                   
	                   
	                   if(engineer.isEmpty() || engineer.equals(null)) {
								
								m32="";
								gr32="";
								
							}else {
								
								if(engineer.equals("-")) {
									
									m32="-";
									gr32="-";
									
								}else {
									
									m32=engineer;
									dm32=Double.parseDouble(engineer);
									n32=1;
									
									if(dm32>=g1 && dm32<=g2) {
										gr32="A";
									}else if(dm32>=g3 && dm32<=g4) {
										gr32="B";
									}else if(dm32>=g5 && dm32<=g6) {
										gr32="C";
									}else if(dm32>=g7 && dm32<=g8) {
										gr32="D";
									}else if(dm32>=g9 && dm32<=g10) {
										gr32="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(radio.isEmpty() || radio.equals(null)) {
								
								m33="";
								gr33="";
								
							}else {
								
								if(radio.equals("-")) {
									
									m33="-";
									gr33="-";
									
								}else {
									
									m33=radio;
									dm33=Double.parseDouble(radio);
									n33=1;
									
									if(dm33>=g1 && dm33<=g2) {
										gr33="A";
									}else if(dm33>=g3 && dm33<=g4) {
										gr33="B";
									}else if(dm33>=g5 && dm33<=g6) {
										gr33="C";
									}else if(dm33>=g7 && dm33<=g8) {
										gr33="D";
									}else if(dm33>=g9 && dm33<=g10) {
										gr33="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(draught.isEmpty() || draught.equals(null)) {
								
								m34="";
								gr34="";
								
							}else {
								
								if(draught.equals("-")) {
									
									m34="-";
									gr34="-";
									
								}else {
									
									m34=draught;
									dm34=Double.parseDouble(draught);
									n34=1;
									
									if(dm34>=g1 && dm34<=g2) {
										gr34="A";
									}else if(dm34>=g3 && dm34<=g4) {
										gr34="B";
									}else if(dm34>=g5 && dm34<=g6) {
										gr34="C";
									}else if(dm34>=g7 && dm34<=g8) {
										gr34="D";
									}else if(dm34>=g9 && dm34<=g10) {
										gr34="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(ref.isEmpty() || ref.equals(null)) {
								
								m35="";
								gr35="";
								
							}else {
								
								if(ref.equals("-")) {
									
									m35="-";
									gr35="-";
									
								}else {
									
									m35=ref;
									dm35=Double.parseDouble(ref);
									n35=1;
									
									if(dm35>=g1 && dm35<=g2) {
										gr35="A";
									}else if(dm35>=g3 && dm35<=g4) {
										gr35="B";
									}else if(dm35>=g5 && dm35<=g6) {
										gr35="C";
									}else if(dm35>=g7 && dm35<=g8) {
										gr35="D";
									}else if(dm35>=g9 && dm35<=g10) {
										gr35="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(plant.isEmpty() || plant.equals(null)) {
								
								m36="";
								gr36="";
								
							}else {
								
								if(plant.equals("-")) {
									
									m36="-";
									gr36="-";
									
								}else {
									
									m36=plant;
									dm36=Double.parseDouble(plant);
									n36=1;
									
									if(dm36>=g1 && dm36<=g2) {
										gr36="A";
									}else if(dm36>=g3 && dm36<=g4) {
										gr36="B";
									}else if(dm36>=g5 && dm36<=g6) {
										gr36="C";
									}else if(dm36>=g7 && dm36<=g8) {
										gr36="D";
									}else if(dm36>=g9 && dm36<=g10) {
										gr36="F";
									}
										
								}
								
							}
	                   
	                   if(work.isEmpty() || work.equals(null)) {
								
								m37="";
								gr37="";
								
							}else {
								
								if(work.equals("-")) {
									
									m37="-";
									gr37="-";
									
								}else {
									
									m37=work;
									dm37=Double.parseDouble(work);
									n37=1;
									
									if(dm37>=g1 && dm37<=g2) {
										gr37="A";
									}else if(dm37>=g3 && dm37<=g4) {
										gr37="B";
									}else if(dm37>=g5 && dm37<=g6) {
										gr37="C";
									}else if(dm37>=g7 && dm37<=g8) {
										gr37="D";
									}else if(dm37>=g9 && dm37<=g10) {
										gr37="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(motor.isEmpty() || motor.equals(null)) {
								
								m38="";
								gr38="";
								
							}else {
								
								if(motor.equals("-")) {
									
									m38="-";
									gr38="-";
									
								}else {
									
									m38=motor;
									dm38=Double.parseDouble(motor);
									n38=1;
									
									if(dm38>=g1 && dm38<=g2) {
										gr38="A";
									}else if(dm38>=g3 && dm38<=g4) {
										gr38="B";
									}else if(dm38>=g5 && dm38<=g6) {
										gr38="C";
									}else if(dm38>=g7 && dm38<=g8) {
										gr38="D";
									}else if(dm38>=g9 && dm38<=g10) {
										gr38="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(welding.isEmpty() || welding.equals(null)) {
								
								m39="";
								gr39="";
								
							}else {
								
								if(welding.equals("-")) {
									
									m39="-";
									gr39="-";
									
								}else {
									
									m39=welding;
									dm39=Double.parseDouble(welding);
									n39=1;
									
									if(dm39>=g1 && dm39<=g2) {
										gr39="A";
									}else if(dm39>=g3 && dm39<=g4) {
										gr39="B";
									}else if(dm39>=g5 && dm39<=g6) {
										gr39="C";
									}else if(dm39>=g7 && dm39<=g8) {
										gr39="D";
									}else if(dm39>=g9 && dm39<=g10) {
										gr39="F";
									}
										
								}
								
							}
	                   
	                   
	                   if(fit.isEmpty() || fit.equals(null)) {
								
								m40="";
								gr40="";
								
							}else {
								
								if(fit.equals("-")) {
									
									m40="-";
									gr40="-";
									
								}else {
									
									m40=fit;
									dm40=Double.parseDouble(fit);
									n40=1;
									
									if(dm40>=g1 && dm40<=g2) {
										gr40="A";
									}else if(dm40>=g3 && dm40<=g4) {
										gr40="B";
									}else if(dm40>=g5 && dm40<=g6) {
										gr40="C";
									}else if(dm40>=g7 && dm40<=g8) {
										gr40="D";
									}else if(dm40>=g9 && dm40<=g10) {
										gr40="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(auto.isEmpty() || auto.equals(null)) {
								
								m41="";
								gr41="";
								
							}else {
								
								if(auto.equals("-")) {
									
									m41="-";
									gr41="-";
									
								}else {
									
									m41=auto;
									dm41=Double.parseDouble(auto);
									n41=1;
									
									if(dm41>=g1 && dm41<=g2) {
										gr41="A";
									}else if(dm41>=g3 && dm41<=g4) {
										gr41="B";
									}else if(dm41>=g5 && dm41<=g6) {
										gr41="C";
									}else if(dm41>=g7 && dm41<=g8) {
										gr41="D";
									}else if(dm41>=g9 && dm41<=g10) {
										gr41="F";
									}
										
								}
								
							}
	                   
	                   
	                   
	                   if(mechanic.isEmpty() || mechanic.equals(null)) {
								
								m42="";
								gr42="";
								
							}else {
								
								if(mechanic.equals("-")) {
									
									m42="-";
									gr42="-";
									
								}else {
									
									m42=mechanic;
									dm42=Double.parseDouble(mechanic);
									n42=1;
									
									if(dm42>=g1 && dm42<=g2) {
										gr42="A";
									}else if(dm42>=g3 && dm42<=g4) {
										gr42="B";
									}else if(dm42>=g5 && dm42<=g6) {
										gr42="C";
									}else if(dm42>=g7 && dm42<=g8) {
										gr42="D";
									}else if(dm42>=g9 && dm42<=g10) {
										gr42="F";
									}
										
								}
								
							}
	                
	                   
	                   if(foundry.isEmpty() || foundry.equals(null)) {
								
								m43="";
								gr43="";
								
							}else {
								
								if(foundry.equals("-")) {
									
									m43="-";
									gr43="-";
									
								}else {
									
									m43=foundry;
									dm43=Double.parseDouble(foundry);
									n43=1;
									
									if(dm43>=g1 && dm43<=g2) {
										gr43="A";
									}else if(dm43>=g3 && dm43<=g4) {
										gr43="B";
									}else if(dm43>=g5 && dm43<=g6) {
										gr43="C";
									}else if(dm43>=g7 && dm43<=g8) {
										gr43="D";
									}else if(dm43>=g9 && dm43<=g10) {
										gr43="F";
									}
										
								}
								
							}
	                   
	                   
	                   
						PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_BOLD);
						PdfFont font1 = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);

						Paragraph pa1 = new Paragraph(
								rr.getString("fname") + "  " + rr.getString("mname") + "  " + rr.getString("lname"))
										.setFontSize(8).setBold().setFont(font);
						Paragraph pa2 = new Paragraph(rr.getString("gender")).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph pa3 = new Paragraph(rr.getString("ave")).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph pa4 = new Paragraph(rr.getString("rank")).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph pa5 = new Paragraph(rr.getString("point")).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph pa6 = new Paragraph(rr.getString("div")).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);

						Paragraph mk0 = new Paragraph(civ).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gcv = new Paragraph(gr0).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk1 = new Paragraph(his).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph ghis = new Paragraph(gr1).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk2 = new Paragraph(geo).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph ggeo = new Paragraph(gr2).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk3 = new Paragraph(bible).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gbible = new Paragraph(gr3).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk4 = new Paragraph(dini).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gdini = new Paragraph(gr4).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);

						Paragraph mk5 = new Paragraph(art).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gart = new Paragraph(gr5).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk6 = new Paragraph(music).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gmusic = new Paragraph(gr6).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk7 = new Paragraph(edu).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gedu = new Paragraph(gr7).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk8 = new Paragraph(kisw).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gkisw = new Paragraph(gr8).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk9 = new Paragraph(eng).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph geng = new Paragraph(gr9).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk10 = new Paragraph(fre).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gfre = new Paragraph(gr10).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk11 = new Paragraph(lit).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph glit = new Paragraph(gr11).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk12 = new Paragraph(ara).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gara = new Paragraph(gr12).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk13 = new Paragraph(phy).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gphy = new Paragraph(gr13).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk14 = new Paragraph(che).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gche = new Paragraph(gr14).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk15 = new Paragraph(bio).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gbio = new Paragraph(gr15).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk16 = new Paragraph(agri).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gagri = new Paragraph(gr16).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk17 = new Paragraph(it).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph git = new Paragraph(gr17).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk18 = new Paragraph(math).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gmath = new Paragraph(gr18).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk19 = new Paragraph(adm).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gadm = new Paragraph(gr19).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk20 = new Paragraph(food).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gfood = new Paragraph(gr20).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk21 = new Paragraph(textile).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph gtextile = new Paragraph(gr21).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph mk22 = new Paragraph(com).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gcom = new Paragraph(gr22).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk23 = new Paragraph(book).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gbook = new Paragraph(gr23).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk24 = new Paragraph(build).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gbuild = new Paragraph(gr24).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk25 = new Paragraph(arch).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph garch = new Paragraph(gr25).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk26 = new Paragraph(survey).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gsurvey = new Paragraph(gr26).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph mk27 = new Paragraph(carp).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gcarp = new Paragraph(gr27).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk28 = new Paragraph(brick).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gbrick = new Paragraph(gr28).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk29 = new Paragraph(paint).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gpaint = new Paragraph(gr29).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk30 = new Paragraph(plumb).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gplumb = new Paragraph(gr30).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk31 = new Paragraph(elect).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gelect = new Paragraph(gr31).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk32 = new Paragraph(engineer).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph gengineer = new Paragraph(gr32).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph mk33 = new Paragraph(radio).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gradio = new Paragraph(gr33).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk34 = new Paragraph(draught).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph gdraught = new Paragraph(gr34).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph mk35 = new Paragraph(ref).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gref = new Paragraph(gr35).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk36 = new Paragraph(plant).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gplant = new Paragraph(gr36).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk37 = new Paragraph(work).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gwork = new Paragraph(gr37).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk38 = new Paragraph(motor).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gmotor = new Paragraph(gr38).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk39 = new Paragraph(welding).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph gwelding = new Paragraph(gr39).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph mk40 = new Paragraph(fit).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gfit = new Paragraph(gr40).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk41 = new Paragraph(auto).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph gauto = new Paragraph(gr41).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
								.setFont(font1);
						Paragraph mk42 = new Paragraph(mechanic).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph gmechanic = new Paragraph(gr42).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph mk43 = new Paragraph(foundry).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);
						Paragraph gfoundry = new Paragraph(gr43).setFontSize(8)
								.setTextAlignment(TextAlignment.CENTER).setFont(font1);

						mudi2.addCell(new Cell(1, 7).add(pa1));
						mudi2.addCell(new Cell().add(pa2));

						if (!rs44.getString("civ").equals("0.0") ) {

							mudi2.addCell(new Cell().add(mk0));
							mudi2.addCell(new Cell().add(gcv));
						}

						if (!rs44.getString("his").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk1));
							mudi2.addCell(new Cell().add(ghis));
						}

						if (!rs44.getString("geo").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk2));
							mudi2.addCell(new Cell().add(ggeo));
						}
						if (!rs44.getString("bible").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk3));
							mudi2.addCell(new Cell().add(gbible));
						}
						if (!rs44.getString("dini").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk4));
							mudi2.addCell(new Cell().add(gdini));
						}
						if (!rs44.getString("art").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk5));
							mudi2.addCell(new Cell().add(gart));
						}
						if (!rs44.getString("music").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk6));
							mudi2.addCell(new Cell().add(gmusic));
						}
						if (!rs44.getString("edu").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk7));
							mudi2.addCell(new Cell().add(gedu));
						}
						if (!rs44.getString("kisw").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk8));
							mudi2.addCell(new Cell().add(gkisw));
						}
						if (!rs44.getString("eng").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk9));
							mudi2.addCell(new Cell().add(geng));
						}
						if (!rs44.getString("fre").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk10));
							mudi2.addCell(new Cell().add(gfre));
						}
						if (!rs44.getString("lit").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk11));
							mudi2.addCell(new Cell().add(glit));
						}
						if (!rs44.getString("ara").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk12));
							mudi2.addCell(new Cell().add(gara));
						}
						if (!rs44.getString("phy").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk13));
							mudi2.addCell(new Cell().add(gphy));
						}
						if (!rs44.getString("che").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk14));
							mudi2.addCell(new Cell().add(gche));
						}
						if (!rs44.getString("bio").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk15));
							mudi2.addCell(new Cell().add(gbio));
						}
						if (!rs44.getString("agri").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk16));
							mudi2.addCell(new Cell().add(gagri));
						}
						if (!rs44.getString("it").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk17));
							mudi2.addCell(new Cell().add(git));
						}
						if (!rs44.getString("math").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk18));
							mudi2.addCell(new Cell().add(gmath));
						}
						if (!rs44.getString("adm").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk19));
							mudi2.addCell(new Cell().add(gadm));

						}
						if (!rs44.getString("food").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk20));
							mudi2.addCell(new Cell().add(gfood));
						}
						if (!rs44.getString("textile").equals("0.0")) {
							mudi2.addCell(new Cell().add(mk21));
							mudi2.addCell(new Cell().add(gtextile));
						}
						if (!rs44.getString("com").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk22));
							mudi2.addCell(new Cell().add(gcom));
						}
						if (!rs44.getString("book").equals("0.0"))  {
							mudi2.addCell(new Cell().add(mk24));
							mudi2.addCell(new Cell().add(gbuild));
						}
						if (!rs44.getString("arch").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk25));
							mudi2.addCell(new Cell().add(garch));
						}
						if (!rs44.getString("survey").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk26));
							mudi2.addCell(new Cell().add(gsurvey));
						}
						if (!rs44.getString("carp").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk27));
							mudi2.addCell(new Cell().add(gcarp));
						}
						if (!rs44.getString("brick").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk28));
							mudi2.addCell(new Cell().add(gbrick));
						}
						if (!rs44.getString("paint").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk29));
							mudi2.addCell(new Cell().add(gpaint));
						}
						if (!rs44.getString("plumb").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk30));
							mudi2.addCell(new Cell().add(gplumb));
						}
						if (!rs44.getString("elect").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk31));
							mudi2.addCell(new Cell().add(gelect));

						}
						if (!rs44.getString("engineer").equals("0.0")) {
							mudi2.addCell(new Cell().add(mk32));
							mudi2.addCell(new Cell().add(gengineer));

						}
						if (!rs44.getString("radio").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk33));
							mudi2.addCell(new Cell().add(gradio));

						}
						if (!rs44.getString("draught").equals("0.0")) {
							mudi2.addCell(new Cell().add(mk34));
							mudi2.addCell(new Cell().add(gdraught));

						}
						if (!rs44.getString("ref").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk35));
							mudi2.addCell(new Cell().add(gref));

						}
						if (!rs44.getString("plant").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk36));
							mudi2.addCell(new Cell().add(gplant));

						}
						if (!rs44.getString("work").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk37));
							mudi2.addCell(new Cell().add(gwork));

						}
						if (!rs44.getString("motor").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk38));
							mudi2.addCell(new Cell().add(gmotor));
						}
						if (!rs44.getString("welding").equals("0.0")) {
							mudi2.addCell(new Cell().add(mk39));
							mudi2.addCell(new Cell().add(gwelding));
						}
						if (!rs44.getString("fit").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk40));
							mudi2.addCell(new Cell().add(gfit));
						}
						if (!rs44.getString("auto").equals("0.0") ) {
							mudi2.addCell(new Cell().add(mk41));
							mudi2.addCell(new Cell().add(gauto));
						}
						if (!rs44.getString("mechanic").equals("0.0")) {
							mudi2.addCell(new Cell().add(mk42));
							mudi2.addCell(new Cell().add(gmechanic));
						}
						if (!rs44.getString("foundry").equals("0.0")) {
							mudi2.addCell(new Cell().add(mk43));
							mudi2.addCell(new Cell().add(gfoundry));
						}

						

						if(value.equals("All")) {
							
							mudi2.addCell(new Cell().add(pa3));
							mudi2.addCell(new Cell().add(pa4));
							mudi2.addCell(new Cell().add(pa5));
							mudi2.addCell(new Cell().add(pa6));
							
						}
						 if(value.equals("No Division")) {
							 
							    mudi2.addCell(new Cell().add(pa3));
								mudi2.addCell(new Cell().add(pa4));
							//	mudi2.addCell(new Cell().add(pa5));
							//	mudi2.addCell(new Cell().add(pa6));
						 }
						 
						 if(value.equals("No Position")) {
								
							    mudi2.addCell(new Cell().add(pa3));
							//	mudi2.addCell(new Cell().add(pa4));
								mudi2.addCell(new Cell().add(pa5));
								mudi2.addCell(new Cell().add(pa6));
								
							}


			                 if(value.equals("No Division & Position")) {
				
			                	   mudi2.addCell(new Cell().add(pa3));
								//	mudi2.addCell(new Cell().add(pa4));
								//	mudi2.addCell(new Cell().add(pa5));
								 // 	mudi2.addCell(new Cell().add(pa6));
				
			                }
						
					
						
						
						
					}

					String sql333 = "Select info from detail where id= '" + 1 + "' ";
					ps = con.prepareStatement(sql333);
					rs = ps.executeQuery();


					PdfDocument pdf = new PdfDocument(
							new PdfWriter(box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf"));
					Document document = new Document(pdf, PageSize.A4.rotate());

					analysis1();

					document.add(mudi1);
	                document.add(new Paragraph(""));
					document.add(mudi00);
					
					if(value.equals("All")) {

						document.add(new Paragraph(""));
						document.add(mudi11);
					}
					if(value.equals("No Division")) {
					//	document.add(new Paragraph(""));
					//	document.add(mudi11);
						
					}
					 if(value.equals("No Position")) {
							
						 document.add(new Paragraph(""));
							document.add(mudi11);
							
						}


		                 if(value.equals("No Division & Position")) {
			
		               // 	 document.add(new Paragraph(""));
		 				//	document.add(mudi11);
			
		                }

				
				  
							analysis();  
							
							
							document.add(new Paragraph("\n"));
							document.add(mudi2);
							document.add(new Paragraph("\n"));
							
							document.add(mudi20);
							//document.add(mudi21);
							
							document.close();

							JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
						    Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf");
						      
					
				}catch(Exception ex) {
					//JOptionPane.showMessageDialog(null, ex.getMessage());
				}   finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
				
				
			
			
		}else {
			
			JOptionPane.showMessageDialog(null, "No user with that Record !");
		}
			
			
			
			
		}
		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage());
		}
		
	
		
		
	}




	private void Term_Report() {
		
		update1();
		try{
		

			int result = JOptionPane.showConfirmDialog(null,pa9, "Select",
			        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
			
			 
			int ma = 0, mb = 0, mc = 0, md = 0, me = 0, mf = 0, sm = 0;
			int fa = 0, fb = 0, fc = 0, fd = 0, fe = 0, ff = 0, sf = 0;
			int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;

			String sqll = "select * from Grade_O";
			ps = con.prepareStatement(sqll);
			ResultSet rs5 = ps.executeQuery();

			Double g1 = 0.0, g2 = 0.0, g3 = 0.0, g4 = 0.0, g5 = 0.0, g6 = 0.0, g7 = 0.0, g8 = 0.0, g9 = 0.0,
					g10 = 0.0;
			g1 = rs5.getDouble("g1");
			g2 = rs5.getDouble("g2");
			g3 = rs5.getDouble("g3");
			g4 = rs5.getDouble("g4");
			g5 = rs5.getDouble("g5");
			g6 = rs5.getDouble("g6");
			g7 = rs5.getDouble("g7");
			g8 = rs5.getDouble("g8");
			g9 = rs5.getDouble("g9");
			g10 = rs5.getDouble("g10");

			String sql33 = "Select tid from Term where tname= '" + box45.getSelectedItem().toString() + "'  ";
			ps = con.prepareStatement(sql33);
			ResultSet rs33 = ps.executeQuery();

			String tid = rs33.getString("tid");
			
			int exam1=0,exam2=0;
			
			if(tid.equals("1")) {
				exam1=1;exam2=2;
				//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
				
			}else {
				exam1=1;exam2=3;
				//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
				
			}

		//	JOptionPane.showMessageDialog(null, tid);
			
			String ss = "select count(id) from Ave_MarkT where tid ='" + tid + "' and class='"
					+ box44.getSelectedItem().toString() + "' and year='" + box46.getSelectedItem().toString()
					+ "' ";
			ps = con.prepareStatement(ss);
			ResultSet rs0 = ps.executeQuery();
			

			int count1 = Integer.parseInt(rs0.getString("count(id)"));
			
			//JOptionPane.showMessageDialog(null, count1);

			if (count1 > 0) {

				String sql = "select * from Ave_MarkT " + "INNER JOIN Ouser ON Ouser.id =Ave_MarkT.id "
						+ "where Ouser.gender= 'F' AND tid ='" + tid + "' and Ave_MarkT.class='"
						+ box44.getSelectedItem().toString() + "' and year='"
						+ box46.getSelectedItem().toString() + "'";

				ps = con.prepareStatement(sql);
				rs = ps.executeQuery();

				while (rs.next()) {

					String ss0 = rs.getString("div");

					if (ss0.equals("I")) {
						fa++;
					} else if (ss0.equals("II")) {
						fb++;
					} else if (ss0.equals("III")) {
						fc++;
					} else if (ss0.equals("IV")) {
						fd++;
					} else if (ss0.equals("0")) {
						fe++;
					} else {
						ff++;
					}

				}

				sf = fa + fb + fc + fd + fe + ff;

				String sql1 = "select * from Ave_MarkT " + "INNER JOIN Ouser ON Ouser.id =Ave_MarkT.id "
						+ "where Ouser.gender= 'M' AND tid ='" + tid + "' and Ave_MarkT.class='"
						+ box44.getSelectedItem().toString() + "' and year='"
						+ box46.getSelectedItem().toString() + "' ";

				ps = con.prepareStatement(sql1);
				rs = ps.executeQuery();

				while (rs.next()) {
					String ss1 = rs.getString("div");

					if (ss1.equals("I")) {
						ma++;
					} else if (ss1.equals("II")) {
						mb++;
					} else if (ss1.equals("III")) {
						mc++;
					} else if (ss1.equals("IV")) {
						md++;
					} else if (ss1.equals("0")) {
						me++;
					} else {
						mf++;
					}

				}

				sm = ma + mb + mc + md + me + mf;

				a = fa + ma;
				b = fb + mb;
				c = fc + mc;
				d = fd + md;
				e = fe + me;
				f = mf + ff;
				g = a + b + c + d + e + f;

				Table mudi11 = new Table(11);
				mudi11.setWidth(400);

				Paragraph parr4 = new Paragraph("SEX");
				Paragraph parr5 = new Paragraph("I");
				Paragraph parr6 = new Paragraph("II");
				Paragraph parr7 = new Paragraph("III");
				Paragraph parr8 = new Paragraph("IV");
				Paragraph parr9 = new Paragraph("O");
				Paragraph parr10 = new Paragraph("INCOMPLETE");
				Paragraph parr11 = new Paragraph("TOTAL");
				Paragraph tt = new Paragraph("DIVISION PERFORMANCE SUMMARY");

				Cell cel1 = new Cell(1, 11).add(tt).setTextAlignment(TextAlignment.CENTER).setFontSize(10)
						.setBold().setBorder(com.itextpdf.layout.borders.Border.NO_BORDER)
						.setFontColor(new DeviceRgb(0, 0, 255));
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr6).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr7).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr8).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr9).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr10).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr11).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi11.addCell(cel1);

				Paragraph parr12 = new Paragraph("F");
				Paragraph parr13 = new Paragraph("" + fa);
				Paragraph parr14 = new Paragraph("" + fb);
				Paragraph parr15 = new Paragraph("" + fc);
				Paragraph parr16 = new Paragraph("" + fd);
				Paragraph parr17 = new Paragraph("" + fe);
				Paragraph parr18 = new Paragraph("" + ff);
				Paragraph parr19 = new Paragraph("" + sf);

				cel1 = new Cell(1, 2).add(parr12).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr13).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr14).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr15).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr16).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr17).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr18).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr19).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);

				Paragraph parr20 = new Paragraph("M");
				Paragraph parr21 = new Paragraph("" + ma);
				Paragraph parr22 = new Paragraph("" + mb);
				Paragraph parr23 = new Paragraph("" + mc);
				Paragraph parr24 = new Paragraph("" + md);
				Paragraph parr25 = new Paragraph("" + me);
				Paragraph parr26 = new Paragraph("" + mf);
				Paragraph parr27 = new Paragraph("" + sm);

				cel1 = new Cell(1, 2).add(parr20).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr21).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr22).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr23).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr24).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr25).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr26).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr27).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);

				Paragraph parr28 = new Paragraph("T");
				Paragraph parr29 = new Paragraph("" + a);
				Paragraph parr30 = new Paragraph("" + b);
				Paragraph parr31 = new Paragraph("" + c);
				Paragraph parr32 = new Paragraph("" + d);
				Paragraph parr33 = new Paragraph("" + e);
				Paragraph parr34 = new Paragraph("" + f);
				Paragraph parr35 = new Paragraph("" + g);

				cel1 = new Cell(1, 2).add(parr28).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr29).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr30).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr31).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr32).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell().add(parr33).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr34).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);
				cel1 = new Cell(1, 2).add(parr35).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
				mudi11.addCell(cel1);

				String sql11 = "Select Mark_O.id,Mark_O.mark,Subject_O.sname, "
						+ "sum(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as civm ,sum(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as civt ,"
						+ "sum(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as hism,sum(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as hist,"
						+ "sum(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as geom, sum(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as geot, "
						+ "sum(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biblem ,sum(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biblet ,"
						+ "sum(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as dinim,sum(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as dinit,  "
						+ "sum(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as artm, sum(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as artt, "
						+ "sum(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as musicm ,sum(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as musict ,"
						+ "sum(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as edum ,sum(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as edut ,"
						+ "sum(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as kiswm, sum(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as kiswt, "
						+ "sum(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engm ,sum(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as engt ,"
						+ "sum(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as frem, sum(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fret, "
						+ "sum(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as litm,sum(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as litt,  "
						+ "sum(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as aram ,sum(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as arat ,"
						+ "sum(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as phym, sum(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as phyt, "
						+ "sum(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as chem, sum(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as chet, "
						+ "sum(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biom ,sum(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biot ,"
						+ "sum(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as agrim, sum(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as agrit, "
						+ "sum(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as itm, sum(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as itt, "
						+ "sum(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mathm ,sum(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as matht ,"
						+ "sum(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as admm, sum(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as admt, "
						+ "sum(CASE WHEN Mark_O.sid = '051'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foodm, sum(CASE WHEN Mark_O.sid = '051' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as foodt, "
						+ "sum(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as textilem,sum(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as textilet,"
						+ "sum(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as comm,sum(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as comt,  "
						+ "sum(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as bookm, sum(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as bookt, "
						+ "sum(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as buildm,sum(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as buildt,"
						+ "sum(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as archm, sum(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as archt, "
						+ "sum(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as surveym, sum(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as surveyt, "
						+ "sum(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as carpm ,sum(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as carpt ,"
						+ "sum(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as brickm, sum(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as brickt, "
						+ "sum(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as paintm, sum(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as paintt, "
						+ "sum(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plumbm,sum(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plumbt,  "
						+ "sum(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as electm, sum(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as electt, "
						+ "sum(CASE WHEN Mark_O.sid = '082'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engineerm ,sum(CASE WHEN Mark_O.sid = '082' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as engineert ,"
						+ "sum(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as radiom, sum(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as radiot, "
						+ "sum(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as draughtm, sum(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as draughtt, "
						+ "sum(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as refm,sum(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as reft,  "
						+ "sum(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plantm, sum(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plantt, "
						+ "sum(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as workm ,sum(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as workt ,"
						+ "sum(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as motorm, sum(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as motort, "
						+ "sum(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as weldingm, sum(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as weldingt, "
						+ "sum(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as fitm, sum(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fitt, "
						+ "sum(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as autom, sum(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as autot, "
						+ "sum(CASE WHEN Mark_O.sid = '097'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mechanicm, sum(CASE WHEN Mark_O.sid = '097' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as mechanict, "
						+ "sum(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foundrym ,sum(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as foundryt "
						+ "from Mark_O " + "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
						+ "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid " + " where Mark_O.tid ='" + tid
						+ "' and Mark_O.class='" + box44.getSelectedItem().toString() + "' and Mark_O.year='"
						+ box46.getSelectedItem().toString() + "'    ";
				ps = con.prepareStatement(sql11);
				ResultSet rs44 = ps.executeQuery();

				
				String civm = rs44.getString("civm");
				String civt = rs44.getString("civt");
				Double civmd = 0.0;
				Double civtd = 0.0;
				Double civa = 0.0;
				String civ = "";
				String hism = rs44.getString("hism");
				String hist = rs44.getString("hist");
				Double hismd = 0.0;
				Double histd = 0.0;
				Double hisa = 0.0;
				String his = "";
				String geom = rs44.getString("geom");
				String geot = rs44.getString("geot");
				Double geomd = 0.0;
				Double geotd = 0.0;
				Double geoa = 0.0;
				String geo = "";
				String biblem = rs44.getString("biblem");
				String biblet = rs44.getString("biblet");
				Double biblemd = 0.0;
				Double bibletd = 0.0;
				Double biblea = 0.0;
				String bible = "";
				String dinim = rs44.getString("dinim");
				String dinit = rs44.getString("dinit");
				Double dinimd = 0.0;
				Double dinitd = 0.0;
				Double dinia = 0.0;
				String dini = "";
				String artm = rs44.getString("artm");
				String artt = rs44.getString("artt");
				Double artmd = 0.0;
				Double arttd = 0.0;
				Double arta = 0.0;
				String art = "";
				String musicm = rs44.getString("musicm");
				String musict = rs44.getString("musict");
				Double musicmd = 0.0;
				Double musictd = 0.0;
				Double musica = 0.0;
				String music = "";
				String edum = rs44.getString("edum");
				String edut = rs44.getString("edut");
				Double edumd = 0.0;
				Double edutd = 0.0;
				Double edua = 0.0;
				String edu = "";
				String aram = rs44.getString("aram");
				String arat = rs44.getString("arat");
				Double aramd = 0.0;
				Double aratd = 0.0;
				Double araa = 0.0;
				String ara = "";
				String phym = rs44.getString("phym");
				String phyt = rs44.getString("phyt");
				Double phymd = 0.0;
				Double phytd = 0.0;
				Double phya = 0.0;
				String phy = "";
				String chem = rs44.getString("chem");
				String chet = rs44.getString("chet");
				Double chemd = 0.0;
				Double chetd = 0.0;
				Double chea = 0.0;
				String che = "";
				String biom = rs44.getString("biom");
				String biot = rs44.getString("biot");
				Double biomd = 0.0;
				Double biotd = 0.0;
				Double bioa = 0.0;
				String bio = "";
				String kiswm = rs44.getString("kiswm");
				String kiswt = rs44.getString("kiswt");
				Double kiswmd = 0.0;
				Double kiswtd = 0.0;
				Double kiswa = 0.0;
				String kisw = "";
				String engm = rs44.getString("engm");
				String engt = rs44.getString("engt");
				Double engmd = 0.0;
				Double engtd = 0.0;
				Double enga = 0.0;
				String eng = "";
				String frem = rs44.getString("frem");
				String fret = rs44.getString("fret");
				Double fremd = 0.0;
				Double fretd = 0.0;
				Double frea = 0.0;
				String fre = "";
				String litm = rs44.getString("litm");
				String litt = rs44.getString("litt");
				Double litmd = 0.0;
				Double littd = 0.0;
				Double lita = 0.0;
				String lit = "";
				String agrim = rs44.getString("agrim");
				String agrit = rs44.getString("agrit");
				Double agrimd = 0.0;
				Double agritd = 0.0;
				Double agria = 0.0;
				String agri = "";
				String itm = rs44.getString("itm");
				String itt = rs44.getString("itt");
				Double itmd = 0.0;
				Double ittd = 0.0;
				Double ita = 0.0;
				String it = "";
				String mathm = rs44.getString("mathm");
				String matht = rs44.getString("matht");
				Double mathmd = 0.0;
				Double mathtd = 0.0;
				Double matha = 0.0;
				String math = "";
				String admm = rs44.getString("admm");
				String admt = rs44.getString("admt");
				Double admmd = 0.0;
				Double admtd = 0.0;
				Double adma = 0.0;
				String adm = "";
				String foodm = rs44.getString("foodm");
				String foodt = rs44.getString("foodt");
				Double foodmd = 0.0;
				Double foodtd = 0.0;
				Double fooda = 0.0;
				String food = "";
				String textilem = rs44.getString("textilem");
				String textilet = rs44.getString("textilet");
				Double textilemd = 0.0;
				Double textiletd = 0.0;
				Double textilea = 0.0;
				String textile = "";
				String comm = rs44.getString("comm");
				String comt = rs44.getString("comt");
				Double commd = 0.0;
				Double comtd = 0.0;
				Double coma = 0.0;
				String com = "";
				String bookm = rs44.getString("bookm");
				String bookt = rs44.getString("bookt");
				Double bookmd = 0.0;
				Double booktd = 0.0;
				Double booka = 0.0;
				String book = "";
				String buildm = rs44.getString("buildm");
				String buildt = rs44.getString("buildt");
				Double buildmd = 0.0;
				Double buildtd = 0.0;
				Double builda = 0.0;
				String build = "";
				String archm = rs44.getString("archm");
				String archt = rs44.getString("archt");
				Double archmd = 0.0;
				Double archtd = 0.0;
				Double archa = 0.0;
				String arch = "";
				String surveym = rs44.getString("surveym");
				String surveyt = rs44.getString("surveyt");
				Double surveymd = 0.0;
				Double surveytd = 0.0;
				Double surveya = 0.0;
				String survey = "";
				String carpm = rs44.getString("carpm");
				String carpt = rs44.getString("carpt");
				Double carpmd = 0.0;
				Double carptd = 0.0;
				Double carpa = 0.0;
				String carp = "";
				String brickm = rs44.getString("brickm");
				String brickt = rs44.getString("brickt");
				Double brickmd = 0.0;
				Double bricktd = 0.0;
				Double bricka = 0.0;
				String brick = "";
				String paintm = rs44.getString("paintm");
				String paintt = rs44.getString("paintt");
				Double paintmd = 0.0;
				Double painttd = 0.0;
				Double painta = 0.0;
				String paint = "";
				String plumbm = rs44.getString("plumbm");
				String plumbt = rs44.getString("plumbt");
				Double plumbmd = 0.0;
				Double plumbtd = 0.0;
				Double plumba = 0.0;
				String plumb = "";
				String electm = rs44.getString("electm");
				String electt = rs44.getString("electt");
				Double electmd = 0.0;
				Double electtd = 0.0;
				Double electa = 0.0;
				String elect = "";
				String engineerm = rs44.getString("engineerm");
				String engineert = rs44.getString("engineert");
				Double engineermd = 0.0;
				Double engineertd = 0.0;
				Double engineera = 0.0;
				String engineer = "";
				String radiom = rs44.getString("radiom");
				String radiot = rs44.getString("radiot");
				Double radiomd = 0.0;
				Double radiotd = 0.0;
				Double radioa = 0.0;
				String radio = "";
				String draughtm = rs44.getString("draughtm");
				String draughtt = rs44.getString("draughtt");
				Double draughtmd = 0.0;
				Double draughttd = 0.0;
				Double draughta = 0.0;
				String draught = "";
				String refm = rs44.getString("refm");
				String reft = rs44.getString("reft");
				Double refmd = 0.0;
				Double reftd = 0.0;
				Double refa = 0.0;
				String ref = "";
				String plantm = rs44.getString("plantm");
				String plantt = rs44.getString("plantt");
				Double plantmd = 0.0;
				Double planttd = 0.0;
				Double planta = 0.0;
				String plant = "";
				String workm = rs44.getString("workm");
				String workt = rs44.getString("workt");
				Double workmd = 0.0;
				Double worktd = 0.0;
				Double worka = 0.0;
				String work = "";
				String motorm = rs44.getString("motorm");
				String motort = rs44.getString("motort");
				Double motormd = 0.0;
				Double motortd = 0.0;
				Double motora = 0.0;
				String motor = "";
				String weldingm = rs44.getString("weldingm");
				String weldingt = rs44.getString("weldingt");
				Double weldingmd = 0.0;
				Double weldingtd = 0.0;
				Double weldinga = 0.0;
				String welding = "";
				String fitm = rs44.getString("fitm");
				String fitt = rs44.getString("fitt");
				Double fitmd = 0.0;
				Double fittd = 0.0;
				Double fita = 0.0;
				String fit = "";
				String autom = rs44.getString("autom");
				String autot = rs44.getString("autot");
				Double automd = 0.0;
				Double autotd = 0.0;
				Double autoa = 0.0;
				String auto = "";
				String mechanicm = rs44.getString("mechanicm");
				String mechanict = rs44.getString("mechanict");
				Double mechanicmd = 0.0;
				Double mechanictd = 0.0;
				Double mechanica = 0.0;
				String mechanic = "";
				String foundrym = rs44.getString("foundrym");
				String foundryt = rs44.getString("foundryt");
				Double foundrymd = 0.0;
				Double foundrytd = 0.0;
				Double foundrya = 0.0;
				String foundry = "";
				
				
				String m0="";String m1="";String m2="";String m3="";String m4="";String m5="";String m6="";String m7="";String m8="";String m9="";
				String m10="";String m11="";String m12="";String m13="";String m14="";String m15="";String m16="";String m17="";String m18="";String m19="";
				String m20="";String m21="";String m22="";String m23="";String m24="";String m25="";String m26="";String m27="";String m28="";String m29="";
				String m30="";String m31="";String m32="";String m33="";String m34="";String m35="";String m36="";String m37="";String m38="";String m39="";
				String m40="";String m41="";String m42="";String m43="";
				
				
				Double dm0=0.0;Double dm1=0.0;Double dm2=0.0;Double dm3=0.0;Double dm4=0.0;Double dm5=0.0;Double dm6=0.0;Double dm7=0.0;Double dm8=0.0;Double dm9=0.0;
				Double dm10=0.0;Double dm11=0.0;Double dm12=0.0;Double dm13=0.0;Double dm14=0.0;Double dm15=0.0;Double dm16=0.0;Double dm17=0.0;Double dm18=0.0;Double dm19=0.0;
				Double dm20=0.0;Double dm21=0.0;Double dm22=0.0;Double dm23=0.0;Double dm24=0.0;Double dm25=0.0;Double dm26=0.0;Double dm27=0.0;Double dm28=0.0;Double dm29=0.0;
				Double dm30=0.0;Double dm31=0.0;Double dm32=0.0;Double dm33=0.0;Double dm34=0.0;Double dm35=0.0;Double dm36=0.0;Double dm37=0.0;Double dm38=0.0;Double dm39=0.0;
				Double dm40=0.0;Double dm41=0.0;Double dm42=0.0;Double dm43=0.0;
				
				
				
				String gr0="";String gr1="";String gr2="";String gr3="";String gr4="";String gr5="";String gr6="";String gr7="";String gr8="";String gr9="";
				String gr10="";String gr11="";String gr12="";String gr13="";String gr14="";String gr15="";String gr16="";String gr17="";String gr18="";String gr19="";
				String gr20="";String gr21="";String gr22="";String gr23="";String gr24="";String gr25="";String gr26="";String gr27="";String gr28="";String gr29="";
				String gr30="";String gr31="";String gr32="";String gr33="";String gr34="";String gr35="";String gr36="";String gr37="";String gr38="";String gr39="";
				String gr40="";String gr41="";String gr42="";String gr43="";
				
				
			
				
				int n44=0;int n1=0;int n2=0;int n3=0;int n4=0;int n5=0;int n6=0;int n7=0;int n8=0;int n9=0;
				int n10=0;int n11=0;int n12=0;int n13=0;int n14=0;int n15=0;int n16=0;int n17=0;int n18=0;int n19=0;
				int n20=0;int n21=0;int n22=0;int n23=0;int n24=0;int n25=0;int n26=0;int n27=0;int n28=0;int n29=0;
				int n30=0;int n31=0;int n32=0;int n33=0;int n34=0;int n35=0;int n36=0;int n37=0;int n38=0;int n39=0;
				int n40=0;int n41=0;int n42=0;int n43=0;
				

				

				
				if (civm.equals("0.0") && civt.equals("0.0")) {

					n1 = 1;
				}
				if (hism.equals("0.0") && hist.equals("0.0")) {

					n2 = 1;
				}
				if (geom.equals("0.0") && geot.equals("0.0")) {

					n3 = 1;
				}
				if (biblem.equals("0.0") && biblet.equals("0.0")) {

					n4 = 1;
				}
				if (dinim.equals("0.0") && dinit.equals("0.0")) {

					n5 = 1;
				}
				if (artm.equals("0.0") && artt.equals("0.0")) {

					n6 = 1;
				}
				if (musicm.equals("0.0") && musict.equals("0.0")) {

					n7 = 1;
				}
				if (edum.equals("0.0") && edut.equals("0.0")) {

					n8 = 1;
				}
				if (kiswm.equals("0.0") && kiswt.equals("0.0")) {

					n9 = 1;
				}
				if (engm.equals("0.0") && engt.equals("0.0")) {

					n10 = 1;
				}
				if (frem.equals("0.0") && fret.equals("0.0")) {

					n11 = 1;
				}
				if (litm.equals("0.0") && litt.equals("0.0")) {

					n12 = 1;
				}
				if (aram.equals("0.0") && arat.equals("0.0")) {

					n13 = 1;
				}
				if (phym.equals("0.0") && phyt.equals("0.0")) {

					n14 = 1;
				}
				if (chem.equals("0.0") && chet.equals("0.0")) {

					n15 = 1;
				}
				if (biom.equals("0.0") && biot.equals("0.0")) {

					n16 = 1;
				}
				if (agrim.equals("0.0") && agrit.equals("0.0")) {

					n17 = 1;
				}
				if (itm.equals("0.0") && itt.equals("0.0")) {

					n18 = 1;
				}
				if (mathm.equals("0.0") && matht.equals("0.0")) {

					n19 = 1;
				}
				if (admm.equals("0.0") && admt.equals("0.0")) {

					n20 = 1;
				}
				if (foodm.equals("0.0") && foodt.equals("0.0")) {

					n21 = 1;
				}
				if (textilem.equals("0.0") && textilet.equals("0.0")) {

					n22 = 1;
				}
				if (comm.equals("0.0") && comt.equals("0.0")) {

					n23 = 1;
				}
				if (bookm.equals("0.0") && bookt.equals("0.0")) {

					n24 = 1;
				}
				if (buildm.equals("0.0") && buildt.equals("0.0")) {

					n25 = 1;
				}
				if (archm.equals("0.0") && archt.equals("0.0")) {

					n26 = 1;
				}
				if (surveym.equals("0.0") && surveyt.equals("0.0")) {

					n27 = 1;
				}
				if (carpm.equals("0.0") && carpt.equals("0.0")) {

					n28 = 1;
				}
				if (brickm.equals("0.0") && brickt.equals("0.0")) {

					n29 = 1;
				}
				if (paintm.equals("0.0") && paintt.equals("0.0")) {

					n30 = 1;
				}
				if (plumbm.equals("0.0") && plumbt.equals("0.0")) {

					n31 = 1;
				}
				if (electm.equals("0.0") && electt.equals("0.0")) {

					n32 = 1;
				}
				if (engineerm.equals("0.0") && engineert.equals("0.0")) {

					n33 = 1;
				}
				if (radiom.equals("0.0") && radiot.equals("0.0")) {

					n34 = 1;
				}
				if (draughtm.equals("0.0") && draughtt.equals("0.0")) {

					n35 = 1;
				}
				if (refm.equals("0.0") && reft.equals("0.0")) {

					n36 = 1;
				}
				if (plantm.equals("0.0") && plantt.equals("0.0")) {

					n37 = 1;
				}
				if (workm.equals("0.0") && workt.equals("0.0")) {

					n38 = 1;
				}
				if (motorm.equals("0.0") && motort.equals("0.0")) {

					n39 = 1;
				}
				if (weldingm.equals("0.0") && weldingt.equals("0.0")) {

					n40 = 1;
				}
				if (fitm.equals("0.0") && fitt.equals("0.0")) {

					n41 = 1;
				}
				if (autom.equals("0.0") && autot.equals("0.0")) {

					n42 = 1;
				}
				if (mechanicm.equals("0.0") && mechanict.equals("0.0")) {

					n43 = 1;
				}
				if (foundrym.equals("0.0") && foundryt.equals("0.0")) {

					n44 = 1;
				}

				int st = n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + n10 + n11 + n12 + n13 + n14 + n15 + n16
						+ n17 + n18 + n19 + n20 + n21 + n22 + n23 + n24 + n25 + n26 + n27 + n28 + n29 + n30
						+ n31 + n32 + n33 + n34 + n35 + n36 + n37 + n38 + n39 + n40 + n41 + n42 + n43 + n44;
				

				Paragraph par1 = new Paragraph("STUDENT NAME").setFontSize(9)
						.setTextAlignment(TextAlignment.CENTER).setBold();
				Paragraph par2 = new Paragraph("SEX").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph par3 = new Paragraph("AVERAGE").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph par4 = new Paragraph("POSITION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph par5 = new Paragraph("POINT").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph par6 = new Paragraph("DIVISION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para1 = new Paragraph("CIVICS").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para2 = new Paragraph("HISTRORY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para3 = new Paragraph("GEOGRAPHY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para4 = new Paragraph("BIBLE KNOWLEDGE").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para5 = new Paragraph("DINI YA KIISLAMU").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para6 = new Paragraph("FINE ART").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para7 = new Paragraph("MUSIC").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para8 = new Paragraph("PHYSICAL EDUCATION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para9 = new Paragraph("KISWAHILI").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para10 = new Paragraph("ENGLISH").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para11 = new Paragraph("FRENCH").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para12 = new Paragraph("LITERATURE").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para13 = new Paragraph("ARABIC").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para14 = new Paragraph("PHYSICS").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para15 = new Paragraph("CHEMISTRY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para16 = new Paragraph("BIOLOGY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para17 = new Paragraph("AGRICULTURE").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para18 = new Paragraph("INFORMATION TECHNOLOGY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para19 = new Paragraph("BASIC MATHEMATICS").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para20 = new Paragraph("ADDITIONAL MATHEMATICS").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para21 = new Paragraph("FOOOD & NUTRITION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para22 = new Paragraph("TEXTILES & DRESSMAKING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para23 = new Paragraph("COMMERCE").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para24 = new Paragraph("BOOKEEPING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para25 = new Paragraph("BUILDING CONSTRUCTION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para26 = new Paragraph("ARCHITECTURAL DRAUGHTING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para27 = new Paragraph("SURVEYING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para28 = new Paragraph("CARPENTRY & JOINERY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para29 = new Paragraph("BRICKWORK & MASONRY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para30 = new Paragraph("PAINTING & SIGNWRITING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para31 = new Paragraph("PLUMBING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para32 = new Paragraph("ELECTICAL INSTALLATION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para33 = new Paragraph("ELECTICAL ENGINEERING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para34 = new Paragraph("RADIO & TELEVISION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para35 = new Paragraph("ELETRICAL DRAUGHTING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para36 = new Paragraph("REFRIGERATION & AIR CONDITION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para37 = new Paragraph("PLANT & EQUIPMENT").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para38 = new Paragraph("WORKSHOP TECHNOLOGY").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para39 = new Paragraph("MOTOR VEHICLE MECHANICS").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para40 = new Paragraph("WELDING & FABRICATION").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para41 = new Paragraph("FITTING & TURNING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para42 = new Paragraph("AUTO ELETRIC").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para43 = new Paragraph("MECHANICAL DRAUGHTING").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				Paragraph para44 = new Paragraph("FOUNDRY & BLACKSMITH").setFontSize(9)
						.setHorizontalAlignment(HorizontalAlignment.CENTER).setRotationAngle(Math.PI / 2)
						.setBold();
				
				if(value.equals("All")) {
					
					mudi2 = new Table(12 + (44 - st) * 2);
					mudi2.setWidth(770);
					mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
					mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

					
				}
				
                  if(value.equals("No Division")) {
					
					mudi2 = new Table(10 + (44 - st) * 2);
					mudi2.setWidth(770);
					mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
					mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

					
				}
                  
                  if(value.equals("No Position")) {
                	  
                	  mudi2 = new Table(11 + (44 - st) * 2);
  					mudi2.setWidth(770);
  					mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
  					mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
  							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

                  }
                  
                  if(value.equals("No Division & Position")) {
                		
                	  mudi2 = new Table(9 + (44 - st) * 2);
  					mudi2.setWidth(770);
  					mudi2.addHeaderCell(new Cell(1, 7).setPaddingTop(30).add(par1));
  					mudi2.addHeaderCell(new Cell().setPaddingLeft(10).setPaddingBottom(-5)
  							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par2));

                		
                  }


				
				if (!civm.equals("0.0") || !civt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para1));
				}

				if (!hism.equals("0.0") || !hist.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para2));
				}

				if (!geom.equals("0.0") || !geot.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para3));
				}

				if (!biblem.equals("0.0") || !biblet.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para4));
				}

				if (!dinim.equals("0.0") || !dinit.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(7).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para5));
				}

				if (!artm.equals("0.0") || !artt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(7).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para6));
				}

				if (!musicm.equals("0.0") || !musict.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para7));
				}

				if (!edum.equals("0.0") || !edut.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(7).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para8));
				}

				if (!kiswm.equals("0.0") || !kiswt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para9));
				}

				if (!engm.equals("0.0") || !engt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para10));
				}

				if (!frem.equals("0.0") || !fret.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para11));
				}

				if (!litm.equals("0.0") || !litt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para12));
				}

				if (!aram.equals("0.0") || !arat.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para13));
				}

				if (!phym.equals("0.0") || !phyt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para14));
				}

				if (!chem.equals("0.0") || !chet.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para15));
				}

				if (!biom.equals("0.0") || !biot.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para16));
				}

				if (!agrim.equals("0.0") || !agrit.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para17));
				}

				if (!itm.equals("0.0") || !itt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para18));
				}

				if (!mathm.equals("0.0") || !matht.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para19));
				}

				if (!admm.equals("0.0") || !admt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para20));
				}

				if (!foodm.equals("0.0") || !foodt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para21));
				}

				if (!textilem.equals("0.0") || !textilet.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para22));
				}

				if (!comm.equals("0.0") || !comt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para23));
				}

				if (!bookm.equals("0.0") || !bookt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para24));
				}

				if (!buildm.equals("0.0") || !buildt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para25));
				}

				if (!archm.equals("0.0") || !archt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para26));
				}

				if (!surveym.equals("0.0") || !surveyt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para27));
				}

				if (!carpm.equals("0.0") || !carpt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para28));
				}

				if (!brickm.equals("0.0") || !brickt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para29));
				}

				if (!paintm.equals("0.0") || !paintt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para30));
				}

				if (!plumbm.equals("0.0") || !plumbt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para31));
				}

				if (!engineerm.equals("0.0") || !engineert.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para32));
				}

				if (!electm.equals("0.0") || !electt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para33));
				}

				if (!radiom.equals("0.0") || !radiot.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para34));
				}

				if (!draughtm.equals("0.0") || !draughtt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para35));
				}

				if (!refm.equals("0.0") || !reft.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para36));
				}

				if (!plantm.equals("0.0") || !plantt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para37));
				}

				if (!workm.equals("0.0") || !workt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para38));
				}

				if (!motorm.equals("0.0") || !motort.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para39));
				}

				if (!weldingm.equals("0.0") || !weldingt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para40));
				}

				if (!fitm.equals("0.0") || !fitt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para41));
				}

				if (!autom.equals("0.0") || !autot.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(0)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para42));
				}

				if (!mechanicm.equals("0.0") || !mechanict.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para43));
				}

				if (!foundrym.equals("0.0") || !foundryt.equals("0.0")) {
					mudi2.addHeaderCell(new Cell(1, 2).setPaddingLeft(10).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE)
							.setBackgroundColor((new DeviceRgb(135, 206, 235))).add(para44));
				}

				if(value.equals("All")) {
					mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
					mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
					mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
					mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
					
				}
				
				  if(value.equals("No Division")) {
					  
					  mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
					//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
					//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
					//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
					//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
				  }
				
				  if(value.equals("No Position")) {
						

						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
					//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
					//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
						mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
								.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
						
					
						
					}


	                 if(value.equals("No Division & Position")) {
		

	 					mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
	 							.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par3));
	 				//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-1)
	 				//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par4));
	 				//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
	 				//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par5));
	 				//	mudi2.addHeaderCell(new Cell().setPaddingLeft(7).setPaddingBottom(-5)
	 				//			.setVerticalAlignment(VerticalAlignment.MIDDLE).add(par6));
	 					
	 				
		
	                }

				String sq = " SELECT * ,RANK () OVER (  order by case when ave = '-' then 1 else 0 end, ave DESC ) rank "
						+ "FROM Ave_MarkT " + "INNER JOIN Ouser ON Ouser.id = Ave_MarkT.id "
						+ "where Ave_MarkT.tid ='" + tid + "' and Ave_MarkT.class='"
						+ box44.getSelectedItem().toString() + "' and Ave_MarkT.year='"
						+ box46.getSelectedItem().toString()
						+ "'  ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC  ";

				ps = con.prepareStatement(sq);
				ResultSet rr = ps.executeQuery();

				while (rr.next()) {

					String sqll1 = "Select Mark_O.id,Mark_O.mark,Subject_O.sname, "
							+ "max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as civm ,max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as civt ,"
							+ "max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as hism,max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as hist,"
							+ "max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as geom, max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as geot, "
							+ "max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biblem ,max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biblet ,"
							+ "max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as dinim,max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as dinit,  "
							+ "max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as artm, max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as artt, "
							+ "max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as musicm ,max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as musict ,"
							+ "max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as edum ,max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as edut ,"
							+ "max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as kiswm, max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as kiswt, "
							+ "max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engm ,max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as engt ,"
							+ "max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as frem, max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fret, "
							+ "max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as litm,max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as litt,  "
							+ "max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as aram ,max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as arat ,"
							+ "max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as phym, max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as phyt, "
							+ "max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as chem, max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as chet, "
							+ "max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biom ,max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biot ,"
							+ "max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as agrim, max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as agrit, "
							+ "max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as itm, max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as itt, "
							+ "max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mathm ,max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as matht ,"
							+ "max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as admm, max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as admt, "
							+ "max(CASE WHEN Mark_O.sid = '051'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foodm, max(CASE WHEN Mark_O.sid = '051' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as foodt, "
							+ "max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as textilem,max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as textilet,"
							+ "max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as comm,max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as comt,  "
							+ "max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as bookm, max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as bookt, "
							+ "max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as buildm,max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as buildt,"
							+ "max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as archm, max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as archt, "
							+ "max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as surveym, max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as surveyt, "
							+ "max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as carpm ,max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as carpt ,"
							+ "max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as brickm, max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as brickt, "
							+ "max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as paintm, max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as paintt, "
							+ "max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plumbm,max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plumbt,  "
							+ "max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as electm, max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as electt, "
							+ "max(CASE WHEN Mark_O.sid = '082'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engineerm ,max(CASE WHEN Mark_O.sid = '082' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as engineert ,"
							+ "max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as radiom, max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as radiot, "
							+ "max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as draughtm, max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as draughtt, "
							+ "max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as refm,max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as reft,  "
							+ "max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plantm, max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plantt, "
							+ "max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as workm ,max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as workt ,"
							+ "max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as motorm, max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as motort, "
							+ "max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as weldingm, max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as weldingt, "
							+ "max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as fitm, max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fitt, "
							+ "max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as autom, max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as autot, "
							+ "max(CASE WHEN Mark_O.sid = '097'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mechanicm, max(CASE WHEN Mark_O.sid = '097' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as mechanict, "
							+ "max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foundrym ,max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as foundryt "
							+ "from Mark_O " + "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
							+ "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid " + " where Mark_O.tid ='"
							+ tid + "' and Mark_O.class='" + box44.getSelectedItem().toString()
							+ "' and Mark_O.year='" + box46.getSelectedItem().toString() + "' and Mark_O.id='"
							+ rr.getString("id") + "'  ";

					ps = con.prepareStatement(sqll1);
					rs = ps.executeQuery();

					civm = rs.getString("civm");
					civt = rs.getString("civt");
					civmd = 0.0;
					civtd = 0.0;
					civa = 0.0;
					civ = "";
					hism = rs.getString("hism");
					hist = rs.getString("hist");
					hismd = 0.0;
					histd = 0.0;
					hisa = 0.0;
					his = "";
					geom = rs.getString("geom");
					geot = rs.getString("geot");
					geomd = 0.0;
					geotd = 0.0;
					geoa = 0.0;
					geo = "";
					biblem = rs.getString("biblem");
					biblet = rs.getString("biblet");
					biblemd = 0.0;
					bibletd = 0.0;
					biblea = 0.0;
					bible = "";
					dinim = rs.getString("dinim");
					dinit = rs.getString("dinit");
					dinimd = 0.0;
					dinitd = 0.0;
					dinia = 0.0;
					dini = "";
					artm = rs.getString("artm");
					artt = rs.getString("artt");
					artmd = 0.0;
					arttd = 0.0;
					arta = 0.0;
					art = "";
					musicm = rs.getString("musicm");
					musict = rs.getString("musict");
					musicmd = 0.0;
					musictd = 0.0;
					musica = 0.0;
					music = "";
					edum = rs.getString("edum");
					edut = rs.getString("edut");
					edumd = 0.0;
					edutd = 0.0;
					edua = 0.0;
					edu = "";
					aram = rs.getString("aram");
					arat = rs.getString("arat");
					aramd = 0.0;
					aratd = 0.0;
					araa = 0.0;
					ara = "";
					phym = rs.getString("phym");
					phyt = rs.getString("phyt");
					phymd = 0.0;
					phytd = 0.0;
					phya = 0.0;
					phy = "";
					chem = rs.getString("chem");
					chet = rs.getString("chet");
					chemd = 0.0;
					chetd = 0.0;
					chea = 0.0;
					che = "";
					biom = rs.getString("biom");
					biot = rs.getString("biot");
					biomd = 0.0;
					biotd = 0.0;
					bioa = 0.0;
					bio = "";
					kiswm = rs.getString("kiswm");
					kiswt = rs.getString("kiswt");
					kiswmd = 0.0;
					kiswtd = 0.0;
					kiswa = 0.0;
					kisw = "";
					engm = rs.getString("engm");
					engt = rs.getString("engt");
					engmd = 0.0;
					engtd = 0.0;
					enga = 0.0;
					eng = "";
					frem = rs.getString("frem");
					fret = rs.getString("fret");
					fremd = 0.0;
					fretd = 0.0;
					frea = 0.0;
					fre = "";
					litm = rs.getString("litm");
					litt = rs.getString("litt");
					litmd = 0.0;
					littd = 0.0;
					lita = 0.0;
					lit = "";
					agrim = rs.getString("agrim");
					agrit = rs.getString("agrit");
					agrimd = 0.0;
					agritd = 0.0;
					agria = 0.0;
					agri = "";
					itm = rs.getString("itm");
					itt = rs.getString("itt");
					itmd = 0.0;
					ittd = 0.0;
					ita = 0.0;
					it = "";
					mathm = rs.getString("mathm");
					matht = rs.getString("matht");
					mathmd = 0.0;
					mathtd = 0.0;
					matha = 0.0;
					math = "";
					admm = rs.getString("admm");
					admt = rs.getString("admt");
					admmd = 0.0;
					admtd = 0.0;
					adma = 0.0;
					adm = "";
					foodm = rs.getString("foodm");
					foodt = rs.getString("foodt");
					foodmd = 0.0;
					foodtd = 0.0;
					fooda = 0.0;
					food = "";
					textilem = rs.getString("textilem");
					textilet = rs.getString("textilet");
					textilemd = 0.0;
					textiletd = 0.0;
					textilea = 0.0;
					textile = "";
					comm = rs.getString("comm");
					comt = rs.getString("comt");
					commd = 0.0;
					comtd = 0.0;
					coma = 0.0;
					com = "";
					bookm = rs.getString("bookm");
					bookt = rs.getString("bookt");
					bookmd = 0.0;
					booktd = 0.0;
					booka = 0.0;
					book = "";
					buildm = rs.getString("buildm");
					buildt = rs.getString("buildt");
					buildmd = 0.0;
					buildtd = 0.0;
					builda = 0.0;
					build = "";
					archm = rs.getString("archm");
					archt = rs.getString("archt");
					archmd = 0.0;
					archtd = 0.0;
					archa = 0.0;
					arch = "";
					surveym = rs.getString("surveym");
					surveyt = rs.getString("surveyt");
					surveymd = 0.0;
					surveytd = 0.0;
					surveya = 0.0;
					survey = "";
					carpm = rs.getString("carpm");
					carpt = rs.getString("carpt");
					carpmd = 0.0;
					carptd = 0.0;
					carpa = 0.0;
					carp = "";
					brickm = rs.getString("brickm");
					brickt = rs.getString("brickt");
					brickmd = 0.0;
					bricktd = 0.0;
					bricka = 0.0;
					brick = "";
					paintm = rs.getString("paintm");
					paintt = rs.getString("paintt");
					paintmd = 0.0;
					painttd = 0.0;
					painta = 0.0;
					paint = "";
					plumbm = rs.getString("plumbm");
					plumbt = rs.getString("plumbt");
					plumbmd = 0.0;
					plumbtd = 0.0;
					plumba = 0.0;
					plumb = "";
					electm = rs.getString("electm");
					electt = rs.getString("electt");
					electmd = 0.0;
					electtd = 0.0;
					electa = 0.0;
					elect = "";
					engineerm = rs.getString("engineerm");
					engineert = rs.getString("engineert");
					engineermd = 0.0;
					engineertd = 0.0;
					engineera = 0.0;
					engineer = "";
					radiom = rs.getString("radiom");
					radiot = rs.getString("radiot");
					radiomd = 0.0;
					radiotd = 0.0;
					radioa = 0.0;
					radio = "";
					draughtm = rs.getString("draughtm");
					draughtt = rs.getString("draughtt");
					draughtmd = 0.0;
					draughttd = 0.0;
					draughta = 0.0;
					draught = "";
					refm = rs.getString("refm");
					reft = rs.getString("reft");
					refmd = 0.0;
					reftd = 0.0;
					refa = 0.0;
					ref = "";
					plantm = rs.getString("plantm");
					plantt = rs.getString("plantt");
					plantmd = 0.0;
					planttd = 0.0;
					planta = 0.0;
					plant = "";
					workm = rs.getString("workm");
					workt = rs.getString("workt");
					workmd = 0.0;
					worktd = 0.0;
					worka = 0.0;
					work = "";
					motorm = rs.getString("motorm");
					motort = rs.getString("motort");
					motormd = 0.0;
					motortd = 0.0;
					motora = 0.0;
					motor = "";
					weldingm = rs.getString("weldingm");
					weldingt = rs.getString("weldingt");
					weldingmd = 0.0;
					weldingtd = 0.0;
					weldinga = 0.0;
					welding = "";
					fitm = rs.getString("fitm");
					fitt = rs.getString("fitt");
					fitmd = 0.0;
					fittd = 0.0;
					fita = 0.0;
					fit = "";
					autom = rs.getString("autom");
					autot = rs.getString("autot");
					automd = 0.0;
					autotd = 0.0;
					autoa = 0.0;
					auto = "";
					mechanicm = rs.getString("mechanicm");
					mechanict = rs.getString("mechanict");
					mechanicmd = 0.0;
					mechanictd = 0.0;
					mechanica = 0.0;
					mechanic = "";
					foundrym = rs.getString("foundrym");
					foundryt = rs.getString("foundryt");
					foundrymd = 0.0;
					foundrytd = 0.0;
					foundrya = 0.0;
					foundry = "";

					if ((civm == null || civm.isEmpty() || civm.equals("-"))
							&& (civt == null || civt.isEmpty() || civt.equals("-"))) {

						if ((civm == null || civm.isEmpty()) && (civt == null || civt.isEmpty())) {

							civ = "";

						} else {

							civ = "-";
						}

					} else {

						if ((civm != null) && (!civm.isEmpty()) && (!civm.equals("-"))) {

							civmd = Double.parseDouble(rs.getString("civm"));

						}

						if ((civt != null) && (!civt.isEmpty()) && (!civt.equals("-"))) {

							civtd = Double.parseDouble(rs.getString("civt"));

						}

						civa = civmd + civtd;
						civ = civa.toString();
					}

					if (civ.isEmpty() || civ.equals(null)) {

						m0 = "";
						gr0 = "";

					} else {

						if (civ.equals("-")) {

							m0 = "-";
							gr0 = "-";

						} else {

							m0 = civ;
							dm0 = Double.parseDouble(civ);

							if (dm0 >= g1 && dm0 <= g2) {
								gr0 = "A";
							} else if (dm0 >= g3 && dm0 <= g4) {
								gr0 = "B";
							} else if (dm0 >= g5 && dm0 <= g6) {
								gr0 = "C";
							} else if (dm0 >= g7 && dm0 <= g8) {
								gr0 = "D";
							} else if (dm0 >= g9 && dm0 <= g10) {
								gr0 = "F";
							}

						}

					}

					if ((hism == null || hism.isEmpty() || hism.equals("-"))
							&& (hist == null || hist.isEmpty() || hist.equals("-"))) {

						if ((hism == null || hism.isEmpty()) && (hist == null || hist.isEmpty())) {

							his = "";

						} else {

							his = "-";
						}

					} else {

						if ((hism != null) && (!hism.isEmpty()) && (!hism.equals("-"))) {

							hismd = Double.parseDouble(rs.getString("hism"));

						}

						if ((hist != null) && (!hist.isEmpty()) && (!hist.equals("-"))) {

							histd = Double.parseDouble(rs.getString("hist"));

						}

						hisa = hismd + histd;
						his = hisa.toString();
					}

					if (his.isEmpty() || his.equals(null)) {

						m1 = "";
						gr1 = "";

					} else {

						if (his.equals("-")) {

							m1 = "-";
							gr1 = "-";

						} else {

							m1 = his;
							dm1 = Double.parseDouble(his);

							if (dm1 >= g1 && dm1 <= g2) {
								gr1 = "A";
							} else if (dm1 >= g3 && dm1 <= g4) {
								gr1 = "B";
							} else if (dm1 >= g5 && dm1 <= g6) {
								gr1 = "C";
							} else if (dm1 >= g7 && dm1 <= g8) {
								gr1 = "D";
							} else if (dm1 >= g9 && dm1 <= g10) {
								gr1 = "F";
							}

						}

					}
					if ((geom == null || geom.isEmpty() || geom.equals("-"))
							&& (geot == null || geot.isEmpty() || geot.equals("-"))) {

						if ((geom == null || geom.isEmpty()) && (geot == null || geot.isEmpty())) {

							geo = "";

						} else {

							geo = "-";
						}

					} else {

						if ((geom != null) && (!geom.isEmpty()) && (!geom.equals("-"))) {

							geomd = Double.parseDouble(rs.getString("geom"));

						}

						if ((geot != null) && (!geot.isEmpty()) && (!geot.equals("-"))) {

							geotd = Double.parseDouble(rs.getString("geot"));

						}

						geoa = geomd + geotd;
						geo = geoa.toString();
					}

					if (geo.isEmpty() || geo.equals(null)) {

						m2 = "";
						gr2 = "";

					} else {

						if (geo.equals("-")) {

							m2 = "-";
							gr2 = "-";

						} else {

							m2 = geo;
							dm2 = Double.parseDouble(geo);

							if (dm2 >= g1 && dm2 <= g2) {
								gr2 = "A";
							} else if (dm2 >= g3 && dm2 <= g4) {
								gr2 = "B";
							} else if (dm2 >= g5 && dm2 <= g6) {
								gr2 = "C";
							} else if (dm2 >= g7 && dm2 <= g8) {
								gr2 = "D";
							} else if (dm2 >= g9 && dm2 <= g10) {
								gr2 = "F";
							}

						}

					}
					if ((biblem == null || biblem.isEmpty() || biblem.equals("-"))
							&& (biblet == null || biblet.isEmpty() || biblet.equals("-"))) {

						if ((biblem == null || biblem.isEmpty()) && (biblet == null || biblet.isEmpty())) {

							bible = "";

						} else {

							bible = "-";
						}

					} else {

						if ((biblem != null) && (!biblem.isEmpty()) && (!biblem.equals("-"))) {

							biblemd = Double.parseDouble(rs.getString("biblem"));

						}

						if ((biblet != null) && (!biblet.isEmpty()) && (!biblet.equals("-"))) {

							bibletd = Double.parseDouble(rs.getString("biblet"));

						}

						biblea = biblemd + bibletd;
						bible = biblea.toString();
					}

					if (bible.isEmpty() || bible.equals(null)) {

						m3 = "";
						gr3 = "";

					} else {

						if (bible.equals("-")) {

							m3 = "-";
							gr3 = "-";

						} else {

							m3 = bible;
							dm3 = Double.parseDouble(bible);

							if (dm3 >= g1 && dm3 <= g2) {
								gr3 = "A";
							} else if (dm3 >= g3 && dm3 <= g4) {
								gr3 = "B";
							} else if (dm3 >= g5 && dm3 <= g6) {
								gr3 = "C";
							} else if (dm3 >= g7 && dm3 <= g8) {
								gr3 = "D";
							} else if (dm3 >= g9 && dm3 <= g10) {
								gr3 = "F";
							}

						}

					}
					if ((dinim == null || dinim.isEmpty() || dinim.equals("-"))
							&& (dinit == null || dinit.isEmpty() || dinit.equals("-"))) {

						if ((dinim == null || dinim.isEmpty()) && (dinit == null || dinit.isEmpty())) {

							dini = "";

						} else {

							dini = "-";
						}

					} else {

						if ((dinim != null) && (!dinim.isEmpty()) && (!dinim.equals("-"))) {

							dinimd = Double.parseDouble(rs.getString("dinim"));

						}

						if ((dinit != null) && (!dinit.isEmpty()) && (!dinit.equals("-"))) {

							dinitd = Double.parseDouble(rs.getString("dinit"));

						}

						dinia = dinimd + dinitd;
						dini = dinia.toString();
					}

					if (dini.isEmpty() || dini.equals(null)) {

						m4 = "";
						gr4 = "";

					} else {

						if (dini.equals("-")) {

							m4 = "-";
							gr4 = "-";

						} else {

							m4 = dini;
							dm4 = Double.parseDouble(dini);

							if (dm4 >= g1 && dm4 <= g2) {
								gr4 = "A";
							} else if (dm4 >= g3 && dm4 <= g4) {
								gr4 = "B";
							} else if (dm4 >= g5 && dm4 <= g6) {
								gr4 = "C";
							} else if (dm4 >= g7 && dm4 <= g8) {
								gr4 = "D";
							} else if (dm4 >= g9 && dm4 <= g10) {
								gr4 = "F";
							}

						}

					}
					if ((artm == null || artm.isEmpty() || artm.equals("-"))
							&& (artt == null || artt.isEmpty() || artt.equals("-"))) {

						if ((artm == null || artm.isEmpty()) && (artt == null || artt.isEmpty())) {

							art = "";

						} else {

							art = "-";
						}

					} else {

						if ((artm != null) && (!artm.isEmpty()) && (!artm.equals("-"))) {

							artmd = Double.parseDouble(rs.getString("artm"));

						}

						if ((artt != null) && (!artt.isEmpty()) && (!artt.equals("-"))) {

							arttd = Double.parseDouble(rs.getString("artt"));

						}

						arta = artmd + arttd;
						art = arta.toString();
					}

					if (art.isEmpty() || art.equals(null)) {

						m5 = "";
						gr5 = "";

					} else {

						if (art.equals("-")) {

							m5 = "-";
							gr5 = "-";

						} else {

							m5 = art;
							dm5 = Double.parseDouble(art);

							if (dm5 >= g1 && dm5 <= g2) {
								gr5 = "A";
							} else if (dm5 >= g3 && dm5 <= g4) {
								gr5 = "B";
							} else if (dm5 >= g5 && dm5 <= g6) {
								gr5 = "C";
							} else if (dm5 >= g7 && dm5 <= g8) {
								gr5 = "D";
							} else if (dm5 >= g9 && dm5 <= g10) {
								gr5 = "F";
							}

						}

					}
					if ((musicm == null || musicm.isEmpty() || musicm.equals("-"))
							&& (musict == null || musict.isEmpty() || musict.equals("-"))) {

						if ((musicm == null || musicm.isEmpty()) && (musict == null || musict.isEmpty())) {

							music = "";

						} else {

							music = "-";
						}

					} else {

						if ((musicm != null) && (!musicm.isEmpty()) && (!musicm.equals("-"))) {

							musicmd = Double.parseDouble(rs.getString("musicm"));

						}

						if ((musict != null) && (!musict.isEmpty()) && (!musict.equals("-"))) {

							musictd = Double.parseDouble(rs.getString("musict"));

						}

						musica = musicmd + musictd;
						music = musica.toString();
					}

					if (music.isEmpty() || music.equals(null)) {

						m6 = "";
						gr6 = "";

					} else {

						if (music.equals("-")) {

							m6 = "-";
							gr6 = "-";

						} else {

							m6 = music;
							dm6 = Double.parseDouble(music);

							if (dm6 >= g1 && dm6 <= g2) {
								gr6 = "A";
							} else if (dm6 >= g3 && dm6 <= g4) {
								gr6 = "B";
							} else if (dm6 >= g5 && dm6 <= g6) {
								gr6 = "C";
							} else if (dm6 >= g7 && dm6 <= g8) {
								gr6 = "D";
							} else if (dm6 >= g9 && dm6 <= g10) {
								gr6 = "F";
							}

						}

					}
					if ((edum == null || edum.isEmpty() || edum.equals("-"))
							&& (edut == null || edut.isEmpty() || edut.equals("-"))) {

						if ((edum == null || edum.isEmpty()) && (edut == null || edut.isEmpty())) {

							edu = "";

						} else {

							edu = "-";
						}

					} else {

						if ((edum != null) && (!edum.isEmpty()) && (!edum.equals("-"))) {

							edumd = Double.parseDouble(rs.getString("edum"));

						}

						if ((edut != null) && (!edut.isEmpty()) && (!edut.equals("-"))) {

							edutd = Double.parseDouble(rs.getString("edut"));

						}

						edua = edumd + edutd;
						edu = edua.toString();
					}

					if (edu.isEmpty() || edu.equals(null)) {

						m7 = "";
						gr7 = "";

					} else {

						if (edu.equals("-")) {

							m7 = "-";
							gr7 = "-";

						} else {

							m7 = edu;
							dm7 = Double.parseDouble(edu);

							if (dm7 >= g1 && dm7 <= g2) {
								gr7 = "A";
							} else if (dm7 >= g3 && dm7 <= g4) {
								gr7 = "B";
							} else if (dm7 >= g5 && dm7 <= g6) {
								gr7 = "C";
							} else if (dm7 >= g7 && dm7 <= g8) {
								gr7 = "D";
							} else if (dm7 >= g9 && dm7 <= g10) {
								gr7 = "F";
							}

						}

					}
					if ((kiswm == null || kiswm.isEmpty() || kiswm.equals("-"))
							&& (kiswt == null || kiswt.isEmpty() || kiswt.equals("-"))) {

						if ((kiswm == null || kiswm.isEmpty()) && (kiswt == null || kiswt.isEmpty())) {

							kisw = "";

						} else {

							kisw = "-";
						}

					} else {

						if ((kiswm != null) && (!kiswm.isEmpty()) && (!kiswm.equals("-"))) {

							kiswmd = Double.parseDouble(rs.getString("kiswm"));

						}

						if ((kiswt != null) && (!kiswt.isEmpty()) && (!kiswt.equals("-"))) {

							kiswtd = Double.parseDouble(rs.getString("kiswt"));

						}

						kiswa = kiswmd + kiswtd;
						kisw = kiswa.toString();
					}

					if (kisw.isEmpty() || kisw.equals(null)) {

						m8 = "";
						gr8 = "";

					} else {

						if (kisw.equals("-")) {

							m8 = "-";
							gr8 = "-";

						} else {

							m8 = kisw;
							dm8 = Double.parseDouble(kisw);

							if (dm8 >= g1 && dm8 <= g2) {
								gr8 = "A";
							} else if (dm8 >= g3 && dm8 <= g4) {
								gr8 = "B";
							} else if (dm8 >= g5 && dm8 <= g6) {
								gr8 = "C";
							} else if (dm8 >= g7 && dm8 <= g8) {
								gr8 = "D";
							} else if (dm8 >= g9 && dm8 <= g10) {
								gr8 = "F";
							}

						}

					}
					if ((engm == null || engm.isEmpty() || engm.equals("-"))
							&& (engt == null || engt.isEmpty() || engt.equals("-"))) {

						if ((engm == null || engm.isEmpty()) && (engt == null || engt.isEmpty())) {

							eng = "";

						} else {

							eng = "-";
						}

					} else {

						if ((engm != null) && (!engm.isEmpty()) && (!engm.equals("-"))) {

							engmd = Double.parseDouble(rs.getString("engm"));

						}

						if ((engt != null) && (!engt.isEmpty()) && (!engt.equals("-"))) {

							engtd = Double.parseDouble(rs.getString("engt"));

						}

						enga = engmd + engtd;
						eng = enga.toString();
					}

					if (eng.isEmpty() || eng.equals(null)) {

						m9 = "";
						gr9 = "";

					} else {

						if (eng.equals("-")) {

							m9 = "-";
							gr9 = "-";

						} else {

							m9 = eng;
							dm9 = Double.parseDouble(eng);

							if (dm9 >= g1 && dm9 <= g2) {
								gr9 = "A";
							} else if (dm9 >= g3 && dm9 <= g4) {
								gr9 = "B";
							} else if (dm9 >= g5 && dm9 <= g6) {
								gr9 = "C";
							} else if (dm9 >= g7 && dm9 <= g8) {
								gr9 = "D";
							} else if (dm9 >= g9 && dm9 <= g10) {
								gr9 = "F";
							}

						}

					}
					if ((frem == null || frem.isEmpty() || frem.equals("-"))
							&& (fret == null || fret.isEmpty() || fret.equals("-"))) {

						if ((frem == null || frem.isEmpty()) && (fret == null || fret.isEmpty())) {

							fre = "";

						} else {

							fre = "-";
						}

					} else {

						if ((frem != null) && (!frem.isEmpty()) && (!frem.equals("-"))) {

							fremd = Double.parseDouble(rs.getString("frem"));

						}

						if ((fret != null) && (!fret.isEmpty()) && (!fret.equals("-"))) {

							fretd = Double.parseDouble(rs.getString("fret"));

						}

						frea = fremd + fretd;
						fre = frea.toString();
					}

					if (fre.isEmpty() || fre.equals(null)) {

						m10 = "";
						gr10 = "";

					} else {

						if (fre.equals("-")) {

							m10 = "-";
							gr10 = "-";

						} else {

							m10 = fre;
							dm10 = Double.parseDouble(fre);

							if (dm10 >= g1 && dm10 <= g2) {
								gr10 = "A";
							} else if (dm10 >= g3 && dm10 <= g4) {
								gr10 = "B";
							} else if (dm10 >= g5 && dm10 <= g6) {
								gr10 = "C";
							} else if (dm10 >= g7 && dm10 <= g8) {
								gr10 = "D";
							} else if (dm10 >= g9 && dm10 <= g10) {
								gr10 = "F";
							}

						}

					}
					if ((litm == null || litm.isEmpty() || litm.equals("-"))
							&& (litt == null || litt.isEmpty() || litt.equals("-"))) {

						if ((litm == null || litm.isEmpty()) && (litt == null || litt.isEmpty())) {

							lit = "";

						} else {

							lit = "-";
						}

					} else {

						if ((litm != null) && (!litm.isEmpty()) && (!litm.equals("-"))) {

							litmd = Double.parseDouble(rs.getString("litm"));

						}

						if ((litt != null) && (!litt.isEmpty()) && (!litt.equals("-"))) {

							littd = Double.parseDouble(rs.getString("litt"));

						}

						lita = litmd + littd;
						lit = lita.toString();
					}

					if (lit.isEmpty() || lit.equals(null)) {

						m11 = "";
						gr11 = "";

					} else {

						if (lit.equals("-")) {

							m11 = "-";
							gr11 = "-";

						} else {

							m11 = lit;
							dm11 = Double.parseDouble(lit);

							if (dm11 >= g1 && dm11 <= g2) {
								gr11 = "A";
							} else if (dm11 >= g3 && dm11 <= g4) {
								gr11 = "B";
							} else if (dm11 >= g5 && dm11 <= g6) {
								gr11 = "C";
							} else if (dm11 >= g7 && dm11 <= g8) {
								gr11 = "D";
							} else if (dm11 >= g9 && dm11 <= g10) {
								gr11 = "F";
							}

						}

					}
					if ((aram == null || aram.isEmpty() || aram.equals("-"))
							&& (arat == null || arat.isEmpty() || arat.equals("-"))) {

						if ((aram == null || aram.isEmpty()) && (arat == null || arat.isEmpty())) {

							ara = "";

						} else {

							ara = "-";
						}

					} else {

						if ((aram != null) && (!aram.isEmpty()) && (!aram.equals("-"))) {

							aramd = Double.parseDouble(rs.getString("aram"));

						}

						if ((arat != null) && (!arat.isEmpty()) && (!arat.equals("-"))) {

							aratd = Double.parseDouble(rs.getString("arat"));

						}

						araa = aramd + aratd;
						ara = araa.toString();
					}

					if (ara.isEmpty() || ara.equals(null)) {

						m12 = "";
						gr12 = "";

					} else {

						if (ara.equals("-")) {

							m12 = "-";
							gr12 = "-";

						} else {

							m12 = ara;
							dm12 = Double.parseDouble(ara);

							if (dm12 >= g1 && dm12 <= g2) {
								gr12 = "A";
							} else if (dm12 >= g3 && dm12 <= g4) {
								gr12 = "B";
							} else if (dm12 >= g5 && dm12 <= g6) {
								gr12 = "C";
							} else if (dm12 >= g7 && dm12 <= g8) {
								gr12 = "D";
							} else if (dm12 >= g9 && dm12 <= g10) {
								gr12 = "F";
							}

						}

					}
					if ((phym == null || phym.isEmpty() || phym.equals("-"))
							&& (phyt == null || phyt.isEmpty() || phyt.equals("-"))) {

						if ((phym == null || phym.isEmpty()) && (phyt == null || phyt.isEmpty())) {

							phy = "";

						} else {

							phy = "-";
						}

					} else {

						if ((phym != null) && (!phym.isEmpty()) && (!phym.equals("-"))) {

							phymd = Double.parseDouble(rs.getString("phym"));

						}

						if ((phyt != null) && (!phyt.isEmpty()) && (!phyt.equals("-"))) {

							phytd = Double.parseDouble(rs.getString("phyt"));

						}

						phya = phymd + phytd;
						phy = phya.toString();
					}

					if (phy.isEmpty() || phy.equals(null)) {

						m13 = "";
						gr13 = "";

					} else {

						if (phy.equals("-")) {

							m13 = "-";
							gr13 = "-";

						} else {

							m13 = phy;
							dm13 = Double.parseDouble(phy);

							if (dm13 >= g1 && dm13 <= g2) {
								gr13 = "A";
							} else if (dm13 >= g3 && dm13 <= g4) {
								gr13 = "B";
							} else if (dm13 >= g5 && dm13 <= g6) {
								gr13 = "C";
							} else if (dm13 >= g7 && dm13 <= g8) {
								gr13 = "D";
							} else if (dm13 >= g9 && dm13 <= g10) {
								gr13 = "F";
							}

						}

					}
					if ((chem == null || chem.isEmpty() || chem.equals("-"))
							&& (chet == null || chet.isEmpty() || chet.equals("-"))) {

						if ((chem == null || chem.isEmpty()) && (chet == null || chet.isEmpty())) {

							che = "";

						} else {

							che = "-";
						}

					} else {

						if ((chem != null) && (!chem.isEmpty()) && (!chem.equals("-"))) {

							chemd = Double.parseDouble(rs.getString("chem"));

						}

						if ((chet != null) && (!chet.isEmpty()) && (!chet.equals("-"))) {

							chetd = Double.parseDouble(rs.getString("chet"));

						}

						chea = chemd + chetd;
						che = chea.toString();
					}

					if (che.isEmpty() || che.equals(null)) {

						m14 = "";
						gr14 = "";

					} else {

						if (che.equals("-")) {

							m14 = "-";
							gr14 = "-";

						} else {

							m14 = che;
							dm14 = Double.parseDouble(che);

							if (dm14 >= g1 && dm14 <= g2) {
								gr14 = "A";
							} else if (dm14 >= g3 && dm14 <= g4) {
								gr14 = "B";
							} else if (dm14 >= g5 && dm14 <= g6) {
								gr14 = "C";
							} else if (dm14 >= g7 && dm14 <= g8) {
								gr14 = "D";
							} else if (dm14 >= g9 && dm14 <= g10) {
								gr14 = "F";
							}

						}

					}
					if ((biom == null || biom.isEmpty() || biom.equals("-"))
							&& (biot == null || biot.isEmpty() || biot.equals("-"))) {

						if ((biom == null || biom.isEmpty()) && (biot == null || biot.isEmpty())) {

							bio = "";

						} else {

							bio = "-";
						}

					} else {

						if ((biom != null) && (!biom.isEmpty()) && (!biom.equals("-"))) {

							biomd = Double.parseDouble(rs.getString("biom"));

						}

						if ((biot != null) && (!biot.isEmpty()) && (!biot.equals("-"))) {

							biotd = Double.parseDouble(rs.getString("biot"));

						}

						bioa = biomd + biotd;
						bio = bioa.toString();
					}

					if (bio.isEmpty() || bio.equals(null)) {

						m15 = "";
						gr15 = "";

					} else {

						if (bio.equals("-")) {

							m15 = "-";
							gr15 = "-";

						} else {

							m15 = bio;
							dm15 = Double.parseDouble(bio);

							if (dm15 >= g1 && dm15 <= g2) {
								gr15 = "A";
							} else if (dm15 >= g3 && dm15 <= g4) {
								gr15 = "B";
							} else if (dm15 >= g5 && dm15 <= g6) {
								gr15 = "C";
							} else if (dm15 >= g7 && dm15 <= g8) {
								gr15 = "D";
							} else if (dm15 >= g9 && dm15 <= g10) {
								gr15 = "F";
							}

						}

					}

					if ((agrim == null || agrim.isEmpty() || agrim.equals("-"))
							&& (agrit == null || agrit.isEmpty() || agrit.equals("-"))) {

						if ((agrim == null || agrim.isEmpty()) && (agrit == null || agrit.isEmpty())) {

							agri = "";

						} else {

							agri = "-";
						}

					} else {

						if ((agrim != null) && (!agrim.isEmpty()) && (!agrim.equals("-"))) {

							agrimd = Double.parseDouble(rs.getString("agrim"));

						}

						if ((agrit != null) && (!agrit.isEmpty()) && (!agrit.equals("-"))) {

							agritd = Double.parseDouble(rs.getString("agrit"));

						}

						agria = agrimd + agritd;
						agri = agria.toString();
					}

					if (agri.isEmpty() || agri.equals(null)) {

						m16 = "";
						gr16 = "";

					} else {

						if (agri.equals("-")) {

							m16 = "-";
							gr16 = "-";

						} else {

							m16 = agri;
							dm16 = Double.parseDouble(agri);

							if (dm16 >= g1 && dm16 <= g2) {
								gr16 = "A";
							} else if (dm16 >= g3 && dm16 <= g4) {
								gr16 = "B";
							} else if (dm16 >= g5 && dm16 <= g6) {
								gr16 = "C";
							} else if (dm16 >= g7 && dm16 <= g8) {
								gr16 = "D";
							} else if (dm16 >= g9 && dm16 <= g10) {
								gr16 = "F";
							}

						}

					}
					if ((itm == null || itm.isEmpty() || itm.equals("-"))
							&& (itt == null || itt.isEmpty() || itt.equals("-"))) {

						if ((itm == null || itm.isEmpty()) && (itt == null || itt.isEmpty())) {

							it = "";

						} else {

							it = "-";
						}

					} else {

						if ((itm != null) && (!itm.isEmpty()) && (!itm.equals("-"))) {

							itmd = Double.parseDouble(rs.getString("itm"));

						}

						if ((itt != null) && (!itt.isEmpty()) && (!itt.equals("-"))) {

							ittd = Double.parseDouble(rs.getString("itt"));

						}

						ita = itmd + ittd;
						it = ita.toString();
					}

					if (it.isEmpty() || it.equals(null)) {

						m17 = "";
						gr17 = "";

					} else {

						if (it.equals("-")) {

							m17 = "-";
							gr17 = "-";

						} else {

							m17 = it;
							dm17 = Double.parseDouble(it);

							if (dm17 >= g1 && dm17 <= g2) {
								gr17 = "A";
							} else if (dm17 >= g3 && dm17 <= g4) {
								gr17 = "B";
							} else if (dm17 >= g5 && dm17 <= g6) {
								gr17 = "C";
							} else if (dm17 >= g7 && dm17 <= g8) {
								gr17 = "D";
							} else if (dm17 >= g9 && dm17 <= g10) {
								gr17 = "F";
							}

						}

					}
					if ((mathm == null || mathm.isEmpty() || mathm.equals("-"))
							&& (matht == null || matht.isEmpty() || matht.equals("-"))) {

						if ((mathm == null || mathm.isEmpty()) && (matht == null || matht.isEmpty())) {

							math = "";

						} else {

							math = "-";
						}

					} else {

						if ((mathm != null) && (!mathm.isEmpty()) && (!mathm.equals("-"))) {

							mathmd = Double.parseDouble(rs.getString("mathm"));

						}

						if ((matht != null) && (!matht.isEmpty()) && (!matht.equals("-"))) {

							mathtd = Double.parseDouble(rs.getString("matht"));

						}

						matha = mathmd + mathtd;
						math = matha.toString();
					}

					if (math.isEmpty() || math.equals(null)) {

						m18 = "";
						gr18 = "";

					} else {

						if (math.equals("-")) {

							m18 = "-";
							gr18 = "-";

						} else {

							m18 = math;
							dm18 = Double.parseDouble(math);

							if (dm18 >= g1 && dm18 <= g2) {
								gr18 = "A";
							} else if (dm18 >= g3 && dm18 <= g4) {
								gr18 = "B";
							} else if (dm18 >= g5 && dm18 <= g6) {
								gr18 = "C";
							} else if (dm18 >= g7 && dm18 <= g8) {
								gr18 = "D";
							} else if (dm18 >= g9 && dm18 <= g10) {
								gr18 = "F";
							}

						}

					}
					if ((admm == null || admm.isEmpty() || admm.equals("-"))
							&& (admt == null || admt.isEmpty() || admt.equals("-"))) {

						if ((admm == null || admm.isEmpty()) && (admt == null || admt.isEmpty())) {

							adm = "";

						} else {

							adm = "-";
						}

					} else {

						if ((admm != null) && (!admm.isEmpty()) && (!admm.equals("-"))) {

							admmd = Double.parseDouble(rs.getString("admm"));

						}

						if ((admt != null) && (!admt.isEmpty()) && (!admt.equals("-"))) {

							admtd = Double.parseDouble(rs.getString("admt"));

						}

						adma = admmd + admtd;
						adm = adma.toString();
					}

					if (adm.isEmpty() || adm.equals(null)) {

						m19 = "";
						gr19 = "";

					} else {

						if (adm.equals("-")) {

							m19 = "-";
							gr19 = "-";

						} else {

							m19 = adm;
							dm19 = Double.parseDouble(adm);

							if (dm19 >= g1 && dm19 <= g2) {
								gr19 = "A";
							} else if (dm19 >= g3 && dm19 <= g4) {
								gr19 = "B";
							} else if (dm19 >= g5 && dm19 <= g6) {
								gr19 = "C";
							} else if (dm19 >= g7 && dm19 <= g8) {
								gr19 = "D";
							} else if (dm19 >= g9 && dm19 <= g10) {
								gr19 = "F";
							}

						}

					}
					if ((foodm == null || foodm.isEmpty() || foodm.equals("-"))
							&& (foodt == null || foodt.isEmpty() || foodt.equals("-"))) {

						if ((foodm == null || foodm.isEmpty()) && (foodt == null || foodt.isEmpty())) {

							food = "";

						} else {

							food = "-";
						}

					} else {

						if ((foodm != null) && (!foodm.isEmpty()) && (!foodm.equals("-"))) {

							foodmd = Double.parseDouble(rs.getString("foodm"));

						}

						if ((foodt != null) && (!foodt.isEmpty()) && (!foodt.equals("-"))) {

							foodtd = Double.parseDouble(rs.getString("foodt"));

						}

						fooda = foodmd + foodtd;
						food = fooda.toString();
					}

					if (food.isEmpty() || food.equals(null)) {

						m20 = "";
						gr20 = "";

					} else {

						if (food.equals("-")) {

							m20 = "-";
							gr20 = "-";

						} else {

							m20 = food;
							dm20 = Double.parseDouble(food);

							if (dm20 >= g1 && dm20 <= g2) {
								gr20 = "A";
							} else if (dm20 >= g3 && dm20 <= g4) {
								gr20 = "B";
							} else if (dm20 >= g5 && dm20 <= g6) {
								gr20 = "C";
							} else if (dm20 >= g7 && dm20 <= g8) {
								gr20 = "D";
							} else if (dm20 >= g9 && dm20 <= g10) {
								gr20 = "F";
							}

						}

					}
					if ((textilem == null || textilem.isEmpty() || textilem.equals("-"))
							&& (textilet == null || textilet.isEmpty() || textilet.equals("-"))) {

						if ((textilem == null || textilem.isEmpty())
								&& (textilet == null || textilet.isEmpty())) {

							textile = "";

						} else {

							textile = "-";
						}

					} else {

						if ((textilem != null) && (!textilem.isEmpty()) && (!textilem.equals("-"))) {

							textilemd = Double.parseDouble(rs.getString("textilem"));

						}

						if ((textilet != null) && (!textilet.isEmpty()) && (!textilet.equals("-"))) {

							textiletd = Double.parseDouble(rs.getString("textilet"));

						}

						textilea = textilemd + textiletd;
						textile = textilea.toString();
					}

					if (textile.isEmpty() || textile.equals(null)) {

						m21 = "";
						gr21 = "";

					} else {

						if (textile.equals("-")) {

							m21 = "-";
							gr21 = "-";

						} else {

							m21 = textile;
							dm21 = Double.parseDouble(textile);

							if (dm21 >= g1 && dm21 <= g2) {
								gr21 = "A";
							} else if (dm21 >= g3 && dm21 <= g4) {
								gr21 = "B";
							} else if (dm21 >= g5 && dm21 <= g6) {
								gr21 = "C";
							} else if (dm21 >= g7 && dm21 <= g8) {
								gr21 = "D";
							} else if (dm21 >= g9 && dm21 <= g10) {
								gr21 = "F";
							}

						}

					}
					if ((comm == null || comm.isEmpty() || comm.equals("-"))
							&& (comt == null || comt.isEmpty() || comt.equals("-"))) {

						if ((comm == null || comm.isEmpty()) && (comt == null || comt.isEmpty())) {

							com = "";

						} else {

							com = "-";
						}

					} else {

						if ((comm != null) && (!comm.isEmpty()) && (!comm.equals("-"))) {

							commd = Double.parseDouble(rs.getString("comm"));

						}

						if ((comt != null) && (!comt.isEmpty()) && (!comt.equals("-"))) {

							comtd = Double.parseDouble(rs.getString("comt"));

						}

						coma = commd + comtd;
						com = coma.toString();
					}

					if (com.isEmpty() || com.equals(null)) {

						m22 = "";
						gr22 = "";

					} else {

						if (com.equals("-")) {

							m22 = "-";
							gr22 = "-";

						} else {

							m22 = com;
							dm22 = Double.parseDouble(com);

							if (dm22 >= g1 && dm22 <= g2) {
								gr22 = "A";
							} else if (dm22 >= g3 && dm22 <= g4) {
								gr22 = "B";
							} else if (dm22 >= g5 && dm22 <= g6) {
								gr22 = "C";
							} else if (dm22 >= g7 && dm22 <= g8) {
								gr22 = "D";
							} else if (dm22 >= g9 && dm22 <= g10) {
								gr22 = "F";
							}

						}

					}
					if ((bookm == null || bookm.isEmpty() || bookm.equals("-"))
							&& (bookt == null || bookt.isEmpty() || bookt.equals("-"))) {

						if ((bookm == null || bookm.isEmpty()) && (bookt == null || bookt.isEmpty())) {

							book = "";

						} else {

							book = "-";
						}

					} else {

						if ((bookm != null) && (!bookm.isEmpty()) && (!bookm.equals("-"))) {

							bookmd = Double.parseDouble(rs.getString("bookm"));

						}

						if ((bookt != null) && (!bookt.isEmpty()) && (!bookt.equals("-"))) {

							booktd = Double.parseDouble(rs.getString("bookt"));

						}

						booka = bookmd + booktd;
						book = booka.toString();
					}

					if (book.isEmpty() || book.equals(null)) {

						m23 = "";
						gr23 = "";

					} else {

						if (book.equals("-")) {

							m23 = "-";
							gr23 = "-";

						} else {

							m23 = book;
							dm23 = Double.parseDouble(book);

							if (dm23 >= g1 && dm23 <= g2) {
								gr23 = "A";
							} else if (dm23 >= g3 && dm23 <= g4) {
								gr23 = "B";
							} else if (dm23 >= g5 && dm23 <= g6) {
								gr23 = "C";
							} else if (dm23 >= g7 && dm23 <= g8) {
								gr23 = "D";
							} else if (dm23 >= g9 && dm23 <= g10) {
								gr23 = "F";
							}

						}

					}
					if ((buildm == null || buildm.isEmpty() || buildm.equals("-"))
							&& (buildt == null || buildt.isEmpty() || buildt.equals("-"))) {

						if ((buildm == null || buildm.isEmpty()) && (buildt == null || buildt.isEmpty())) {

							build = "";

						} else {

							build = "-";
						}

					} else {

						if ((buildm != null) && (!buildm.isEmpty()) && (!buildm.equals("-"))) {

							buildmd = Double.parseDouble(rs.getString("buildm"));

						}

						if ((buildt != null) && (!buildt.isEmpty()) && (!buildt.equals("-"))) {

							buildtd = Double.parseDouble(rs.getString("buildt"));

						}

						builda = buildmd + buildtd;
						build = builda.toString();
					}

					if (build.isEmpty() || build.equals(null)) {

						m24 = "";
						gr24 = "";

					} else {

						if (build.equals("-")) {

							m24 = "-";
							gr24 = "-";

						} else {

							m24 = build;
							dm24 = Double.parseDouble(build);

							if (dm24 >= g1 && dm24 <= g2) {
								gr24 = "A";
							} else if (dm24 >= g3 && dm24 <= g4) {
								gr24 = "B";
							} else if (dm24 >= g5 && dm24 <= g6) {
								gr24 = "C";
							} else if (dm24 >= g7 && dm24 <= g8) {
								gr24 = "D";
							} else if (dm24 >= g9 && dm24 <= g10) {
								gr24 = "F";
							}

						}

					}
					if ((archm == null || archm.isEmpty() || archm.equals("-"))
							&& (archt == null || archt.isEmpty() || archt.equals("-"))) {

						if ((archm == null || archm.isEmpty()) && (archt == null || archt.isEmpty())) {

							arch = "";

						} else {

							arch = "-";
						}

					} else {

						if ((archm != null) && (!archm.isEmpty()) && (!archm.equals("-"))) {

							archmd = Double.parseDouble(rs.getString("archm"));

						}

						if ((archt != null) && (!archt.isEmpty()) && (!archt.equals("-"))) {

							archtd = Double.parseDouble(rs.getString("archt"));

						}

						archa = archmd + archtd;
						arch = archa.toString();
					}

					if (arch.isEmpty() || arch.equals(null)) {

						m25 = "";
						gr25 = "";

					} else {

						if (arch.equals("-")) {

							m25 = "-";
							gr25 = "-";

						} else {

							m25 = arch;
							dm25 = Double.parseDouble(arch);

							if (dm25 >= g1 && dm25 <= g2) {
								gr25 = "A";
							} else if (dm25 >= g3 && dm25 <= g4) {
								gr25 = "B";
							} else if (dm25 >= g5 && dm25 <= g6) {
								gr25 = "C";
							} else if (dm25 >= g7 && dm25 <= g8) {
								gr25 = "D";
							} else if (dm25 >= g9 && dm25 <= g10) {
								gr25 = "F";
							}

						}

					}
					if ((surveym == null || surveym.isEmpty() || surveym.equals("-"))
							&& (surveyt == null || surveyt.isEmpty() || surveyt.equals("-"))) {

						if ((surveym == null || surveym.isEmpty()) && (surveyt == null || surveyt.isEmpty())) {

							survey = "";

						} else {

							survey = "-";
						}

					} else {

						if ((surveym != null) && (!surveym.isEmpty()) && (!surveym.equals("-"))) {

							surveymd = Double.parseDouble(rs.getString("surveym"));

						}

						if ((surveyt != null) && (!surveyt.isEmpty()) && (!surveyt.equals("-"))) {

							surveytd = Double.parseDouble(rs.getString("surveyt"));

						}

						surveya = surveymd + surveytd;
						survey = surveya.toString();
					}

					if (survey.isEmpty() || survey.equals(null)) {

						m26 = "";
						gr26 = "";

					} else {

						if (survey.equals("-")) {

							m26 = "-";
							gr26 = "-";

						} else {

							m26 = survey;
							dm26 = Double.parseDouble(survey);

							if (dm26 >= g1 && dm26 <= g2) {
								gr26 = "A";
							} else if (dm26 >= g3 && dm26 <= g4) {
								gr26 = "B";
							} else if (dm26 >= g5 && dm26 <= g6) {
								gr26 = "C";
							} else if (dm26 >= g7 && dm26 <= g8) {
								gr26 = "D";
							} else if (dm26 >= g9 && dm26 <= g10) {
								gr26 = "F";
							}

						}

					}
					if ((carpm == null || carpm.isEmpty() || carpm.equals("-"))
							&& (carpt == null || carpt.isEmpty() || carpt.equals("-"))) {

						if ((carpm == null || carpm.isEmpty()) && (carpt == null || carpt.isEmpty())) {

							carp = "";

						} else {

							carp = "-";
						}

					} else {

						if ((carpm != null) && (!carpm.isEmpty()) && (!carpm.equals("-"))) {

							carpmd = Double.parseDouble(rs.getString("carpm"));

						}

						if ((carpt != null) && (!carpt.isEmpty()) && (!carpt.equals("-"))) {

							carptd = Double.parseDouble(rs.getString("carpt"));

						}

						carpa = carpmd + carptd;
						carp = carpa.toString();
					}

					if (carp.isEmpty() || carp.equals(null)) {

						m27 = "";
						gr27 = "";

					} else {

						if (carp.equals("-")) {

							m27 = "-";
							gr27 = "-";

						} else {

							m27 = carp;
							dm27 = Double.parseDouble(carp);

							if (dm27 >= g1 && dm27 <= g2) {
								gr27 = "A";
							} else if (dm27 >= g3 && dm27 <= g4) {
								gr27 = "B";
							} else if (dm27 >= g5 && dm27 <= g6) {
								gr27 = "C";
							} else if (dm27 >= g7 && dm27 <= g8) {
								gr27 = "D";
							} else if (dm27 >= g9 && dm27 <= g10) {
								gr27 = "F";
							}

						}

					}
					if ((brickm == null || brickm.isEmpty() || brickm.equals("-"))
							&& (brickt == null || brickt.isEmpty() || brickt.equals("-"))) {

						if ((brickm == null || brickm.isEmpty()) && (brickt == null || brickt.isEmpty())) {

							brick = "";

						} else {

							brick = "-";
						}

					} else {

						if ((brickm != null) && (!brickm.isEmpty()) && (!brickm.equals("-"))) {

							brickmd = Double.parseDouble(rs.getString("brickm"));

						}

						if ((brickt != null) && (!brickt.isEmpty()) && (!brickt.equals("-"))) {

							bricktd = Double.parseDouble(rs.getString("brickt"));

						}

						bricka = brickmd + bricktd;
						brick = bricka.toString();
					}

					if (brick.isEmpty() || brick.equals(null)) {

						m28 = "";
						gr28 = "";

					} else {

						if (brick.equals("-")) {

							m28 = "-";
							gr28 = "-";

						} else {

							m28 = brick;
							dm28 = Double.parseDouble(brick);

							if (dm28 >= g1 && dm28 <= g2) {
								gr28 = "A";
							} else if (dm28 >= g3 && dm28 <= g4) {
								gr28 = "B";
							} else if (dm28 >= g5 && dm28 <= g6) {
								gr28 = "C";
							} else if (dm28 >= g7 && dm28 <= g8) {
								gr28 = "D";
							} else if (dm28 >= g9 && dm28 <= g10) {
								gr28 = "F";
							}

						}

					}
					if ((paintm == null || paintm.isEmpty() || paintm.equals("-"))
							&& (paintt == null || paintt.isEmpty() || paintt.equals("-"))) {

						if ((paintm == null || paintm.isEmpty()) && (paintt == null || paintt.isEmpty())) {

							paint = "";

						} else {

							paint = "-";
						}

					} else {

						if ((paintm != null) && (!paintm.isEmpty()) && (!paintm.equals("-"))) {

							paintmd = Double.parseDouble(rs.getString("paintm"));

						}

						if ((paintt != null) && (!paintt.isEmpty()) && (!paintt.equals("-"))) {

							painttd = Double.parseDouble(rs.getString("paintt"));

						}

						painta = paintmd + painttd;
						paint = painta.toString();
					}

					if (paint.isEmpty() || paint.equals(null)) {

						m29 = "";
						gr29 = "";

					} else {

						if (paint.equals("-")) {

							m29 = "-";
							gr29 = "-";

						} else {

							m29 = paint;
							dm29 = Double.parseDouble(paint);

							if (dm29 >= g1 && dm29 <= g2) {
								gr29 = "A";
							} else if (dm29 >= g3 && dm29 <= g4) {
								gr29 = "B";
							} else if (dm29 >= g5 && dm29 <= g6) {
								gr29 = "C";
							} else if (dm29 >= g7 && dm29 <= g8) {
								gr29 = "D";
							} else if (dm29 >= g9 && dm29 <= g10) {
								gr29 = "F";
							}

						}

					}
					if ((plumbm == null || plumbm.isEmpty() || plumbm.equals("-"))
							&& (plumbt == null || plumbt.isEmpty() || plumbt.equals("-"))) {

						if ((plumbm == null || plumbm.isEmpty()) && (plumbt == null || plumbt.isEmpty())) {

							plumb = "";

						} else {

							plumb = "-";
						}

					} else {

						if ((plumbm != null) && (!plumbm.isEmpty()) && (!plumbm.equals("-"))) {

							plumbmd = Double.parseDouble(rs.getString("plumbm"));

						}

						if ((plumbt != null) && (!plumbt.isEmpty()) && (!plumbt.equals("-"))) {

							plumbtd = Double.parseDouble(rs.getString("plumbt"));

						}

						plumba = plumbmd + plumbtd;
						plumb = plumba.toString();
					}

					if (plumb.isEmpty() || plumb.equals(null)) {

						m30 = "";
						gr30 = "";

					} else {

						if (plumb.equals("-")) {

							m30 = "-";
							gr30 = "-";

						} else {

							m30 = plumb;
							dm30 = Double.parseDouble(plumb);

							if (dm30 >= g1 && dm30 <= g2) {
								gr30 = "A";
							} else if (dm30 >= g3 && dm30 <= g4) {
								gr30 = "B";
							} else if (dm30 >= g5 && dm30 <= g6) {
								gr30 = "C";
							} else if (dm30 >= g7 && dm30 <= g8) {
								gr30 = "D";
							} else if (dm30 >= g9 && dm30 <= g10) {
								gr30 = "F";
							}

						}

					}
					if ((electm == null || electm.isEmpty() || electm.equals("-"))
							&& (electt == null || electt.isEmpty() || electt.equals("-"))) {

						if ((electm == null || electm.isEmpty()) && (electt == null || electt.isEmpty())) {

							elect = "";

						} else {

							elect = "-";
						}

					} else {

						if ((electm != null) && (!electm.isEmpty()) && (!electm.equals("-"))) {

							electmd = Double.parseDouble(rs.getString("electm"));

						}

						if ((electt != null) && (!electt.isEmpty()) && (!electt.equals("-"))) {

							electtd = Double.parseDouble(rs.getString("electt"));

						}

						electa = electmd + electtd;
						elect = electa.toString();
					}

					if (elect.isEmpty() || elect.equals(null)) {

						m31 = "";
						gr31 = "";

					} else {

						if (elect.equals("-")) {

							m31 = "-";
							gr31 = "-";

						} else {

							m31 = elect;
							dm31 = Double.parseDouble(elect);

							if (dm31 >= g1 && dm31 <= g2) {
								gr31 = "A";
							} else if (dm31 >= g3 && dm31 <= g4) {
								gr31 = "B";
							} else if (dm31 >= g5 && dm31 <= g6) {
								gr31 = "C";
							} else if (dm31 >= g7 && dm31 <= g8) {
								gr31 = "D";
							} else if (dm31 >= g9 && dm31 <= g10) {
								gr31 = "F";
							}

						}

					}
					if ((engineerm == null || engineerm.isEmpty() || engineerm.equals("-"))
							&& (engineert == null || engineert.isEmpty() || engineert.equals("-"))) {

						if ((engineerm == null || engineerm.isEmpty())
								&& (engineert == null || engineert.isEmpty())) {

							engineer = "";

						} else {

							engineer = "-";
						}

					} else {

						if ((engineerm != null) && (!engineerm.isEmpty()) && (!engineerm.equals("-"))) {

							engineermd = Double.parseDouble(rs.getString("engineerm"));

						}

						if ((engineert != null) && (!engineert.isEmpty()) && (!engineert.equals("-"))) {

							engineertd = Double.parseDouble(rs.getString("engineert"));

						}

						engineera = engineermd + engineertd;
						engineer = engineera.toString();
					}

					if (engineer.isEmpty() || engineer.equals(null)) {

						m32 = "";
						gr32 = "";

					} else {

						if (engineer.equals("-")) {

							m32 = "-";
							gr32 = "-";

						} else {

							m32 = engineer;
							dm32 = Double.parseDouble(engineer);

							if (dm32 >= g1 && dm32 <= g2) {
								gr32 = "A";
							} else if (dm32 >= g3 && dm32 <= g4) {
								gr32 = "B";
							} else if (dm32 >= g5 && dm32 <= g6) {
								gr32 = "C";
							} else if (dm32 >= g7 && dm32 <= g8) {
								gr32 = "D";
							} else if (dm32 >= g9 && dm32 <= g10) {
								gr32 = "F";
							}

						}

					}
					if ((radiom == null || radiom.isEmpty() || radiom.equals("-"))
							&& (radiot == null || radiot.isEmpty() || radiot.equals("-"))) {

						if ((radiom == null || radiom.isEmpty()) && (radiot == null || radiot.isEmpty())) {

							radio = "";

						} else {

							radio = "-";
						}

					} else {

						if ((radiom != null) && (!radiom.isEmpty()) && (!radiom.equals("-"))) {

							radiomd = Double.parseDouble(rs.getString("radiom"));

						}

						if ((radiot != null) && (!radiot.isEmpty()) && (!radiot.equals("-"))) {

							radiotd = Double.parseDouble(rs.getString("radiot"));

						}

						radioa = radiomd + radiotd;
						radio = radioa.toString();
					}

					if (radio.isEmpty() || radio.equals(null)) {

						m33 = "";
						gr33 = "";

					} else {

						if (radio.equals("-")) {

							m33 = "-";
							gr33 = "-";

						} else {

							m33 = radio;
							dm33 = Double.parseDouble(radio);

							if (dm33 >= g1 && dm33 <= g2) {
								gr33 = "A";
							} else if (dm33 >= g3 && dm33 <= g4) {
								gr33 = "B";
							} else if (dm33 >= g5 && dm33 <= g6) {
								gr33 = "C";
							} else if (dm33 >= g7 && dm33 <= g8) {
								gr33 = "D";
							} else if (dm33 >= g9 && dm33 <= g10) {
								gr33 = "F";
							}

						}

					}
					if ((draughtm == null || draughtm.isEmpty() || draughtm.equals("-"))
							&& (draughtt == null || draughtt.isEmpty() || draughtt.equals("-"))) {

						if ((draughtm == null || draughtm.isEmpty())
								&& (draughtt == null || draughtt.isEmpty())) {

							draught = "";

						} else {

							draught = "-";
						}

					} else {

						if ((draughtm != null) && (!draughtm.isEmpty()) && (!draughtm.equals("-"))) {

							draughtmd = Double.parseDouble(rs.getString("draughtm"));

						}

						if ((draughtt != null) && (!draughtt.isEmpty()) && (!draughtt.equals("-"))) {

							draughttd = Double.parseDouble(rs.getString("draughtt"));

						}

						draughta = draughtmd + draughttd;
						draught = draughta.toString();
					}

					if (draught.isEmpty() || draught.equals(null)) {

						m34 = "";
						gr34 = "";

					} else {

						if (draught.equals("-")) {

							m34 = "-";
							gr34 = "-";

						} else {

							m34 = draught;
							dm34 = Double.parseDouble(draught);

							if (dm34 >= g1 && dm34 <= g2) {
								gr34 = "A";
							} else if (dm34 >= g3 && dm34 <= g4) {
								gr34 = "B";
							} else if (dm34 >= g5 && dm34 <= g6) {
								gr34 = "C";
							} else if (dm34 >= g7 && dm34 <= g8) {
								gr34 = "D";
							} else if (dm34 >= g9 && dm34 <= g10) {
								gr34 = "F";
							}

						}

					}
					if ((refm == null || refm.isEmpty() || refm.equals("-"))
							&& (reft == null || reft.isEmpty() || reft.equals("-"))) {

						if ((refm == null || refm.isEmpty()) && (reft == null || reft.isEmpty())) {

							ref = "";

						} else {

							ref = "-";
						}

					} else {

						if ((refm != null) && (!refm.isEmpty()) && (!refm.equals("-"))) {

							refmd = Double.parseDouble(rs.getString("refm"));

						}

						if ((reft != null) && (!reft.isEmpty()) && (!reft.equals("-"))) {

							reftd = Double.parseDouble(rs.getString("reft"));

						}

						refa = refmd + reftd;
						ref = refa.toString();
					}

					if (ref.isEmpty() || ref.equals(null)) {

						m35 = "";
						gr35 = "";

					} else {

						if (ref.equals("-")) {

							m35 = "-";
							gr35 = "-";

						} else {

							m35 = ref;
							dm35 = Double.parseDouble(ref);

							if (dm35 >= g1 && dm35 <= g2) {
								gr35 = "A";
							} else if (dm35 >= g3 && dm35 <= g4) {
								gr35 = "B";
							} else if (dm35 >= g5 && dm35 <= g6) {
								gr35 = "C";
							} else if (dm35 >= g7 && dm35 <= g8) {
								gr35 = "D";
							} else if (dm35 >= g9 && dm35 <= g10) {
								gr35 = "F";
							}

						}

					}
					if ((plantm == null || plantm.isEmpty() || plantm.equals("-"))
							&& (plantt == null || plantt.isEmpty() || plantt.equals("-"))) {

						if ((plantm == null || plantm.isEmpty()) && (plantt == null || plantt.isEmpty())) {

							plant = "";

						} else {

							plant = "-";
						}

					} else {

						if ((plantm != null) && (!plantm.isEmpty()) && (!plantm.equals("-"))) {

							plantmd = Double.parseDouble(rs.getString("plantm"));

						}

						if ((plantt != null) && (!plantt.isEmpty()) && (!plantt.equals("-"))) {

							planttd = Double.parseDouble(rs.getString("plantt"));

						}

						planta = plantmd + planttd;
						plant = planta.toString();
					}

					if (plant.isEmpty() || plant.equals(null)) {

						m36 = "";
						gr36 = "";

					} else {

						if (plant.equals("-")) {

							m36 = "-";
							gr36 = "-";

						} else {

							m36 = plant;
							dm36 = Double.parseDouble(plant);

							if (dm36 >= g1 && dm36 <= g2) {
								gr36 = "A";
							} else if (dm36 >= g3 && dm36 <= g4) {
								gr36 = "B";
							} else if (dm36 >= g5 && dm36 <= g6) {
								gr36 = "C";
							} else if (dm36 >= g7 && dm36 <= g8) {
								gr36 = "D";
							} else if (dm36 >= g9 && dm36 <= g10) {
								gr36 = "F";
							}

						}

					}
					if ((workm == null || workm.isEmpty() || workm.equals("-"))
							&& (workt == null || workt.isEmpty() || workt.equals("-"))) {

						if ((workm == null || workm.isEmpty()) && (workt == null || workt.isEmpty())) {

							work = "";

						} else {

							work = "-";
						}

					} else {

						if ((workm != null) && (!workm.isEmpty()) && (!workm.equals("-"))) {

							workmd = Double.parseDouble(rs.getString("workm"));

						}

						if ((workt != null) && (!workt.isEmpty()) && (!workt.equals("-"))) {

							worktd = Double.parseDouble(rs.getString("workt"));

						}

						worka = workmd + worktd;
						work = worka.toString();
					}

					if (work.isEmpty() || work.equals(null)) {

						m37 = "";
						gr37 = "";

					} else {

						if (work.equals("-")) {

							m37 = "-";
							gr37 = "-";

						} else {

							m37 = work;
							dm37 = Double.parseDouble(work);

							if (dm37 >= g1 && dm37 <= g2) {
								gr37 = "A";
							} else if (dm37 >= g3 && dm37 <= g4) {
								gr37 = "B";
							} else if (dm37 >= g5 && dm37 <= g6) {
								gr37 = "C";
							} else if (dm37 >= g7 && dm37 <= g8) {
								gr37 = "D";
							} else if (dm37 >= g9 && dm37 <= g10) {
								gr37 = "F";
							}

						}

					}
					if ((motorm == null || motorm.isEmpty() || motorm.equals("-"))
							&& (motort == null || motort.isEmpty() || motort.equals("-"))) {

						if ((motorm == null || motorm.isEmpty()) && (motort == null || motort.isEmpty())) {

							motor = "";

						} else {

							motor = "-";
						}

					} else {

						if ((motorm != null) && (!motorm.isEmpty()) && (!motorm.equals("-"))) {

							motormd = Double.parseDouble(rs.getString("motorm"));

						}

						if ((motort != null) && (!motort.isEmpty()) && (!motort.equals("-"))) {

							motortd = Double.parseDouble(rs.getString("motort"));

						}

						motora = motormd + motortd;
						motor = motora.toString();
					}

					if (motor.isEmpty() || motor.equals(null)) {

						m38 = "";
						gr38 = "";

					} else {

						if (motor.equals("-")) {

							m38 = "-";
							gr38 = "-";

						} else {

							m38 = motor;
							dm38 = Double.parseDouble(motor);

							if (dm38 >= g1 && dm38 <= g2) {
								gr38 = "A";
							} else if (dm38 >= g3 && dm38 <= g4) {
								gr38 = "B";
							} else if (dm38 >= g5 && dm38 <= g6) {
								gr38 = "C";
							} else if (dm38 >= g7 && dm38 <= g8) {
								gr38 = "D";
							} else if (dm38 >= g9 && dm38 <= g10) {
								gr38 = "F";
							}

						}

					}
					if ((weldingm == null || weldingm.isEmpty() || weldingm.equals("-"))
							&& (weldingt == null || weldingt.isEmpty() || weldingt.equals("-"))) {

						if ((weldingm == null || weldingm.isEmpty())
								&& (weldingt == null || weldingt.isEmpty())) {

							welding = "";

						} else {

							welding = "-";
						}

					} else {

						if ((weldingm != null) && (!weldingm.isEmpty()) && (!weldingm.equals("-"))) {

							weldingmd = Double.parseDouble(rs.getString("weldingm"));

						}

						if ((weldingt != null) && (!weldingt.isEmpty()) && (!weldingt.equals("-"))) {

							weldingtd = Double.parseDouble(rs.getString("weldingt"));

						}

						weldinga = weldingmd + weldingtd;
						welding = weldinga.toString();
					}

					if (welding.isEmpty() || welding.equals(null)) {

						m39 = "";
						gr39 = "";

					} else {

						if (welding.equals("-")) {

							m39 = "-";
							gr39 = "-";

						} else {

							m39 = welding;
							dm39 = Double.parseDouble(welding);

							if (dm39 >= g1 && dm39 <= g2) {
								gr39 = "A";
							} else if (dm39 >= g3 && dm39 <= g4) {
								gr39 = "B";
							} else if (dm39 >= g5 && dm39 <= g6) {
								gr39 = "C";
							} else if (dm39 >= g7 && dm39 <= g8) {
								gr39 = "D";
							} else if (dm39 >= g9 && dm39 <= g10) {
								gr39 = "F";
							}

						}

					}
					if ((fitm == null || fitm.isEmpty() || fitm.equals("-"))
							&& (fitt == null || fitt.isEmpty() || fitt.equals("-"))) {

						if ((fitm == null || fitm.isEmpty()) && (fitt == null || fitt.isEmpty())) {

							fit = "";

						} else {

							fit = "-";
						}

					} else {

						if ((fitm != null) && (!fitm.isEmpty()) && (!fitm.equals("-"))) {

							fitmd = Double.parseDouble(rs.getString("fitm"));

						}

						if ((fitt != null) && (!fitt.isEmpty()) && (!fitt.equals("-"))) {

							fittd = Double.parseDouble(rs.getString("fitt"));

						}

						fita = fitmd + fittd;
						fit = fita.toString();
					}

					if (fit.isEmpty() || fit.equals(null)) {

						m40 = "";
						gr40 = "";

					} else {

						if (fit.equals("-")) {

							m40 = "-";
							gr40 = "-";

						} else {

							m40 = fit;
							dm40 = Double.parseDouble(fit);

							if (dm40 >= g1 && dm40 <= g2) {
								gr40 = "A";
							} else if (dm40 >= g3 && dm40 <= g4) {
								gr40 = "B";
							} else if (dm40 >= g5 && dm40 <= g6) {
								gr40 = "C";
							} else if (dm40 >= g7 && dm40 <= g8) {
								gr40 = "D";
							} else if (dm40 >= g9 && dm40 <= g10) {
								gr40 = "F";
							}

						}

					}
					if ((autom == null || autom.isEmpty() || autom.equals("-"))
							&& (autot == null || autot.isEmpty() || autot.equals("-"))) {

						if ((autom == null || autom.isEmpty()) && (autot == null || autot.isEmpty())) {

							auto = "";

						} else {

							auto = "-";
						}

					} else {

						if ((autom != null) && (!autom.isEmpty()) && (!autom.equals("-"))) {

							automd = Double.parseDouble(rs.getString("autom"));

						}

						if ((autot != null) && (!autot.isEmpty()) && (!autot.equals("-"))) {

							autotd = Double.parseDouble(rs.getString("autot"));

						}

						autoa = automd + autotd;
						auto = autoa.toString();
					}

					if (auto.isEmpty() || auto.equals(null)) {

						m41 = "";
						gr41 = "";

					} else {

						if (auto.equals("-")) {

							m41 = "-";
							gr41 = "-";

						} else {

							m41 = auto;
							dm41 = Double.parseDouble(auto);

							if (dm41 >= g1 && dm41 <= g2) {
								gr41 = "A";
							} else if (dm41 >= g3 && dm41 <= g4) {
								gr41 = "B";
							} else if (dm41 >= g5 && dm41 <= g6) {
								gr41 = "C";
							} else if (dm41 >= g7 && dm41 <= g8) {
								gr41 = "D";
							} else if (dm41 >= g9 && dm41 <= g10) {
								gr41 = "F";
							}

						}

					}
					if ((mechanicm == null || mechanicm.isEmpty() || mechanicm.equals("-"))
							&& (mechanict == null || mechanict.isEmpty() || mechanict.equals("-"))) {

						if ((mechanicm == null || mechanicm.isEmpty())
								&& (mechanict == null || mechanict.isEmpty())) {

							mechanic = "";

						} else {

							mechanic = "-";
						}

					} else {

						if ((mechanicm != null) && (!mechanicm.isEmpty()) && (!mechanicm.equals("-"))) {

							mechanicmd = Double.parseDouble(rs.getString("mechanicm"));

						}

						if ((mechanict != null) && (!mechanict.isEmpty()) && (!mechanict.equals("-"))) {

							mechanictd = Double.parseDouble(rs.getString("mechanict"));

						}

						mechanica = mechanicmd + mechanictd;
						mechanic = mechanica.toString();
					}

					if (mechanic.isEmpty() || mechanic.equals(null)) {

						m42 = "";
						gr42 = "";

					} else {

						if (mechanic.equals("-")) {

							m42 = "-";
							gr42 = "-";

						} else {

							m42 = mechanic;
							dm42 = Double.parseDouble(mechanic);

							if (dm42 >= g1 && dm42 <= g2) {
								gr42 = "A";
							} else if (dm42 >= g3 && dm42 <= g4) {
								gr42 = "B";
							} else if (dm42 >= g5 && dm42 <= g6) {
								gr42 = "C";
							} else if (dm42 >= g7 && dm42 <= g8) {
								gr42 = "D";
							} else if (dm42 >= g9 && dm42 <= g10) {
								gr42 = "F";
							}

						}

					}

					if ((foundrym == null || foundrym.isEmpty() || foundrym.equals("-"))
							&& (foundryt == null || foundryt.isEmpty() || foundryt.equals("-"))) {

						if ((foundrym == null || foundrym.isEmpty())
								&& (foundryt == null || foundryt.isEmpty())) {

							foundry = "";

						} else {

							foundry = "-";
						}

					} else {

						if ((foundrym != null) && (!foundrym.isEmpty()) && (!foundrym.equals("-"))) {

							foundrymd = Double.parseDouble(rs.getString("foundrym"));

						}

						if ((foundryt != null) && (!foundryt.isEmpty()) && (!foundryt.equals("-"))) {

							foundrytd = Double.parseDouble(rs.getString("foundryt"));

						}

						foundrya = foundrymd + foundrytd;
						foundry = foundrya.toString();
					}

					if (foundry.isEmpty() || foundry.equals(null)) {

						m43 = "";
						gr43 = "";

					} else {

						if (foundry.equals("-")) {

							m43 = "-";
							gr43 = "-";

						} else {

							m43 = foundry;
							dm43 = Double.parseDouble(foundry);

							if (dm43 >= g1 && dm43 <= g2) {
								gr43 = "A";
							} else if (dm43 >= g3 && dm43 <= g4) {
								gr43 = "B";
							} else if (dm43 >= g5 && dm43 <= g6) {
								gr43 = "C";
							} else if (dm43 >= g7 && dm43 <= g8) {
								gr43 = "D";
							} else if (dm43 >= g9 && dm43 <= g10) {
								gr43 = "F";
							}

						}

					}
					PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_BOLD);
					PdfFont font1 = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);

					Paragraph pa1 = new Paragraph(
							rr.getString("fname") + "  " + rr.getString("mname") + "  " + rr.getString("lname"))
									.setFontSize(8).setBold().setFont(font);
					Paragraph pa2 = new Paragraph(rr.getString("gender")).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph pa3 = new Paragraph(rr.getString("ave")).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph pa4 = new Paragraph(rr.getString("rank")).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph pa5 = new Paragraph(rr.getString("point")).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph pa6 = new Paragraph(rr.getString("div")).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);

					Paragraph mk0 = new Paragraph(civ).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gcv = new Paragraph(gr0).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk1 = new Paragraph(his).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph ghis = new Paragraph(gr1).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk2 = new Paragraph(geo).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph ggeo = new Paragraph(gr2).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk3 = new Paragraph(bible).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gbible = new Paragraph(gr3).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk4 = new Paragraph(dini).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gdini = new Paragraph(gr4).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);

					Paragraph mk5 = new Paragraph(art).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gart = new Paragraph(gr5).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk6 = new Paragraph(music).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gmusic = new Paragraph(gr6).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk7 = new Paragraph(edu).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gedu = new Paragraph(gr7).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk8 = new Paragraph(kisw).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gkisw = new Paragraph(gr8).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk9 = new Paragraph(eng).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph geng = new Paragraph(gr9).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk10 = new Paragraph(fre).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gfre = new Paragraph(gr10).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk11 = new Paragraph(lit).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph glit = new Paragraph(gr11).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk12 = new Paragraph(ara).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gara = new Paragraph(gr12).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk13 = new Paragraph(phy).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gphy = new Paragraph(gr13).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk14 = new Paragraph(che).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gche = new Paragraph(gr14).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk15 = new Paragraph(bio).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gbio = new Paragraph(gr15).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk16 = new Paragraph(agri).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gagri = new Paragraph(gr16).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk17 = new Paragraph(it).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph git = new Paragraph(gr17).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk18 = new Paragraph(math).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gmath = new Paragraph(gr18).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk19 = new Paragraph(adm).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gadm = new Paragraph(gr19).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk20 = new Paragraph(food).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gfood = new Paragraph(gr20).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk21 = new Paragraph(textile).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph gtextile = new Paragraph(gr21).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph mk22 = new Paragraph(com).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gcom = new Paragraph(gr22).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk23 = new Paragraph(book).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gbook = new Paragraph(gr23).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk24 = new Paragraph(build).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gbuild = new Paragraph(gr24).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk25 = new Paragraph(arch).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph garch = new Paragraph(gr25).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk26 = new Paragraph(survey).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gsurvey = new Paragraph(gr26).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph mk27 = new Paragraph(carp).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gcarp = new Paragraph(gr27).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk28 = new Paragraph(brick).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gbrick = new Paragraph(gr28).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk29 = new Paragraph(paint).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gpaint = new Paragraph(gr29).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk30 = new Paragraph(plumb).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gplumb = new Paragraph(gr30).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk31 = new Paragraph(elect).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gelect = new Paragraph(gr31).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk32 = new Paragraph(engineer).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph gengineer = new Paragraph(gr32).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph mk33 = new Paragraph(radio).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gradio = new Paragraph(gr33).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk34 = new Paragraph(draught).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph gdraught = new Paragraph(gr34).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph mk35 = new Paragraph(ref).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gref = new Paragraph(gr35).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk36 = new Paragraph(plant).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gplant = new Paragraph(gr36).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk37 = new Paragraph(work).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gwork = new Paragraph(gr37).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk38 = new Paragraph(motor).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gmotor = new Paragraph(gr38).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk39 = new Paragraph(welding).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph gwelding = new Paragraph(gr39).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph mk40 = new Paragraph(fit).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gfit = new Paragraph(gr40).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk41 = new Paragraph(auto).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph gauto = new Paragraph(gr41).setFontSize(8).setTextAlignment(TextAlignment.CENTER)
							.setFont(font1);
					Paragraph mk42 = new Paragraph(mechanic).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph gmechanic = new Paragraph(gr42).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph mk43 = new Paragraph(foundry).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);
					Paragraph gfoundry = new Paragraph(gr43).setFontSize(8)
							.setTextAlignment(TextAlignment.CENTER).setFont(font1);

					mudi2.addCell(new Cell(1, 7).add(pa1));
					mudi2.addCell(new Cell().add(pa2));

					if (!rs44.getString("civm").equals("0.0") || !rs44.getString("civt").equals("0.0")) {

						mudi2.addCell(new Cell().add(mk0));
						mudi2.addCell(new Cell().add(gcv));
					}

					if (!rs44.getString("hism").equals("0.0") || !rs44.getString("hist").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk1));
						mudi2.addCell(new Cell().add(ghis));
					}

					if (!rs44.getString("geom").equals("0.0") || !rs44.getString("geot").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk2));
						mudi2.addCell(new Cell().add(ggeo));
					}
					if (!rs44.getString("biblem").equals("0.0") || !rs44.getString("biblet").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk3));
						mudi2.addCell(new Cell().add(gbible));
					}
					if (!rs44.getString("dinim").equals("0.0") || !rs44.getString("dinit").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk4));
						mudi2.addCell(new Cell().add(gdini));
					}
					if (!rs44.getString("artm").equals("0.0") || !rs44.getString("artt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk5));
						mudi2.addCell(new Cell().add(gart));
					}
					if (!rs44.getString("musicm").equals("0.0") || !rs44.getString("musict").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk6));
						mudi2.addCell(new Cell().add(gmusic));
					}
					if (!rs44.getString("edum").equals("0.0") || !rs44.getString("edut").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk7));
						mudi2.addCell(new Cell().add(gedu));
					}
					if (!rs44.getString("kiswm").equals("0.0") || !rs44.getString("kiswt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk8));
						mudi2.addCell(new Cell().add(gkisw));
					}
					if (!rs44.getString("engm").equals("0.0") || !rs44.getString("engt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk9));
						mudi2.addCell(new Cell().add(geng));
					}
					if (!rs44.getString("frem").equals("0.0") || !rs44.getString("fret").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk10));
						mudi2.addCell(new Cell().add(gfre));
					}
					if (!rs44.getString("litm").equals("0.0") || !rs44.getString("litt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk11));
						mudi2.addCell(new Cell().add(glit));
					}
					if (!rs44.getString("aram").equals("0.0") || !rs44.getString("arat").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk12));
						mudi2.addCell(new Cell().add(gara));
					}
					if (!rs44.getString("phym").equals("0.0") || !rs44.getString("phyt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk13));
						mudi2.addCell(new Cell().add(gphy));
					}
					if (!rs44.getString("chem").equals("0.0") || !rs44.getString("chet").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk14));
						mudi2.addCell(new Cell().add(gche));
					}
					if (!rs44.getString("biom").equals("0.0") || !rs44.getString("biot").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk15));
						mudi2.addCell(new Cell().add(gbio));
					}
					if (!rs44.getString("agrim").equals("0.0") || !rs44.getString("agrit").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk16));
						mudi2.addCell(new Cell().add(gagri));
					}
					if (!rs44.getString("itm").equals("0.0") || !rs44.getString("itt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk17));
						mudi2.addCell(new Cell().add(git));
					}
					if (!rs44.getString("mathm").equals("0.0") || !rs44.getString("matht").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk18));
						mudi2.addCell(new Cell().add(gmath));
					}
					if (!rs44.getString("admm").equals("0.0") || !rs44.getString("admt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk19));
						mudi2.addCell(new Cell().add(gadm));

					}
					if (!rs44.getString("foodm").equals("0.0") || !rs44.getString("foodt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk20));
						mudi2.addCell(new Cell().add(gfood));
					}
					if (!rs44.getString("textilem").equals("0.0")
							|| !rs44.getString("textilet").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk21));
						mudi2.addCell(new Cell().add(gtextile));
					}
					if (!rs44.getString("comm").equals("0.0") || !rs44.getString("comt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk22));
						mudi2.addCell(new Cell().add(gcom));
					}
					if (!rs44.getString("bookm").equals("0.0") || !rs44.getString("bookt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk23));
						mudi2.addCell(new Cell().add(gbook));
					}
					if (!rs44.getString("buildm").equals("0.0") || !rs44.getString("buildt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk24));
						mudi2.addCell(new Cell().add(gbuild));
					}
					if (!rs44.getString("archm").equals("0.0") || !rs44.getString("archt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk25));
						mudi2.addCell(new Cell().add(garch));
					}
					if (!rs44.getString("surveym").equals("0.0") || !rs44.getString("surveyt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk26));
						mudi2.addCell(new Cell().add(gsurvey));
					}
					if (!rs44.getString("carpm").equals("0.0") || !rs44.getString("carpt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk27));
						mudi2.addCell(new Cell().add(gcarp));
					}
					if (!rs44.getString("brickm").equals("0.0") || !rs44.getString("brickt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk28));
						mudi2.addCell(new Cell().add(gbrick));
					}
					if (!rs44.getString("paintm").equals("0.0") || !rs44.getString("paintt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk29));
						mudi2.addCell(new Cell().add(gpaint));
					}
					if (!rs44.getString("plumbm").equals("0.0") || !rs44.getString("plumbt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk30));
						mudi2.addCell(new Cell().add(gplumb));
					}
					if (!rs44.getString("electm").equals("0.0") || !rs44.getString("electt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk31));
						mudi2.addCell(new Cell().add(gelect));

					}
					if (!rs44.getString("engineerm").equals("0.0")
							|| !rs44.getString("engineert").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk32));
						mudi2.addCell(new Cell().add(gengineer));

					}
					if (!rs44.getString("radiom").equals("0.0") || !rs44.getString("radiot").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk33));
						mudi2.addCell(new Cell().add(gradio));

					}
					if (!rs44.getString("draughtm").equals("0.0")
							|| !rs44.getString("draughtt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk34));
						mudi2.addCell(new Cell().add(gdraught));

					}
					if (!rs44.getString("refm").equals("0.0") || !rs44.getString("reft").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk35));
						mudi2.addCell(new Cell().add(gref));

					}
					if (!rs44.getString("plantm").equals("0.0") || !rs44.getString("plantt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk36));
						mudi2.addCell(new Cell().add(gplant));

					}
					if (!rs44.getString("workm").equals("0.0") || !rs44.getString("workt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk37));
						mudi2.addCell(new Cell().add(gwork));

					}
					if (!rs44.getString("motorm").equals("0.0") || !rs44.getString("motort").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk38));
						mudi2.addCell(new Cell().add(gmotor));
					}
					if (!rs44.getString("weldingm").equals("0.0")
							|| !rs44.getString("weldingt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk39));
						mudi2.addCell(new Cell().add(gwelding));
					}
					if (!rs44.getString("fitm").equals("0.0") || !rs44.getString("fitt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk40));
						mudi2.addCell(new Cell().add(gfit));
					}
					if (!rs44.getString("autom").equals("0.0") || !rs44.getString("autot").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk41));
						mudi2.addCell(new Cell().add(gauto));
					}
					if (!rs44.getString("mechanicm").equals("0.0")
							|| !rs44.getString("mechanict").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk42));
						mudi2.addCell(new Cell().add(gmechanic));
					}
					if (!rs44.getString("foundrym").equals("0.0")
							|| !rs44.getString("foundryt").equals("0.0")) {
						mudi2.addCell(new Cell().add(mk43));
						mudi2.addCell(new Cell().add(gfoundry));
					}

					

					if(value.equals("All")) {
						
						mudi2.addCell(new Cell().add(pa3));
						mudi2.addCell(new Cell().add(pa4));
						mudi2.addCell(new Cell().add(pa5));
						mudi2.addCell(new Cell().add(pa6));
						
					}
					 if(value.equals("No Division")) {
						 
						    mudi2.addCell(new Cell().add(pa3));
							mudi2.addCell(new Cell().add(pa4));
						//	mudi2.addCell(new Cell().add(pa5));
						//	mudi2.addCell(new Cell().add(pa6));
					 }
					 
					 if(value.equals("No Position")) {
							
						    mudi2.addCell(new Cell().add(pa3));
						//	mudi2.addCell(new Cell().add(pa4));
							mudi2.addCell(new Cell().add(pa5));
							mudi2.addCell(new Cell().add(pa6));
							
						}


		                 if(value.equals("No Division & Position")) {
			
		                	   mudi2.addCell(new Cell().add(pa3));
							//	mudi2.addCell(new Cell().add(pa4));
							//	mudi2.addCell(new Cell().add(pa5));
							 // 	mudi2.addCell(new Cell().add(pa6));
			
		                }
					
				}

				String sql333 = "Select info from detail where id= '" + 1 + "' ";
				ps = con.prepareStatement(sql333);
				rs = ps.executeQuery();

				ImageData data = ImageDataFactory.create("image/other.png");
				Image image = new Image(data);
				image.setAutoScale(true);
				image.setAutoScale(true);
				image.setBold();

				Table mudi1 = new Table(1);
				mudi1.setWidth(770).setAutoLayout();
				Cell c0 = new Cell().add(image);
				mudi1.addCell(c0);

				Table mudi00 = new Table(1);
				mudi00.setWidth(100);

				Paragraph parr1 = new Paragraph(rs.getString("info") + " SECONDARY SCHOOL");
				Paragraph parr2 = new Paragraph("" + box45.getSelectedItem().toString() + "  EXAM RESULT");
				Paragraph parr3 = new Paragraph(
						"" + box44.getSelectedItem().toString() + " ~ " + box46.getSelectedItem().toString());

				Cell c1 = new Cell().add(parr1).setTextAlignment(TextAlignment.CENTER).setFontSize(20).setBold()
						.setFontColor(new DeviceRgb(0, 128, 255));
				c1.setBorder(Border3D.NO_BORDER);
				mudi00.addCell(c1);

				Cell c2 = new Cell().add(parr2).setTextAlignment(TextAlignment.CENTER).setFontSize(17).setBold()
						.setFontColor(new DeviceRgb(0, 128, 255));
				c2.setBorder(Border3D.NO_BORDER);
				mudi00.addCell(c2);

				Cell c3 = new Cell().add(parr3).setTextAlignment(TextAlignment.CENTER).setFontSize(15).setBold()
						.setFontColor(new DeviceRgb(0, 128, 255));
				c3.setBorder(Border3D.NO_BORDER);
				mudi00.addCell(c3);
				mudi00.setWidth(770);

				PdfDocument pdf = new PdfDocument(
						new PdfWriter(box44.getSelectedItem().toString().replaceAll("'", "''") + "~"
								+ box45.getSelectedItem().toString().replaceAll("'", "''") + "~"
								+ box46.getSelectedItem().toString().replaceAll("'", "''") + ".pdf"));
				Document document = new Document(pdf, PageSize.A4.rotate());

				analysis1();

				document.add(mudi1);
                document.add(new Paragraph(""));
				document.add(mudi00);
				
				if(value.equals("All")) {

					document.add(new Paragraph(""));
					document.add(mudi11);
				}
				if(value.equals("No Division")) {
				//	document.add(new Paragraph(""));
				//	document.add(mudi11);
					
				}
				 if(value.equals("No Position")) {
						
					 document.add(new Paragraph(""));
						document.add(mudi11);
						
					}


	                 if(value.equals("No Division & Position")) {
		
	               // 	 document.add(new Paragraph(""));
	 				//	document.add(mudi11);
		
	                }

				document.add(new Paragraph("\n"));
				document.add(mudi2);
				document.add(new Paragraph("\n"));
				document.add(mudi20);

				document.close();

				JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
				Runtime.getRuntime()
						.exec("rundll32 url.dll,FileProtocolHandler "
								+ box44.getSelectedItem().toString().replaceAll("'", "''") + "~"
								+ box45.getSelectedItem().toString().replaceAll("'", "''") + "~"
								+ box46.getSelectedItem().toString().replaceAll("'", "''") + ".pdf");

			} else {

				JOptionPane.showMessageDialog(null, "Data are not Available !");

			}
		
	}catch(Exception ex) {
		
		JOptionPane.showMessageDialog(null, ex.getStackTrace());
	}
	
	}




	private void update1() {


		
		try {
			
			
			   String sqll="select * from Grade_O";
				ps=con.prepareStatement(sqll);
				ResultSet rs5=ps.executeQuery();
				
				
				Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
					g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
					g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
					
					int total=0;
					
			

			String sql33="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
			ps=con.prepareStatement(sql33);
			ResultSet rs33=ps.executeQuery();
			
			String tid=rs33.getString("tid");
			

			String ss="select count(id) from Ave_MarkT where tid ='"+tid+"' and class='"+t27.getSelectedItem().toString()+"' and year='"+t31.getSelectedItem().toString()+"' ";
			ps=con.prepareStatement(ss);
			ResultSet rs0=ps.executeQuery();
			
			int count1=Integer.parseInt(rs0.getString("count(id)"));
			
               int exam1=0,exam2=0;
			
		    	if(tid.equals("1")) {
				exam1=1;exam2=2;
				//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
				
			   }else {
				exam1=1;exam2=3;
				//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
				
			}

			
			
			 String sql="Select Mark_O.id,Mark_O.mark,Subject_O.sname, "
            		+ "max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as civm ,max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as civt ,"
            		+ "max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as hism,max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as hist,"
            		+ "max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as geom, max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as geot, "
            		+ "max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biblem ,max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biblet ,"
            		+ "max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as dinim,max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as dinit,  "
            		+ "max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as artm, max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as artt, "
            		+ "max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as musicm ,max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as musict ,"
            		+ "max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as edum ,max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as edut ,"
            		+ "max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as kiswm, max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as kiswt, "
            		+ "max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engm ,max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as engt ,"
            		+ "max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as frem, max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fret, "
            		+ "max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as litm,max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as litt,  "
            		+ "max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as aram ,max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as arat ,"
            		+ "max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as phym, max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as phyt, "
            		+ "max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as chem, max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as chet, "
            		+ "max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biom ,max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biot ,"
            		+ "max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as agrim, max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as agrit, "
            		+ "max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as itm, max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as itt, "
            		+ "max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mathm ,max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as matht ,"
            		+ "max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as admm, max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as admt, "
            		+ "max(CASE WHEN Mark_O.sid = '051'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foodm, max(CASE WHEN Mark_O.sid = '051' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as foodt, "
            		+ "max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as textilem,max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as textilet,"
            		+ "max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as comm,max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as comt,  "
            		+ "max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as bookm, max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as bookt, "
            		+ "max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as buildm,max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as buildt,"
            		+ "max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as archm, max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as archt, "
            		+ "max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as surveym, max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as surveyt, "
            		+ "max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as carpm ,max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as carpt ,"
            		+ "max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as brickm, max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as brickt, "
            		+ "max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as paintm, max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as paintt, "
            		+ "max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plumbm,max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plumbt,  "
            		+ "max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as electm, max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as electt, "
            		+ "max(CASE WHEN Mark_O.sid = '082'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engineerm ,max(CASE WHEN Mark_O.sid = '082' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as engineert ,"
            		+ "max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as radiom, max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as radiot, "
            		+ "max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as draughtm, max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as draughtt, "
            		+ "max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as refm,max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as reft,  "
            		+ "max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plantm, max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plantt, "
            		+ "max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as workm ,max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as workt ,"
            		+ "max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as motorm, max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as motort, "
            		+ "max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as weldingm, max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as weldingt, "
            		+ "max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as fitm, max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fitt, "
            		+ "max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as autom, max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as autot, "
            		+ "max(CASE WHEN Mark_O.sid = '097'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mechanicm, max(CASE WHEN Mark_O.sid = '097' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as mechanict, "
            		+ "max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foundrym ,max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as foundryt "
            		+ "from Mark_O "
            		+ "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
            		+ "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid "
            		+ " where Mark_O.tid ='"+tid+"' and Mark_O.class='"+box44.getSelectedItem().toString()+"' and Mark_O.year='"+box46.getSelectedItem().toString()+"' GROUP BY Mark_O.id,Ouser.id    ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC   ";
                    
			
				    	ps = con.prepareStatement(sql);
					    rs = ps.executeQuery();
					    
					    String ss1="select count(id) from Mark_O where  tid ='"+tid+"' and class='"+t27.getSelectedItem().toString()+"' and year='"+t31.getSelectedItem().toString()+"' ";
						ps=con.prepareStatement(ss1);
						ResultSet rs1=ps.executeQuery();
						
						int cou=Integer.parseInt(rs1.getString("count(id)"));
						
					
							
						if(cou>0) {
							
							
							
							
							
							 while(rs.next()) {
								 

									
									String m0="";String m1="";String m2="";String m3="";String m4="";String m5="";String m6="";String m7="";String m8="";String m9="";
									String m10="";String m11="";String m12="";String m13="";String m14="";String m15="";String m16="";String m17="";String m18="";String m19="";
									String m20="";String m21="";String m22="";String m23="";String m24="";String m25="";String m26="";String m27="";String m28="";String m29="";
									String m30="";String m31="";String m32="";String m33="";String m34="";String m35="";String m36="";String m37="";String m38="";String m39="";
									String m40="";String m41="";String m42="";String m43="";
									
									
									Double dm0=0.0;Double dm1=0.0;Double dm2=0.0;Double dm3=0.0;Double dm4=0.0;Double dm5=0.0;Double dm6=0.0;Double dm7=0.0;Double dm8=0.0;Double dm9=0.0;
									Double dm10=0.0;Double dm11=0.0;Double dm12=0.0;Double dm13=0.0;Double dm14=0.0;Double dm15=0.0;Double dm16=0.0;Double dm17=0.0;Double dm18=0.0;Double dm19=0.0;
									Double dm20=0.0;Double dm21=0.0;Double dm22=0.0;Double dm23=0.0;Double dm24=0.0;Double dm25=0.0;Double dm26=0.0;Double dm27=0.0;Double dm28=0.0;Double dm29=0.0;
									Double dm30=0.0;Double dm31=0.0;Double dm32=0.0;Double dm33=0.0;Double dm34=0.0;Double dm35=0.0;Double dm36=0.0;Double dm37=0.0;Double dm38=0.0;Double dm39=0.0;
									Double dm40=0.0;Double dm41=0.0;Double dm42=0.0;Double dm43=0.0;
									
									
									
									String gr0="";String gr1="";String gr2="";String gr3="";String gr4="";String gr5="";String gr6="";String gr7="";String gr8="";String gr9="";
									String gr10="";String gr11="";String gr12="";String gr13="";String gr14="";String gr15="";String gr16="";String gr17="";String gr18="";String gr19="";
									String gr20="";String gr21="";String gr22="";String gr23="";String gr24="";String gr25="";String gr26="";String gr27="";String gr28="";String gr29="";
									String gr30="";String gr31="";String gr32="";String gr33="";String gr34="";String gr35="";String gr36="";String gr37="";String gr38="";String gr39="";
									String gr40="";String gr41="";String gr42="";String gr43="";
									
									
								
									Double gp0=0.0;Double gp1=0.0;Double gp2=0.0;Double gp3=0.0;Double gp4=0.0;Double gp5=0.0;Double gp6=0.0;Double gp7=0.0;Double gp8=0.0;Double gp9=0.0;
									Double gp10=0.0;Double gp11=0.0;Double gp12=0.0;Double gp13=0.0;Double gp14=0.0;Double gp15=0.0;Double gp16=0.0;Double gp17=0.0;Double gp18=0.0;Double gp19=0.0;
									Double gp20=0.0;Double gp21=0.0;Double gp22=0.0;Double gp23=0.0;Double gp24=0.0;Double gp25=0.0;Double gp26=0.0;Double gp27=0.0;Double gp28=0.0;Double gp29=0.0;
									Double gp30=0.0;Double gp31=0.0;Double gp32=0.0;Double gp33=0.0;Double gp34=0.0;Double gp35=0.0;Double gp36=0.0;Double gp37=0.0;Double gp38=0.0;Double gp39=0.0;
									Double gp40=0.0;Double gp41=0.0;Double gp42=0.0;Double gp43=0.0;
									
									
									
									
									int n0=0;int n1=0;int n2=0;int n3=0;int n4=0;int n5=0;int n6=0;int n7=0;int n8=0;int n9=0;
									int n10=0;int n11=0;int n12=0;int n13=0;int n14=0;int n15=0;int n16=0;int n17=0;int n18=0;int n19=0;
									int n20=0;int n21=0;int n22=0;int n23=0;int n24=0;int n25=0;int n26=0;int n27=0;int n28=0;int n29=0;
									int n30=0;int n31=0;int n32=0;int n33=0;int n34=0;int n35=0;int n36=0;int n37=0;int n38=0;int n39=0;
									int n40=0;int n41=0;int n42=0;int n43=0;
									
									
							    	
						    	  String civm=rs.getString("civm");String civt=rs.getString("civt");Double civmd=0.0;Double civtd=0.0;Double civa=0.0;String civ="";
						    	  String hism=rs.getString("hism");String hist=rs.getString("hist");Double hismd=0.0;Double histd=0.0;Double hisa=0.0;String his="";
						    	  String geom=rs.getString("geom");String geot=rs.getString("geot");Double geomd=0.0;Double geotd=0.0;Double geoa=0.0;String geo="";
						    	  String biblem=rs.getString("biblem");String biblet=rs.getString("biblet");Double biblemd=0.0;Double bibletd=0.0;Double biblea=0.0;String bible="";
						    	  String dinim=rs.getString("dinim");String dinit=rs.getString("dinit");Double dinimd=0.0;Double dinitd=0.0;Double dinia=0.0;String dini="";
						    	  String artm=rs.getString("artm");String artt=rs.getString("artt");Double artmd=0.0;Double arttd=0.0;Double arta=0.0;String art="";
						    	  String musicm=rs.getString("musicm");String musict=rs.getString("musict");Double musicmd=0.0;Double musictd=0.0;Double musica=0.0;String music="";
						    	  String edum=rs.getString("edum");String edut=rs.getString("edut");Double edumd=0.0;Double edutd=0.0;Double edua=0.0;String edu="";
						    	  String aram=rs.getString("aram");String arat=rs.getString("arat");Double aramd=0.0;Double aratd=0.0;Double araa=0.0;String ara="";
						    	  String phym=rs.getString("phym");String phyt=rs.getString("phyt");Double phymd=0.0;Double phytd=0.0;Double phya=0.0;String phy="";
						    	  String chem=rs.getString("chem");String chet=rs.getString("chet");Double chemd=0.0;Double chetd=0.0;Double chea=0.0;String che="";
						    	  String biom=rs.getString("biom");String biot=rs.getString("biot");Double biomd=0.0;Double biotd=0.0;Double bioa=0.0;String bio="";
						    	  String kiswm=rs.getString("kiswm");String kiswt=rs.getString("kiswt");Double kiswmd=0.0;Double kiswtd=0.0;Double kiswa=0.0;String kisw="";
						    	  String engm=rs.getString("engm");String engt=rs.getString("engt");Double engmd=0.0;Double engtd=0.0;Double enga=0.0;String eng="";
						    	  String frem=rs.getString("frem");String fret=rs.getString("fret");Double fremd=0.0;Double fretd=0.0;Double frea=0.0;String fre="";
						    	  String litm=rs.getString("litm");String litt=rs.getString("litt");Double litmd=0.0;Double littd=0.0;Double lita=0.0;String lit="";
						    	  String agrim=rs.getString("agrim");String agrit=rs.getString("agrit");Double agrimd=0.0;Double agritd=0.0;Double agria=0.0;String agri="";
						    	  String itm=rs.getString("itm");String itt=rs.getString("itt");Double itmd=0.0;Double ittd=0.0;Double ita=0.0;String it="";
						    	  String mathm=rs.getString("mathm");String matht=rs.getString("matht");Double mathmd=0.0;Double mathtd=0.0;Double matha=0.0;String math="";
						    	  String admm=rs.getString("admm");String admt=rs.getString("admt");Double admmd=0.0;Double admtd=0.0;Double adma=0.0;String adm="";
						    	  String foodm=rs.getString("foodm");String foodt=rs.getString("foodt");Double foodmd=0.0;Double foodtd=0.0;Double fooda=0.0;String food="";
						    	  String textilem=rs.getString("textilem");String textilet=rs.getString("textilet");Double textilemd=0.0;Double textiletd=0.0;Double textilea=0.0;String textile="";
						    	  String comm=rs.getString("comm");String comt=rs.getString("comt");Double commd=0.0;Double comtd=0.0;Double coma=0.0;String com="";
						    	  String bookm=rs.getString("bookm");String bookt=rs.getString("bookt");Double bookmd=0.0;Double booktd=0.0;Double booka=0.0;String book="";
						    	  String buildm=rs.getString("buildm");String buildt=rs.getString("buildt");Double buildmd=0.0;Double buildtd=0.0;Double builda=0.0;String build="";
						    	  String archm=rs.getString("archm");String archt=rs.getString("archt");Double archmd=0.0;Double archtd=0.0;Double archa=0.0;String arch="";
						    	  String surveym=rs.getString("surveym");String surveyt=rs.getString("surveyt");Double surveymd=0.0;Double surveytd=0.0;Double surveya=0.0;String survey="";
						    	  String carpm=rs.getString("carpm");String carpt=rs.getString("carpt");Double carpmd=0.0;Double carptd=0.0;Double carpa=0.0;String carp="";
						    	  String brickm=rs.getString("brickm");String brickt=rs.getString("brickt");Double brickmd=0.0;Double bricktd=0.0;Double bricka=0.0;String brick="";
						    	  String paintm=rs.getString("paintm");String paintt=rs.getString("paintt");Double paintmd=0.0;Double painttd=0.0;Double painta=0.0;String paint="";
						    	  String plumbm=rs.getString("plumbm");String plumbt=rs.getString("plumbt");Double plumbmd=0.0;Double plumbtd=0.0;Double plumba=0.0;String plumb="";
						    	  String electm=rs.getString("electm");String electt=rs.getString("electt");Double electmd=0.0;Double electtd=0.0;Double electa=0.0;String elect="";
						    	  String engineerm=rs.getString("engineerm");String engineert=rs.getString("engineert");Double engineermd=0.0;Double engineertd=0.0;Double engineera=0.0;String engineer="";
						    	  String radiom=rs.getString("radiom");String radiot=rs.getString("radiot");Double radiomd=0.0;Double radiotd=0.0;Double radioa=0.0;String radio="";
						    	  String draughtm=rs.getString("draughtm");String draughtt=rs.getString("draughtt");Double draughtmd=0.0;Double draughttd=0.0;Double draughta=0.0;String draught="";
						    	  String refm=rs.getString("refm");String reft=rs.getString("reft");Double refmd=0.0;Double reftd=0.0;Double refa=0.0;String ref="";
						    	  String plantm=rs.getString("plantm");String plantt=rs.getString("plantt");Double plantmd=0.0;Double planttd=0.0;Double planta=0.0;String plant="";
						    	  String workm=rs.getString("workm");String workt=rs.getString("workt");Double workmd=0.0;Double worktd=0.0;Double worka=0.0;String work="";
						    	  String motorm=rs.getString("motorm");String motort=rs.getString("motort");Double motormd=0.0;Double motortd=0.0;Double motora=0.0;String motor="";
						    	  String weldingm=rs.getString("weldingm");String weldingt=rs.getString("weldingt");Double weldingmd=0.0;Double weldingtd=0.0;Double weldinga=0.0;String welding="";
						    	  String fitm=rs.getString("fitm");String fitt=rs.getString("fitt");Double fitmd=0.0;Double fittd=0.0;Double fita=0.0;String fit="";
						    	  String autom=rs.getString("autom");String autot=rs.getString("autot");Double automd=0.0;Double autotd=0.0;Double autoa=0.0;String auto="";
						    	  String mechanicm=rs.getString("mechanicm");String mechanict=rs.getString("mechanict");Double mechanicmd=0.0;Double mechanictd=0.0;Double mechanica=0.0;String mechanic="";
						    	  String foundrym=rs.getString("foundrym");String foundryt=rs.getString("foundryt");Double foundrymd=0.0;Double foundrytd=0.0;Double foundrya=0.0;String foundry="";

								 
						    	  if((civm==null || civm.isEmpty() ||civm.equals("-")) && (civt==null || civt.isEmpty()||civt.equals("-"))  ) {
								    	 
								    	
								    	   if((civm==null || civm.isEmpty()) && (civt==null || civt.isEmpty())) {
								    		   
								    		   civ="";
								    		   
								    	   }else {
								    		   
								    		   civ="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((civm!=null) && (!civm.isEmpty()) && (!civm.equals("-")) ) {
								    		
								    		civmd=Double.parseDouble(rs.getString("civm"));
								    		
								    	}
								    	
								    	
	                                    if((civt!=null) && (!civt.isEmpty())  && (!civt.equals("-"))) {
	                                    	
	                                    	 civtd=Double.parseDouble(rs.getString("civt"));
								    		
								    	}
								    	
								    	
								    	civa=civmd+civtd;
								    	civ=civa.toString();
								    }
								    
								    
								    
								    if(civ.isEmpty() || civ.equals(null)) {
										
										m0="";
										gr0="";
										
									}else {
										
										if(civ.equals("-")) {
											
											m0="-";
											gr0="-";
											
										}else {
											
											m0=civ;
											dm0=Double.parseDouble(civ);
											n0=1;
											
											if(dm0>=g1 && dm0<=g2) {
												gr0="A";
											}else if(dm0>=g3 && dm0<=g4) {
												gr0="B";
											}else if(dm0>=g5 && dm0<=g6) {
												gr0="C";
											}else if(dm0>=g7 && dm0<=g8) {
												gr0="D";
											}else if(dm0>=g9 && dm0<=g10) {
												gr0="F";
											}
											
											
										}
										
									}
								    
								    
								    if((hism==null || hism.isEmpty() ||hism.equals("-")) && (hist==null || hist.isEmpty()||hist.equals("-"))  ) {
								    	 
								    	
								    	   if((hism==null || hism.isEmpty()) && (hist==null || hist.isEmpty())) {
								    		   
								    		   his="";
								    		   
								    	   }else {
								    		   
								    		   his="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((hism!=null) && (!hism.isEmpty()) && (!hism.equals("-")) ) {
								    		
								    		hismd=Double.parseDouble(rs.getString("hism"));
								    		
								    	}
								    	
								    	
	                                    if((hist!=null) && (!hist.isEmpty())  && (!hist.equals("-"))) {
	                                    	
	                                    	 histd=Double.parseDouble(rs.getString("hist"));
								    		
								    	}
								    	
								    	
								    	hisa=hismd+histd;
								    	his=hisa.toString();
								    }
								    
								    
								    
								    if(his.isEmpty() || his.equals(null)) {
										
										m1="";
										gr1="";
										
									}else {
										
										if(his.equals("-")) {
											
											m1="-";
											gr1="-";
											
										}else {
											
											m1=his;
											dm1=Double.parseDouble(his);
											n1=1;
											
											if(dm1>=g1 && dm1<=g2) {
												gr1="A";
											}else if(dm1>=g3 && dm1<=g4) {
												gr1="B";
											}else if(dm1>=g5 && dm1<=g6) {
												gr1="C";
											}else if(dm1>=g7 && dm1<=g8) {
												gr1="D";
											}else if(dm1>=g9 && dm1<=g10) {
												gr1="F";
											}
											
											
										}
										
									}
								    if((geom==null || geom.isEmpty() ||geom.equals("-")) && (geot==null || geot.isEmpty()||geot.equals("-"))  ) {
								    	 
								    	
								    	   if((geom==null || geom.isEmpty()) && (geot==null || geot.isEmpty())) {
								    		   
								    		   geo="";
								    		   
								    	   }else {
								    		   
								    		   geo="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((geom!=null) && (!geom.isEmpty()) && (!geom.equals("-")) ) {
								    		
								    		geomd=Double.parseDouble(rs.getString("geom"));
								    		
								    	}
								    	
								    	
	                                    if((geot!=null) && (!geot.isEmpty())  && (!geot.equals("-"))) {
	                                    	
	                                    	 geotd=Double.parseDouble(rs.getString("geot"));
								    		
								    	}
								    	
								    	
								    	geoa=geomd+geotd;
								    	geo=geoa.toString();
								    }
								    
								    
								    
								    if(geo.isEmpty() || geo.equals(null)) {
										
										m2="";
										gr2="";
										
									}else {
										
										if(geo.equals("-")) {
											
											m2="-";
											gr2="-";
											
										}else {
											
											m2=geo;
											dm2=Double.parseDouble(geo);
											n2=1;
											
											if(dm2>=g1 && dm2<=g2) {
												gr2="A";
											}else if(dm2>=g3 && dm2<=g4) {
												gr2="B";
											}else if(dm2>=g5 && dm2<=g6) {
												gr2="C";
											}else if(dm2>=g7 && dm2<=g8) {
												gr2="D";
											}else if(dm2>=g9 && dm2<=g10) {
												gr2="F";
											}
											
											
										}
										
									}
								    if((biblem==null || biblem.isEmpty() ||biblem.equals("-")) && (biblet==null || biblet.isEmpty()||biblet.equals("-"))  ) {
								    	 
								    	
								    	   if((biblem==null || biblem.isEmpty()) && (biblet==null || biblet.isEmpty())) {
								    		   
								    		   bible="";
								    		   
								    	   }else {
								    		   
								    		   bible="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((biblem!=null) && (!biblem.isEmpty()) && (!biblem.equals("-")) ) {
								    		
								    		biblemd=Double.parseDouble(rs.getString("biblem"));
								    		
								    	}
								    	
								    	
	                                    if((biblet!=null) && (!biblet.isEmpty())  && (!biblet.equals("-"))) {
	                                    	
	                                    	 bibletd=Double.parseDouble(rs.getString("biblet"));
								    		
								    	}
								    	
								    	
								    	biblea=biblemd+bibletd;
								    	bible=biblea.toString();
								    }
								    
								    
								    
								    if(bible.isEmpty() || bible.equals(null)) {
										
										m3="";
										gr3="";
										
									}else {
										
										if(bible.equals("-")) {
											
											m3="-";
											gr3="-";
											
										}else {
											
											m3=bible;
											dm3=Double.parseDouble(bible);
											n3=1;
											
											if(dm3>=g1 && dm3<=g2) {
												gr3="A";
											}else if(dm3>=g3 && dm3<=g4) {
												gr3="B";
											}else if(dm3>=g5 && dm3<=g6) {
												gr3="C";
											}else if(dm3>=g7 && dm3<=g8) {
												gr3="D";
											}else if(dm3>=g9 && dm3<=g10) {
												gr3="F";
											}
											
											
										}
										
									}
								    if((dinim==null || dinim.isEmpty() ||dinim.equals("-")) && (dinit==null || dinit.isEmpty()||dinit.equals("-"))  ) {
								    	 
								    	
								    	   if((dinim==null || dinim.isEmpty()) && (dinit==null || dinit.isEmpty())) {
								    		   
								    		   dini="";
								    		   
								    	   }else {
								    		   
								    		   dini="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((dinim!=null) && (!dinim.isEmpty()) && (!dinim.equals("-")) ) {
								    		
								    		dinimd=Double.parseDouble(rs.getString("dinim"));
								    		
								    	}
								    	
								    	
	                                    if((dinit!=null) && (!dinit.isEmpty())  && (!dinit.equals("-"))) {
	                                    	
	                                    	 dinitd=Double.parseDouble(rs.getString("dinit"));
								    		
								    	}
								    	
								    	
								    	dinia=dinimd+dinitd;
								    	dini=dinia.toString();
								    }
								    
								    
								    
								    if(dini.isEmpty() || dini.equals(null)) {
										
										m4="";
										gr4="";
										
									}else {
										
										if(dini.equals("-")) {
											
											m4="-";
											gr4="-";
											
										}else {
											
											m4=dini;
											dm4=Double.parseDouble(dini);
											n4=1;
											
											if(dm4>=g1 && dm4<=g2) {
												gr4="A";
											}else if(dm4>=g3 && dm4<=g4) {
												gr4="B";
											}else if(dm4>=g5 && dm4<=g6) {
												gr4="C";
											}else if(dm4>=g7 && dm4<=g8) {
												gr4="D";
											}else if(dm4>=g9 && dm4<=g10) {
												gr4="F";
											}
											
											
										}
										
									}
								    if((artm==null || artm.isEmpty() ||artm.equals("-")) && (artt==null || artt.isEmpty()||artt.equals("-"))  ) {
								    	 
								    	
								    	   if((artm==null || artm.isEmpty()) && (artt==null || artt.isEmpty())) {
								    		   
								    		   art="";
								    		   
								    	   }else {
								    		   
								    		   art="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((artm!=null) && (!artm.isEmpty()) && (!artm.equals("-")) ) {
								    		
								    		artmd=Double.parseDouble(rs.getString("artm"));
								    		
								    	}
								    	
								    	
	                                    if((artt!=null) && (!artt.isEmpty())  && (!artt.equals("-"))) {
	                                    	
	                                    	 arttd=Double.parseDouble(rs.getString("artt"));
								    		
								    	}
								    	
								    	
								    	arta=artmd+arttd;
								    	art=arta.toString();
								    }
								    
								    
								    
								    if(art.isEmpty() || art.equals(null)) {
										
										m5="";
										gr5="";
										
									}else {
										
										if(art.equals("-")) {
											
											m5="-";
											gr5="-";
											
										}else {
											
											m5=art;
											dm5=Double.parseDouble(art);
											n5=1;
											
											if(dm5>=g1 && dm5<=g2) {
												gr5="A";
											}else if(dm5>=g3 && dm5<=g4) {
												gr5="B";
											}else if(dm5>=g5 && dm5<=g6) {
												gr5="C";
											}else if(dm5>=g7 && dm5<=g8) {
												gr5="D";
											}else if(dm5>=g9 && dm5<=g10) {
												gr5="F";
											}
											
											
										}
										
									}
								    if((musicm==null || musicm.isEmpty() ||musicm.equals("-")) && (musict==null || musict.isEmpty()||musict.equals("-"))  ) {
								    	 
								    	
								    	   if((musicm==null || musicm.isEmpty()) && (musict==null || musict.isEmpty())) {
								    		   
								    		   music="";
								    		   
								    	   }else {
								    		   
								    		   music="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((musicm!=null) && (!musicm.isEmpty()) && (!musicm.equals("-")) ) {
								    		
								    		musicmd=Double.parseDouble(rs.getString("musicm"));
								    		
								    	}
								    	
								    	
	                                    if((musict!=null) && (!musict.isEmpty())  && (!musict.equals("-"))) {
	                                    	
	                                    	 musictd=Double.parseDouble(rs.getString("musict"));
								    		
								    	}
								    	
								    	
								    	musica=musicmd+musictd;
								    	music=musica.toString();
								    }
								    
								    
								    
								    if(music.isEmpty() || music.equals(null)) {
										
										m6="";
										gr6="";
										
									}else {
										
										if(music.equals("-")) {
											
											m6="-";
											gr6="-";
											
										}else {
											
											m6=music;
											dm6=Double.parseDouble(music);
											n6=1;
											
											if(dm6>=g1 && dm6<=g2) {
												gr6="A";
											}else if(dm6>=g3 && dm6<=g4) {
												gr6="B";
											}else if(dm6>=g5 && dm6<=g6) {
												gr6="C";
											}else if(dm6>=g7 && dm6<=g8) {
												gr6="D";
											}else if(dm6>=g9 && dm6<=g10) {
												gr6="F";
											}
											
											
										}
										
									}
								    if((edum==null || edum.isEmpty() ||edum.equals("-")) && (edut==null || edut.isEmpty()||edut.equals("-"))  ) {
								    	 
								    	
								    	   if((edum==null || edum.isEmpty()) && (edut==null || edut.isEmpty())) {
								    		   
								    		   edu="";
								    		   
								    	   }else {
								    		   
								    		   edu="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((edum!=null) && (!edum.isEmpty()) && (!edum.equals("-")) ) {
								    		
								    		edumd=Double.parseDouble(rs.getString("edum"));
								    		
								    	}
								    	
								    	
	                                    if((edut!=null) && (!edut.isEmpty())  && (!edut.equals("-"))) {
	                                    	
	                                    	 edutd=Double.parseDouble(rs.getString("edut"));
								    		
								    	}
								    	
								    	
								    	edua=edumd+edutd;
								    	edu=edua.toString();
								    }
								    
								    
								    
								    if(edu.isEmpty() || edu.equals(null)) {
										
										m7="";
										gr7="";
										
									}else {
										
										if(edu.equals("-")) {
											
											m7="-";
											gr7="-";
											
										}else {
											
											m7=edu;
											dm7=Double.parseDouble(edu);
											n7=1;
											
											if(dm7>=g1 && dm7<=g2) {
												gr7="A";
											}else if(dm7>=g3 && dm7<=g4) {
												gr7="B";
											}else if(dm7>=g5 && dm7<=g6) {
												gr7="C";
											}else if(dm7>=g7 && dm7<=g8) {
												gr7="D";
											}else if(dm7>=g9 && dm7<=g10) {
												gr7="F";
											}
											
											
										}
										
									}
								    if((kiswm==null || kiswm.isEmpty() ||kiswm.equals("-")) && (kiswt==null || kiswt.isEmpty()||kiswt.equals("-"))  ) {
								    	 
								    	
								    	   if((kiswm==null || kiswm.isEmpty()) && (kiswt==null || kiswt.isEmpty())) {
								    		   
								    		   kisw="";
								    		   
								    	   }else {
								    		   
								    		   kisw="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((kiswm!=null) && (!kiswm.isEmpty()) && (!kiswm.equals("-")) ) {
								    		
								    		kiswmd=Double.parseDouble(rs.getString("kiswm"));
								    		
								    	}
								    	
								    	
	                                    if((kiswt!=null) && (!kiswt.isEmpty())  && (!kiswt.equals("-"))) {
	                                    	
	                                    	 kiswtd=Double.parseDouble(rs.getString("kiswt"));
								    		
								    	}
								    	
								    	
								    	kiswa=kiswmd+kiswtd;
								    	kisw=kiswa.toString();
								    }
								    
								    
								    
								    if(kisw.isEmpty() || kisw.equals(null)) {
										
										m8="";
										gr8="";
										
									}else {
										
										if(kisw.equals("-")) {
											
											m8="-";
											gr8="-";
											
										}else {
											
											m8=kisw;
											dm8=Double.parseDouble(kisw);
											n8=1;
											
											if(dm8>=g1 && dm8<=g2) {
												gr8="A";
											}else if(dm8>=g3 && dm8<=g4) {
												gr8="B";
											}else if(dm8>=g5 && dm8<=g6) {
												gr8="C";
											}else if(dm8>=g7 && dm8<=g8) {
												gr8="D";
											}else if(dm8>=g9 && dm8<=g10) {
												gr8="F";
											}
											
											
										}
										
									}
								    if((engm==null || engm.isEmpty() ||engm.equals("-")) && (engt==null || engt.isEmpty()||engt.equals("-"))  ) {
								    	 
								    	
								    	   if((engm==null || engm.isEmpty()) && (engt==null || engt.isEmpty())) {
								    		   
								    		   eng="";
								    		   
								    	   }else {
								    		   
								    		   eng="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((engm!=null) && (!engm.isEmpty()) && (!engm.equals("-")) ) {
								    		
								    		engmd=Double.parseDouble(rs.getString("engm"));
								    		
								    	}
								    	
								    	
	                                    if((engt!=null) && (!engt.isEmpty())  && (!engt.equals("-"))) {
	                                    	
	                                    	 engtd=Double.parseDouble(rs.getString("engt"));
								    		
								    	}
								    	
								    	
								    	enga=engmd+engtd;
								    	eng=enga.toString();
								    }
								    
								    
								    
								    if(eng.isEmpty() || eng.equals(null)) {
										
										m9="";
										gr9="";
										
									}else {
										
										if(eng.equals("-")) {
											
											m9="-";
											gr9="-";
											
										}else {
											
											m9=eng;
											dm9=Double.parseDouble(eng);
											n9=1;
											
											if(dm9>=g1 && dm9<=g2) {
												gr9="A";
											}else if(dm9>=g3 && dm9<=g4) {
												gr9="B";
											}else if(dm9>=g5 && dm9<=g6) {
												gr9="C";
											}else if(dm9>=g7 && dm9<=g8) {
												gr9="D";
											}else if(dm9>=g9 && dm9<=g10) {
												gr9="F";
											}
											
											
										}
										
									}
								    if((frem==null || frem.isEmpty() ||frem.equals("-")) && (fret==null || fret.isEmpty()||fret.equals("-"))  ) {
								    	 
								    	
								    	   if((frem==null || frem.isEmpty()) && (fret==null || fret.isEmpty())) {
								    		   
								    		   fre="";
								    		   
								    	   }else {
								    		   
								    		   fre="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((frem!=null) && (!frem.isEmpty()) && (!frem.equals("-")) ) {
								    		
								    		fremd=Double.parseDouble(rs.getString("frem"));
								    		
								    	}
								    	
								    	
	                                    if((fret!=null) && (!fret.isEmpty())  && (!fret.equals("-"))) {
	                                    	
	                                    	 fretd=Double.parseDouble(rs.getString("fret"));
								    		
								    	}
								    	
								    	
								    	frea=fremd+fretd;
								    	fre=frea.toString();
								    }
								    
								    
								    
								    if(fre.isEmpty() || fre.equals(null)) {
										
										m10="";
										gr10="";
										
									}else {
										
										if(fre.equals("-")) {
											
											m10="-";
											gr10="-";
											
										}else {
											
											m10=fre;
											dm10=Double.parseDouble(fre);
											n10=1;
											
											if(dm10>=g1 && dm10<=g2) {
												gr10="A";
											}else if(dm10>=g3 && dm10<=g4) {
												gr10="B";
											}else if(dm10>=g5 && dm10<=g6) {
												gr10="C";
											}else if(dm10>=g7 && dm10<=g8) {
												gr10="D";
											}else if(dm10>=g9 && dm10<=g10) {
												gr10="F";
											}
											
											
										}
										
									}
								    if((litm==null || litm.isEmpty() ||litm.equals("-")) && (litt==null || litt.isEmpty()||litt.equals("-"))  ) {
								    	 
								    	
								    	   if((litm==null || litm.isEmpty()) && (litt==null || litt.isEmpty())) {
								    		   
								    		   lit="";
								    		   
								    	   }else {
								    		   
								    		   lit="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((litm!=null) && (!litm.isEmpty()) && (!litm.equals("-")) ) {
								    		
								    		litmd=Double.parseDouble(rs.getString("litm"));
								    		
								    	}
								    	
								    	
	                                    if((litt!=null) && (!litt.isEmpty())  && (!litt.equals("-"))) {
	                                    	
	                                    	 littd=Double.parseDouble(rs.getString("litt"));
								    		
								    	}
								    	
								    	
								    	lita=litmd+littd;
								    	lit=lita.toString();
								    }
								    
								    
								    
								    if(lit.isEmpty() || lit.equals(null)) {
										
										m11="";
										gr11="";
										
									}else {
										
										if(lit.equals("-")) {
											
											m11="-";
											gr11="-";
											
										}else {
											
											m11=lit;
											dm11=Double.parseDouble(lit);
											n11=1;
											
											if(dm11>=g1 && dm11<=g2) {
												gr11="A";
											}else if(dm11>=g3 && dm11<=g4) {
												gr11="B";
											}else if(dm11>=g5 && dm11<=g6) {
												gr11="C";
											}else if(dm11>=g7 && dm11<=g8) {
												gr11="D";
											}else if(dm11>=g9 && dm11<=g10) {
												gr11="F";
											}
											
											
										}
										
									}
								    if((aram==null || aram.isEmpty() ||aram.equals("-")) && (arat==null || arat.isEmpty()||arat.equals("-"))  ) {
								    	 
								    	
								    	   if((aram==null || aram.isEmpty()) && (arat==null || arat.isEmpty())) {
								    		   
								    		   ara="";
								    		   
								    	   }else {
								    		   
								    		   ara="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((aram!=null) && (!aram.isEmpty()) && (!aram.equals("-")) ) {
								    		
								    		aramd=Double.parseDouble(rs.getString("aram"));
								    		
								    	}
								    	
								    	
	                                    if((arat!=null) && (!arat.isEmpty())  && (!arat.equals("-"))) {
	                                    	
	                                    	 aratd=Double.parseDouble(rs.getString("arat"));
								    		
								    	}
								    	
								    	
								    	araa=aramd+aratd;
								    	ara=araa.toString();
								    }
								    
								    
								    
								    if(ara.isEmpty() || ara.equals(null)) {
										
										m12="";
										gr12="";
										
									}else {
										
										if(ara.equals("-")) {
											
											m12="-";
											gr12="-";
											
										}else {
											
											m12=ara;
											dm12=Double.parseDouble(ara);
											n12=1;
											
											if(dm12>=g1 && dm12<=g2) {
												gr12="A";
											}else if(dm12>=g3 && dm12<=g4) {
												gr12="B";
											}else if(dm12>=g5 && dm12<=g6) {
												gr12="C";
											}else if(dm12>=g7 && dm12<=g8) {
												gr12="D";
											}else if(dm12>=g9 && dm12<=g10) {
												gr12="F";
											}
											
											
										}
										
									}
								    if((phym==null || phym.isEmpty() ||phym.equals("-")) && (phyt==null || phyt.isEmpty()||phyt.equals("-"))  ) {
								    	 
								    	
								    	   if((phym==null || phym.isEmpty()) && (phyt==null || phyt.isEmpty())) {
								    		   
								    		   phy="";
								    		   
								    	   }else {
								    		   
								    		   phy="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((phym!=null) && (!phym.isEmpty()) && (!phym.equals("-")) ) {
								    		
								    		phymd=Double.parseDouble(rs.getString("phym"));
								    		
								    	}
								    	
								    	
	                                    if((phyt!=null) && (!phyt.isEmpty())  && (!phyt.equals("-"))) {
	                                    	
	                                    	 phytd=Double.parseDouble(rs.getString("phyt"));
								    		
								    	}
								    	
								    	
								    	phya=phymd+phytd;
								    	phy=phya.toString();
								    }
								    
								    
								    
								    if(phy.isEmpty() || phy.equals(null)) {
										
										m13="";
										gr13="";
										
									}else {
										
										if(phy.equals("-")) {
											
											m13="-";
											gr13="-";
											
										}else {
											
											m13=phy;
											dm13=Double.parseDouble(phy);
											n13=1;
											
											if(dm13>=g1 && dm13<=g2) {
												gr13="A";
											}else if(dm13>=g3 && dm13<=g4) {
												gr13="B";
											}else if(dm13>=g5 && dm13<=g6) {
												gr13="C";
											}else if(dm13>=g7 && dm13<=g8) {
												gr13="D";
											}else if(dm13>=g9 && dm13<=g10) {
												gr13="F";
											}
											
											
										}
										
									}
								    if((chem==null || chem.isEmpty() ||chem.equals("-")) && (chet==null || chet.isEmpty()||chet.equals("-"))  ) {
								    	 
								    	
								    	   if((chem==null || chem.isEmpty()) && (chet==null || chet.isEmpty())) {
								    		   
								    		   che="";
								    		   
								    	   }else {
								    		   
								    		   che="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((chem!=null) && (!chem.isEmpty()) && (!chem.equals("-")) ) {
								    		
								    		chemd=Double.parseDouble(rs.getString("chem"));
								    		
								    	}
								    	
								    	
	                                    if((chet!=null) && (!chet.isEmpty())  && (!chet.equals("-"))) {
	                                    	
	                                    	 chetd=Double.parseDouble(rs.getString("chet"));
								    		
								    	}
								    	
								    	
								    	chea=chemd+chetd;
								    	che=chea.toString();
								    }
								    
								    
								    
								    if(che.isEmpty() || che.equals(null)) {
										
										m14="";
										gr14="";
										
									}else {
										
										if(che.equals("-")) {
											
											m14="-";
											gr14="-";
											
										}else {
											
											m14=che;
											dm14=Double.parseDouble(che);
											n14=1;
											
											if(dm14>=g1 && dm14<=g2) {
												gr14="A";
											}else if(dm14>=g3 && dm14<=g4) {
												gr14="B";
											}else if(dm14>=g5 && dm14<=g6) {
												gr14="C";
											}else if(dm14>=g7 && dm14<=g8) {
												gr14="D";
											}else if(dm14>=g9 && dm14<=g10) {
												gr14="F";
											}
											
											
										}
										
									}
								    if((biom==null || biom.isEmpty() ||biom.equals("-")) && (biot==null || biot.isEmpty()||biot.equals("-"))  ) {
								    	 
								    	
								    	   if((biom==null || biom.isEmpty()) && (biot==null || biot.isEmpty())) {
								    		   
								    		   bio="";
								    		   
								    	   }else {
								    		   
								    		   bio="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((biom!=null) && (!biom.isEmpty()) && (!biom.equals("-")) ) {
								    		
								    		biomd=Double.parseDouble(rs.getString("biom"));
								    		
								    	}
								    	
								    	
	                                    if((biot!=null) && (!biot.isEmpty())  && (!biot.equals("-"))) {
	                                    	
	                                    	 biotd=Double.parseDouble(rs.getString("biot"));
								    		
								    	}
								    	
								    	
								    	bioa=biomd+biotd;
								    	bio=bioa.toString();
								    }
								    
								    
								    
								    if(bio.isEmpty() || bio.equals(null)) {
										
										m15="";
										gr15="";
										
									}else {
										
										if(bio.equals("-")) {
											
											m15="-";
											gr15="-";
											
										}else {
											
											m15=bio;
											dm15=Double.parseDouble(bio);
											n15=1;
											
											if(dm15>=g1 && dm15<=g2) {
												gr15="A";
											}else if(dm15>=g3 && dm15<=g4) {
												gr15="B";
											}else if(dm15>=g5 && dm15<=g6) {
												gr15="C";
											}else if(dm15>=g7 && dm15<=g8) {
												gr15="D";
											}else if(dm15>=g9 && dm15<=g10) {
												gr15="F";
											}
											
											
										}
										
									}
								    
								    if((agrim==null || agrim.isEmpty() ||agrim.equals("-")) && (agrit==null || agrit.isEmpty()||agrit.equals("-"))  ) {
								    	 
								    	
								    	   if((agrim==null || agrim.isEmpty()) && (agrit==null || agrit.isEmpty())) {
								    		   
								    		   agri="";
								    		   
								    	   }else {
								    		   
								    		   agri="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((agrim!=null) && (!agrim.isEmpty()) && (!agrim.equals("-")) ) {
								    		
								    		agrimd=Double.parseDouble(rs.getString("agrim"));
								    		
								    	}
								    	
								    	
	                                    if((agrit!=null) && (!agrit.isEmpty())  && (!agrit.equals("-"))) {
	                                    	
	                                    	 agritd=Double.parseDouble(rs.getString("agrit"));
								    		
								    	}
								    	
								    	
								    	agria=agrimd+agritd;
								    	agri=agria.toString();
								    }
								    
								    
								    
								    if(agri.isEmpty() || agri.equals(null)) {
										
										m16="";
										gr16="";
										
									}else {
										
										if(agri.equals("-")) {
											
											m16="-";
											gr16="-";
											
										}else {
											
											m16=agri;
											dm16=Double.parseDouble(agri);
											n16=1;
											
											if(dm16>=g1 && dm16<=g2) {
												gr16="A";
											}else if(dm16>=g3 && dm16<=g4) {
												gr16="B";
											}else if(dm16>=g5 && dm16<=g6) {
												gr16="C";
											}else if(dm16>=g7 && dm16<=g8) {
												gr16="D";
											}else if(dm16>=g9 && dm16<=g10) {
												gr16="F";
											}
											
											
										}
										
									}
								    if((itm==null || itm.isEmpty() ||itm.equals("-")) && (itt==null || itt.isEmpty()||itt.equals("-"))  ) {
								    	 
								    	
								    	   if((itm==null || itm.isEmpty()) && (itt==null || itt.isEmpty())) {
								    		   
								    		   it="";
								    		   
								    	   }else {
								    		   
								    		   it="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((itm!=null) && (!itm.isEmpty()) && (!itm.equals("-")) ) {
								    		
								    		itmd=Double.parseDouble(rs.getString("itm"));
								    		
								    	}
								    	
								    	
	                                    if((itt!=null) && (!itt.isEmpty())  && (!itt.equals("-"))) {
	                                    	
	                                    	 ittd=Double.parseDouble(rs.getString("itt"));
								    		
								    	}
								    	
								    	
								    	ita=itmd+ittd;
								    	it=ita.toString();
								    }
								    
								    
								    
								    if(it.isEmpty() || it.equals(null)) {
										
										m17="";
										gr17="";
										
									}else {
										
										if(it.equals("-")) {
											
											m17="-";
											gr17="-";
											
										}else {
											
											m17=it;
											dm17=Double.parseDouble(it);
											n17=1;
											
											if(dm17>=g1 && dm17<=g2) {
												gr17="A";
											}else if(dm17>=g3 && dm17<=g4) {
												gr17="B";
											}else if(dm17>=g5 && dm17<=g6) {
												gr17="C";
											}else if(dm17>=g7 && dm17<=g8) {
												gr17="D";
											}else if(dm17>=g9 && dm17<=g10) {
												gr17="F";
											}
											
											
										}
										
									}
								    if((mathm==null || mathm.isEmpty() ||mathm.equals("-")) && (matht==null || matht.isEmpty()||matht.equals("-"))  ) {
								    	 
								    	
								    	   if((mathm==null || mathm.isEmpty()) && (matht==null || matht.isEmpty())) {
								    		   
								    		   math="";
								    		   
								    	   }else {
								    		   
								    		   math="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((mathm!=null) && (!mathm.isEmpty()) && (!mathm.equals("-")) ) {
								    		
								    		mathmd=Double.parseDouble(rs.getString("mathm"));
								    		
								    	}
								    	
								    	
	                                    if((matht!=null) && (!matht.isEmpty())  && (!matht.equals("-"))) {
	                                    	
	                                    	 mathtd=Double.parseDouble(rs.getString("matht"));
								    		
								    	}
								    	
								    	
								    	matha=mathmd+mathtd;
								    	math=matha.toString();
								    }
								    
								    
								    
								    if(math.isEmpty() || math.equals(null)) {
										
										m18="";
										gr18="";
										
									}else {
										
										if(math.equals("-")) {
											
											m18="-";
											gr18="-";
											
										}else {
											
											m18=math;
											dm18=Double.parseDouble(math);
											n18=1;
											
											if(dm18>=g1 && dm18<=g2) {
												gr18="A";
											}else if(dm18>=g3 && dm18<=g4) {
												gr18="B";
											}else if(dm18>=g5 && dm18<=g6) {
												gr18="C";
											}else if(dm18>=g7 && dm18<=g8) {
												gr18="D";
											}else if(dm18>=g9 && dm18<=g10) {
												gr18="F";
											}
											
											
										}
										
									}
								    if((admm==null || admm.isEmpty() ||admm.equals("-")) && (admt==null || admt.isEmpty()||admt.equals("-"))  ) {
								    	 
								    	
								    	   if((admm==null || admm.isEmpty()) && (admt==null || admt.isEmpty())) {
								    		   
								    		   adm="";
								    		   
								    	   }else {
								    		   
								    		   adm="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((admm!=null) && (!admm.isEmpty()) && (!admm.equals("-")) ) {
								    		
								    		admmd=Double.parseDouble(rs.getString("admm"));
								    		
								    	}
								    	
								    	
	                                    if((admt!=null) && (!admt.isEmpty())  && (!admt.equals("-"))) {
	                                    	
	                                    	 admtd=Double.parseDouble(rs.getString("admt"));
								    		
								    	}
								    	
								    	
								    	adma=admmd+admtd;
								    	adm=adma.toString();
								    }
								    
								    
								    
								    if(adm.isEmpty() || adm.equals(null)) {
										
										m19="";
										gr19="";
										
									}else {
										
										if(adm.equals("-")) {
											
											m19="-";
											gr19="-";
											
										}else {
											
											m19=adm;
											dm19=Double.parseDouble(adm);
											n19=1;
											
											if(dm19>=g1 && dm19<=g2) {
												gr19="A";
											}else if(dm19>=g3 && dm19<=g4) {
												gr19="B";
											}else if(dm19>=g5 && dm19<=g6) {
												gr19="C";
											}else if(dm19>=g7 && dm19<=g8) {
												gr19="D";
											}else if(dm19>=g9 && dm19<=g10) {
												gr19="F";
											}
											
											
										}
										
									}
								    if((foodm==null || foodm.isEmpty() ||foodm.equals("-")) && (foodt==null || foodt.isEmpty()||foodt.equals("-"))  ) {
								    	 
								    	
								    	   if((foodm==null || foodm.isEmpty()) && (foodt==null || foodt.isEmpty())) {
								    		   
								    		   food="";
								    		   
								    	   }else {
								    		   
								    		   food="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((foodm!=null) && (!foodm.isEmpty()) && (!foodm.equals("-")) ) {
								    		
								    		foodmd=Double.parseDouble(rs.getString("foodm"));
								    		
								    	}
								    	
								    	
	                                    if((foodt!=null) && (!foodt.isEmpty())  && (!foodt.equals("-"))) {
	                                    	
	                                    	 foodtd=Double.parseDouble(rs.getString("foodt"));
								    		
								    	}
								    	
								    	
								    	fooda=foodmd+foodtd;
								    	food=fooda.toString();
								    }
								    
								    
								    
								    if(food.isEmpty() || food.equals(null)) {
										
										m20="";
										gr20="";
										
									}else {
										
										if(food.equals("-")) {
											
											m20="-";
											gr20="-";
											
										}else {
											
											m20=food;
											dm20=Double.parseDouble(food);
											n20=1;
											
											if(dm20>=g1 && dm20<=g2) {
												gr20="A";
											}else if(dm20>=g3 && dm20<=g4) {
												gr20="B";
											}else if(dm20>=g5 && dm20<=g6) {
												gr20="C";
											}else if(dm20>=g7 && dm20<=g8) {
												gr20="D";
											}else if(dm20>=g9 && dm20<=g10) {
												gr20="F";
											}
											
											
										}
										
									}
								    if((textilem==null || textilem.isEmpty() ||textilem.equals("-")) && (textilet==null || textilet.isEmpty()||textilet.equals("-"))  ) {
								    	 
								    	
								    	   if((textilem==null || textilem.isEmpty()) && (textilet==null || textilet.isEmpty())) {
								    		   
								    		   textile="";
								    		   
								    	   }else {
								    		   
								    		   textile="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((textilem!=null) && (!textilem.isEmpty()) && (!textilem.equals("-")) ) {
								    		
								    		textilemd=Double.parseDouble(rs.getString("textilem"));
								    		
								    	}
								    	
								    	
	                                    if((textilet!=null) && (!textilet.isEmpty())  && (!textilet.equals("-"))) {
	                                    	
	                                    	 textiletd=Double.parseDouble(rs.getString("textilet"));
								    		
								    	}
								    	
								    	
								    	textilea=textilemd+textiletd;
								    	textile=textilea.toString();
								    }
								    
								    
								    
								    if(textile.isEmpty() || textile.equals(null)) {
										
										m21="";
										gr21="";
										
									}else {
										
										if(textile.equals("-")) {
											
											m21="-";
											gr21="-";
											
										}else {
											
											m21=textile;
											dm21=Double.parseDouble(textile);
											n21=1;
											
											if(dm21>=g1 && dm21<=g2) {
												gr21="A";
											}else if(dm21>=g3 && dm21<=g4) {
												gr21="B";
											}else if(dm21>=g5 && dm21<=g6) {
												gr21="C";
											}else if(dm21>=g7 && dm21<=g8) {
												gr21="D";
											}else if(dm21>=g9 && dm21<=g10) {
												gr21="F";
											}
											
											
										}
										
									}
								    if((comm==null || comm.isEmpty() ||comm.equals("-")) && (comt==null || comt.isEmpty()||comt.equals("-"))  ) {
								    	 
								    	
								    	   if((comm==null || comm.isEmpty()) && (comt==null || comt.isEmpty())) {
								    		   
								    		   com="";
								    		   
								    	   }else {
								    		   
								    		   com="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((comm!=null) && (!comm.isEmpty()) && (!comm.equals("-")) ) {
								    		
								    		commd=Double.parseDouble(rs.getString("comm"));
								    		
								    	}
								    	
								    	
	                                    if((comt!=null) && (!comt.isEmpty())  && (!comt.equals("-"))) {
	                                    	
	                                    	 comtd=Double.parseDouble(rs.getString("comt"));
								    		
								    	}
								    	
								    	
								    	coma=commd+comtd;
								    	com=coma.toString();
								    }
								    
								    
								    
								    if(com.isEmpty() || com.equals(null)) {
										
										m22="";
										gr22="";
										
									}else {
										
										if(com.equals("-")) {
											
											m22="-";
											gr22="-";
											
										}else {
											
											m22=com;
											dm22=Double.parseDouble(com);
											n22=1;
											
											if(dm22>=g1 && dm22<=g2) {
												gr22="A";
											}else if(dm22>=g3 && dm22<=g4) {
												gr22="B";
											}else if(dm22>=g5 && dm22<=g6) {
												gr22="C";
											}else if(dm22>=g7 && dm22<=g8) {
												gr22="D";
											}else if(dm22>=g9 && dm22<=g10) {
												gr22="F";
											}
											
											
										}
										
									}
								    if((bookm==null || bookm.isEmpty() ||bookm.equals("-")) && (bookt==null || bookt.isEmpty()||bookt.equals("-"))  ) {
								    	 
								    	
								    	   if((bookm==null || bookm.isEmpty()) && (bookt==null || bookt.isEmpty())) {
								    		   
								    		   book="";
								    		   
								    	   }else {
								    		   
								    		   book="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((bookm!=null) && (!bookm.isEmpty()) && (!bookm.equals("-")) ) {
								    		
								    		bookmd=Double.parseDouble(rs.getString("bookm"));
								    		
								    	}
								    	
								    	
	                                    if((bookt!=null) && (!bookt.isEmpty())  && (!bookt.equals("-"))) {
	                                    	
	                                    	 booktd=Double.parseDouble(rs.getString("bookt"));
								    		
								    	}
								    	
								    	
								    	booka=bookmd+booktd;
								    	book=booka.toString();
								    }
								    
								    
								    
								    if(book.isEmpty() || book.equals(null)) {
										
										m23="";
										gr23="";
										
									}else {
										
										if(book.equals("-")) {
											
											m23="-";
											gr23="-";
											
										}else {
											
											m23=book;
											dm23=Double.parseDouble(book);
											n23=1;
											
											if(dm23>=g1 && dm23<=g2) {
												gr23="A";
											}else if(dm23>=g3 && dm23<=g4) {
												gr23="B";
											}else if(dm23>=g5 && dm23<=g6) {
												gr23="C";
											}else if(dm23>=g7 && dm23<=g8) {
												gr23="D";
											}else if(dm23>=g9 && dm23<=g10) {
												gr23="F";
											}
											
											
										}
										
									}
								    if((buildm==null || buildm.isEmpty() ||buildm.equals("-")) && (buildt==null || buildt.isEmpty()||buildt.equals("-"))  ) {
								    	 
								    	
								    	   if((buildm==null || buildm.isEmpty()) && (buildt==null || buildt.isEmpty())) {
								    		   
								    		   build="";
								    		   
								    	   }else {
								    		   
								    		   build="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((buildm!=null) && (!buildm.isEmpty()) && (!buildm.equals("-")) ) {
								    		
								    		buildmd=Double.parseDouble(rs.getString("buildm"));
								    		
								    	}
								    	
								    	
	                                    if((buildt!=null) && (!buildt.isEmpty())  && (!buildt.equals("-"))) {
	                                    	
	                                    	 buildtd=Double.parseDouble(rs.getString("buildt"));
								    		
								    	}
								    	
								    	
								    	builda=buildmd+buildtd;
								    	build=builda.toString();
								    }
								    
								    
								    
								    if(build.isEmpty() || build.equals(null)) {
										
										m24="";
										gr24="";
										
									}else {
										
										if(build.equals("-")) {
											
											m24="-";
											gr24="-";
											
										}else {
											
											m24=build;
											dm24=Double.parseDouble(build);
											n24=1;
											
											if(dm24>=g1 && dm24<=g2) {
												gr24="A";
											}else if(dm24>=g3 && dm24<=g4) {
												gr24="B";
											}else if(dm24>=g5 && dm24<=g6) {
												gr24="C";
											}else if(dm24>=g7 && dm24<=g8) {
												gr24="D";
											}else if(dm24>=g9 && dm24<=g10) {
												gr24="F";
											}
											
											
										}
										
									}
								    if((archm==null || archm.isEmpty() ||archm.equals("-")) && (archt==null || archt.isEmpty()||archt.equals("-"))  ) {
								    	 
								    	
								    	   if((archm==null || archm.isEmpty()) && (archt==null || archt.isEmpty())) {
								    		   
								    		   arch="";
								    		   
								    	   }else {
								    		   
								    		   arch="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((archm!=null) && (!archm.isEmpty()) && (!archm.equals("-")) ) {
								    		
								    		archmd=Double.parseDouble(rs.getString("archm"));
								    		
								    	}
								    	
								    	
	                                    if((archt!=null) && (!archt.isEmpty())  && (!archt.equals("-"))) {
	                                    	
	                                    	 archtd=Double.parseDouble(rs.getString("archt"));
								    		
								    	}
								    	
								    	
								    	archa=archmd+archtd;
								    	arch=archa.toString();
								    }
								    
								    
								    
								    if(arch.isEmpty() || arch.equals(null)) {
										
										m25="";
										gr25="";
										
									}else {
										
										if(arch.equals("-")) {
											
											m25="-";
											gr25="-";
											
										}else {
											
											m25=arch;
											dm25=Double.parseDouble(arch);
											n25=1;
											
											if(dm25>=g1 && dm25<=g2) {
												gr25="A";
											}else if(dm25>=g3 && dm25<=g4) {
												gr25="B";
											}else if(dm25>=g5 && dm25<=g6) {
												gr25="C";
											}else if(dm25>=g7 && dm25<=g8) {
												gr25="D";
											}else if(dm25>=g9 && dm25<=g10) {
												gr25="F";
											}
											
											
										}
										
									}
								    if((surveym==null || surveym.isEmpty() ||surveym.equals("-")) && (surveyt==null || surveyt.isEmpty()||surveyt.equals("-"))  ) {
								    	 
								    	
								    	   if((surveym==null || surveym.isEmpty()) && (surveyt==null || surveyt.isEmpty())) {
								    		   
								    		   survey="";
								    		   
								    	   }else {
								    		   
								    		   survey="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((surveym!=null) && (!surveym.isEmpty()) && (!surveym.equals("-")) ) {
								    		
								    		surveymd=Double.parseDouble(rs.getString("surveym"));
								    		
								    	}
								    	
								    	
	                                    if((surveyt!=null) && (!surveyt.isEmpty())  && (!surveyt.equals("-"))) {
	                                    	
	                                    	 surveytd=Double.parseDouble(rs.getString("surveyt"));
								    		
								    	}
								    	
								    	
								    	surveya=surveymd+surveytd;
								    	survey=surveya.toString();
								    }
								    
								    
								    
								    if(survey.isEmpty() || survey.equals(null)) {
										
										m26="";
										gr26="";
										
									}else {
										
										if(survey.equals("-")) {
											
											m26="-";
											gr26="-";
											
										}else {
											
											m26=survey;
											dm26=Double.parseDouble(survey);
											n26=1;
											
											if(dm26>=g1 && dm26<=g2) {
												gr26="A";
											}else if(dm26>=g3 && dm26<=g4) {
												gr26="B";
											}else if(dm26>=g5 && dm26<=g6) {
												gr26="C";
											}else if(dm26>=g7 && dm26<=g8) {
												gr26="D";
											}else if(dm26>=g9 && dm26<=g10) {
												gr26="F";
											}
											
											
										}
										
									}
								    if((carpm==null || carpm.isEmpty() ||carpm.equals("-")) && (carpt==null || carpt.isEmpty()||carpt.equals("-"))  ) {
								    	 
								    	
								    	   if((carpm==null || carpm.isEmpty()) && (carpt==null || carpt.isEmpty())) {
								    		   
								    		   carp="";
								    		   
								    	   }else {
								    		   
								    		   carp="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((carpm!=null) && (!carpm.isEmpty()) && (!carpm.equals("-")) ) {
								    		
								    		carpmd=Double.parseDouble(rs.getString("carpm"));
								    		
								    	}
								    	
								    	
	                                    if((carpt!=null) && (!carpt.isEmpty())  && (!carpt.equals("-"))) {
	                                    	
	                                    	 carptd=Double.parseDouble(rs.getString("carpt"));
								    		
								    	}
								    	
								    	
								    	carpa=carpmd+carptd;
								    	carp=carpa.toString();
								    }
								    
								    
								    
								    if(carp.isEmpty() || carp.equals(null)) {
										
										m27="";
										gr27="";
										
									}else {
										
										if(carp.equals("-")) {
											
											m27="-";
											gr27="-";
											
										}else {
											
											m27=carp;
											dm27=Double.parseDouble(carp);
											n27=1;
											
											if(dm27>=g1 && dm27<=g2) {
												gr27="A";
											}else if(dm27>=g3 && dm27<=g4) {
												gr27="B";
											}else if(dm27>=g5 && dm27<=g6) {
												gr27="C";
											}else if(dm27>=g7 && dm27<=g8) {
												gr27="D";
											}else if(dm27>=g9 && dm27<=g10) {
												gr27="F";
											}
											
											
										}
										
									}
								    if((brickm==null || brickm.isEmpty() ||brickm.equals("-")) && (brickt==null || brickt.isEmpty()||brickt.equals("-"))  ) {
								    	 
								    	
								    	   if((brickm==null || brickm.isEmpty()) && (brickt==null || brickt.isEmpty())) {
								    		   
								    		   brick="";
								    		   
								    	   }else {
								    		   
								    		   brick="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((brickm!=null) && (!brickm.isEmpty()) && (!brickm.equals("-")) ) {
								    		
								    		brickmd=Double.parseDouble(rs.getString("brickm"));
								    		
								    	}
								    	
								    	
	                                    if((brickt!=null) && (!brickt.isEmpty())  && (!brickt.equals("-"))) {
	                                    	
	                                    	 bricktd=Double.parseDouble(rs.getString("brickt"));
								    		
								    	}
								    	
								    	
								    	bricka=brickmd+bricktd;
								    	brick=bricka.toString();
								    }
								    
								    
								    
								    if(brick.isEmpty() || brick.equals(null)) {
										
										m28="";
										gr28="";
										
									}else {
										
										if(brick.equals("-")) {
											
											m28="-";
											gr28="-";
											
										}else {
											
											m28=brick;
											dm28=Double.parseDouble(brick);
											n28=1;
											
											if(dm28>=g1 && dm28<=g2) {
												gr28="A";
											}else if(dm28>=g3 && dm28<=g4) {
												gr28="B";
											}else if(dm28>=g5 && dm28<=g6) {
												gr28="C";
											}else if(dm28>=g7 && dm28<=g8) {
												gr28="D";
											}else if(dm28>=g9 && dm28<=g10) {
												gr28="F";
											}
											
											
										}
										
									}
								    if((paintm==null || paintm.isEmpty() ||paintm.equals("-")) && (paintt==null || paintt.isEmpty()||paintt.equals("-"))  ) {
								    	 
								    	
								    	   if((paintm==null || paintm.isEmpty()) && (paintt==null || paintt.isEmpty())) {
								    		   
								    		   paint="";
								    		   
								    	   }else {
								    		   
								    		   paint="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((paintm!=null) && (!paintm.isEmpty()) && (!paintm.equals("-")) ) {
								    		
								    		paintmd=Double.parseDouble(rs.getString("paintm"));
								    		
								    	}
								    	
								    	
	                                    if((paintt!=null) && (!paintt.isEmpty())  && (!paintt.equals("-"))) {
	                                    	
	                                    	 painttd=Double.parseDouble(rs.getString("paintt"));
								    		
								    	}
								    	
								    	
								    	painta=paintmd+painttd;
								    	paint=painta.toString();
								    }
								    
								    
								    
								    if(paint.isEmpty() || paint.equals(null)) {
										
										m29="";
										gr29="";
										
									}else {
										
										if(paint.equals("-")) {
											
											m29="-";
											gr29="-";
											
										}else {
											
											m29=paint;
											dm29=Double.parseDouble(paint);
											n29=1;
											
											if(dm29>=g1 && dm29<=g2) {
												gr29="A";
											}else if(dm29>=g3 && dm29<=g4) {
												gr29="B";
											}else if(dm29>=g5 && dm29<=g6) {
												gr29="C";
											}else if(dm29>=g7 && dm29<=g8) {
												gr29="D";
											}else if(dm29>=g9 && dm29<=g10) {
												gr29="F";
											}
											
											
										}
										
									}
								    if((plumbm==null || plumbm.isEmpty() ||plumbm.equals("-")) && (plumbt==null || plumbt.isEmpty()||plumbt.equals("-"))  ) {
								    	 
								    	
								    	   if((plumbm==null || plumbm.isEmpty()) && (plumbt==null || plumbt.isEmpty())) {
								    		   
								    		   plumb="";
								    		   
								    	   }else {
								    		   
								    		   plumb="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((plumbm!=null) && (!plumbm.isEmpty()) && (!plumbm.equals("-")) ) {
								    		
								    		plumbmd=Double.parseDouble(rs.getString("plumbm"));
								    		
								    	}
								    	
								    	
	                                    if((plumbt!=null) && (!plumbt.isEmpty())  && (!plumbt.equals("-"))) {
	                                    	
	                                    	 plumbtd=Double.parseDouble(rs.getString("plumbt"));
								    		
								    	}
								    	
								    	
								    	plumba=plumbmd+plumbtd;
								    	plumb=plumba.toString();
								    }
								    
								    
								    
								    if(plumb.isEmpty() || plumb.equals(null)) {
										
										m30="";
										gr30="";
										
									}else {
										
										if(plumb.equals("-")) {
											
											m30="-";
											gr30="-";
											
										}else {
											
											m30=plumb;
											dm30=Double.parseDouble(plumb);
											n30=1;
											
											if(dm30>=g1 && dm30<=g2) {
												gr30="A";
											}else if(dm30>=g3 && dm30<=g4) {
												gr30="B";
											}else if(dm30>=g5 && dm30<=g6) {
												gr30="C";
											}else if(dm30>=g7 && dm30<=g8) {
												gr30="D";
											}else if(dm30>=g9 && dm30<=g10) {
												gr30="F";
											}
											
											
										}
										
									}
								    if((electm==null || electm.isEmpty() ||electm.equals("-")) && (electt==null || electt.isEmpty()||electt.equals("-"))  ) {
								    	 
								    	
								    	   if((electm==null || electm.isEmpty()) && (electt==null || electt.isEmpty())) {
								    		   
								    		   elect="";
								    		   
								    	   }else {
								    		   
								    		   elect="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((electm!=null) && (!electm.isEmpty()) && (!electm.equals("-")) ) {
								    		
								    		electmd=Double.parseDouble(rs.getString("electm"));
								    		
								    	}
								    	
								    	
	                                    if((electt!=null) && (!electt.isEmpty())  && (!electt.equals("-"))) {
	                                    	
	                                    	 electtd=Double.parseDouble(rs.getString("electt"));
								    		
								    	}
								    	
								    	
								    	electa=electmd+electtd;
								    	elect=electa.toString();
								    }
								    
								    
								    
								    if(elect.isEmpty() || elect.equals(null)) {
										
										m31="";
										gr31="";
										
									}else {
										
										if(elect.equals("-")) {
											
											m31="-";
											gr31="-";
											
										}else {
											
											m31=elect;
											dm31=Double.parseDouble(elect);
											n31=1;
											
											if(dm31>=g1 && dm31<=g2) {
												gr31="A";
											}else if(dm31>=g3 && dm31<=g4) {
												gr31="B";
											}else if(dm31>=g5 && dm31<=g6) {
												gr31="C";
											}else if(dm31>=g7 && dm31<=g8) {
												gr31="D";
											}else if(dm31>=g9 && dm31<=g10) {
												gr31="F";
											}
											
											
										}
										
									}
								    if((engineerm==null || engineerm.isEmpty() ||engineerm.equals("-")) && (engineert==null || engineert.isEmpty()||engineert.equals("-"))  ) {
								    	 
								    	
								    	   if((engineerm==null || engineerm.isEmpty()) && (engineert==null || engineert.isEmpty())) {
								    		   
								    		   engineer="";
								    		   
								    	   }else {
								    		   
								    		   engineer="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((engineerm!=null) && (!engineerm.isEmpty()) && (!engineerm.equals("-")) ) {
								    		
								    		engineermd=Double.parseDouble(rs.getString("engineerm"));
								    		
								    	}
								    	
								    	
	                                    if((engineert!=null) && (!engineert.isEmpty())  && (!engineert.equals("-"))) {
	                                    	
	                                    	 engineertd=Double.parseDouble(rs.getString("engineert"));
								    		
								    	}
								    	
								    	
								    	engineera=engineermd+engineertd;
								    	engineer=engineera.toString();
								    }
								    
								    
								    
								    if(engineer.isEmpty() || engineer.equals(null)) {
										
										m32="";
										gr32="";
										
									}else {
										
										if(engineer.equals("-")) {
											
											m32="-";
											gr32="-";
											
										}else {
											
											m32=engineer;
											dm32=Double.parseDouble(engineer);
											n32=1;
											
											if(dm32>=g1 && dm32<=g2) {
												gr32="A";
											}else if(dm32>=g3 && dm32<=g4) {
												gr32="B";
											}else if(dm32>=g5 && dm32<=g6) {
												gr32="C";
											}else if(dm32>=g7 && dm32<=g8) {
												gr32="D";
											}else if(dm32>=g9 && dm32<=g10) {
												gr32="F";
											}
											
											
										}
										
									}
								    if((radiom==null || radiom.isEmpty() ||radiom.equals("-")) && (radiot==null || radiot.isEmpty()||radiot.equals("-"))  ) {
								    	 
								    	
								    	   if((radiom==null || radiom.isEmpty()) && (radiot==null || radiot.isEmpty())) {
								    		   
								    		   radio="";
								    		   
								    	   }else {
								    		   
								    		   radio="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((radiom!=null) && (!radiom.isEmpty()) && (!radiom.equals("-")) ) {
								    		
								    		radiomd=Double.parseDouble(rs.getString("radiom"));
								    		
								    	}
								    	
								    	
	                                    if((radiot!=null) && (!radiot.isEmpty())  && (!radiot.equals("-"))) {
	                                    	
	                                    	 radiotd=Double.parseDouble(rs.getString("radiot"));
								    		
								    	}
								    	
								    	
								    	radioa=radiomd+radiotd;
								    	radio=radioa.toString();
								    }
								    
								    
								    
								    if(radio.isEmpty() || radio.equals(null)) {
										
										m33="";
										gr33="";
										
									}else {
										
										if(radio.equals("-")) {
											
											m33="-";
											gr33="-";
											
										}else {
											
											m33=radio;
											dm33=Double.parseDouble(radio);
											n33=1;
											
											if(dm33>=g1 && dm33<=g2) {
												gr33="A";
											}else if(dm33>=g3 && dm33<=g4) {
												gr33="B";
											}else if(dm33>=g5 && dm33<=g6) {
												gr33="C";
											}else if(dm33>=g7 && dm33<=g8) {
												gr33="D";
											}else if(dm33>=g9 && dm33<=g10) {
												gr33="F";
											}
											
											
										}
										
									}
								    if((draughtm==null || draughtm.isEmpty() ||draughtm.equals("-")) && (draughtt==null || draughtt.isEmpty()||draughtt.equals("-"))  ) {
								    	 
								    	
								    	   if((draughtm==null || draughtm.isEmpty()) && (draughtt==null || draughtt.isEmpty())) {
								    		   
								    		   draught="";
								    		   
								    	   }else {
								    		   
								    		   draught="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((draughtm!=null) && (!draughtm.isEmpty()) && (!draughtm.equals("-")) ) {
								    		
								    		draughtmd=Double.parseDouble(rs.getString("draughtm"));
								    		
								    	}
								    	
								    	
	                                    if((draughtt!=null) && (!draughtt.isEmpty())  && (!draughtt.equals("-"))) {
	                                    	
	                                    	 draughttd=Double.parseDouble(rs.getString("draughtt"));
								    		
								    	}
								    	
								    	
								    	draughta=draughtmd+draughttd;
								    	draught=draughta.toString();
								    }
								    
								    
								    
								    if(draught.isEmpty() || draught.equals(null)) {
										
										m34="";
										gr34="";
										
									}else {
										
										if(draught.equals("-")) {
											
											m34="-";
											gr34="-";
											
										}else {
											
											m34=draught;
											dm34=Double.parseDouble(draught);
											n34=1;
											
											if(dm34>=g1 && dm34<=g2) {
												gr34="A";
											}else if(dm34>=g3 && dm34<=g4) {
												gr34="B";
											}else if(dm34>=g5 && dm34<=g6) {
												gr34="C";
											}else if(dm34>=g7 && dm34<=g8) {
												gr34="D";
											}else if(dm34>=g9 && dm34<=g10) {
												gr34="F";
											}
											
											
										}
										
									}
								    if((refm==null || refm.isEmpty() ||refm.equals("-")) && (reft==null || reft.isEmpty()||reft.equals("-"))  ) {
								    	 
								    	
								    	   if((refm==null || refm.isEmpty()) && (reft==null || reft.isEmpty())) {
								    		   
								    		   ref="";
								    		   
								    	   }else {
								    		   
								    		   ref="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((refm!=null) && (!refm.isEmpty()) && (!refm.equals("-")) ) {
								    		
								    		refmd=Double.parseDouble(rs.getString("refm"));
								    		
								    	}
								    	
								    	
	                                    if((reft!=null) && (!reft.isEmpty())  && (!reft.equals("-"))) {
	                                    	
	                                    	 reftd=Double.parseDouble(rs.getString("reft"));
								    		
								    	}
								    	
								    	
								    	refa=refmd+reftd;
								    	ref=refa.toString();
								    }
								    
								    
								    
								    if(ref.isEmpty() || ref.equals(null)) {
										
										m35="";
										gr35="";
										
									}else {
										
										if(ref.equals("-")) {
											
											m35="-";
											gr35="-";
											
										}else {
											
											m35=ref;
											dm35=Double.parseDouble(ref);
											n35=1;
											
											if(dm35>=g1 && dm35<=g2) {
												gr35="A";
											}else if(dm35>=g3 && dm35<=g4) {
												gr35="B";
											}else if(dm35>=g5 && dm35<=g6) {
												gr35="C";
											}else if(dm35>=g7 && dm35<=g8) {
												gr35="D";
											}else if(dm35>=g9 && dm35<=g10) {
												gr35="F";
											}
											
											
										}
										
									}
								    if((plantm==null || plantm.isEmpty() ||plantm.equals("-")) && (plantt==null || plantt.isEmpty()||plantt.equals("-"))  ) {
								    	 
								    	
								    	   if((plantm==null || plantm.isEmpty()) && (plantt==null || plantt.isEmpty())) {
								    		   
								    		   plant="";
								    		   
								    	   }else {
								    		   
								    		   plant="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((plantm!=null) && (!plantm.isEmpty()) && (!plantm.equals("-")) ) {
								    		
								    		plantmd=Double.parseDouble(rs.getString("plantm"));
								    		
								    	}
								    	
								    	
	                                    if((plantt!=null) && (!plantt.isEmpty())  && (!plantt.equals("-"))) {
	                                    	
	                                    	 planttd=Double.parseDouble(rs.getString("plantt"));
								    		
								    	}
								    	
								    	
								    	planta=plantmd+planttd;
								    	plant=planta.toString();
								    }
								    
								    
								    
								    if(plant.isEmpty() || plant.equals(null)) {
										
										m36="";
										gr36="";
										
									}else {
										
										if(plant.equals("-")) {
											
											m36="-";
											gr36="-";
											
										}else {
											
											m36=plant;
											dm36=Double.parseDouble(plant);
											n36=1;
											
											if(dm36>=g1 && dm36<=g2) {
												gr36="A";
											}else if(dm36>=g3 && dm36<=g4) {
												gr36="B";
											}else if(dm36>=g5 && dm36<=g6) {
												gr36="C";
											}else if(dm36>=g7 && dm36<=g8) {
												gr36="D";
											}else if(dm36>=g9 && dm36<=g10) {
												gr36="F";
											}
											
											
										}
										
									}
								    if((workm==null || workm.isEmpty() ||workm.equals("-")) && (workt==null || workt.isEmpty()||workt.equals("-"))  ) {
								    	 
								    	
								    	   if((workm==null || workm.isEmpty()) && (workt==null || workt.isEmpty())) {
								    		   
								    		   work="";
								    		   
								    	   }else {
								    		   
								    		   work="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((workm!=null) && (!workm.isEmpty()) && (!workm.equals("-")) ) {
								    		
								    		workmd=Double.parseDouble(rs.getString("workm"));
								    		
								    	}
								    	
								    	
	                                    if((workt!=null) && (!workt.isEmpty())  && (!workt.equals("-"))) {
	                                    	
	                                    	 worktd=Double.parseDouble(rs.getString("workt"));
								    		
								    	}
								    	
								    	
								    	worka=workmd+worktd;
								    	work=worka.toString();
								    }
								    
								    
								    
								    if(work.isEmpty() || work.equals(null)) {
										
										m37="";
										gr37="";
										
									}else {
										
										if(work.equals("-")) {
											
											m37="-";
											gr37="-";
											
										}else {
											
											m37=work;
											dm37=Double.parseDouble(work);
											n37=1;
											
											if(dm37>=g1 && dm37<=g2) {
												gr37="A";
											}else if(dm37>=g3 && dm37<=g4) {
												gr37="B";
											}else if(dm37>=g5 && dm37<=g6) {
												gr37="C";
											}else if(dm37>=g7 && dm37<=g8) {
												gr37="D";
											}else if(dm37>=g9 && dm37<=g10) {
												gr37="F";
											}
											
											
										}
										
									}
								    if((motorm==null || motorm.isEmpty() ||motorm.equals("-")) && (motort==null || motort.isEmpty()||motort.equals("-"))  ) {
								    	 
								    	
								    	   if((motorm==null || motorm.isEmpty()) && (motort==null || motort.isEmpty())) {
								    		   
								    		   motor="";
								    		   
								    	   }else {
								    		   
								    		   motor="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((motorm!=null) && (!motorm.isEmpty()) && (!motorm.equals("-")) ) {
								    		
								    		motormd=Double.parseDouble(rs.getString("motorm"));
								    		
								    	}
								    	
								    	
	                                    if((motort!=null) && (!motort.isEmpty())  && (!motort.equals("-"))) {
	                                    	
	                                    	 motortd=Double.parseDouble(rs.getString("motort"));
								    		
								    	}
								    	
								    	
								    	motora=motormd+motortd;
								    	motor=motora.toString();
								    }
								    
								    
								    
								    if(motor.isEmpty() || motor.equals(null)) {
										
										m38="";
										gr38="";
										
									}else {
										
										if(motor.equals("-")) {
											
											m38="-";
											gr38="-";
											
										}else {
											
											m38=motor;
											dm38=Double.parseDouble(motor);
											n38=1;
											
											if(dm38>=g1 && dm38<=g2) {
												gr38="A";
											}else if(dm38>=g3 && dm38<=g4) {
												gr38="B";
											}else if(dm38>=g5 && dm38<=g6) {
												gr38="C";
											}else if(dm38>=g7 && dm38<=g8) {
												gr38="D";
											}else if(dm38>=g9 && dm38<=g10) {
												gr38="F";
											}
											
											
										}
										
									}
								    if((weldingm==null || weldingm.isEmpty() ||weldingm.equals("-")) && (weldingt==null || weldingt.isEmpty()||weldingt.equals("-"))  ) {
								    	 
								    	
								    	   if((weldingm==null || weldingm.isEmpty()) && (weldingt==null || weldingt.isEmpty())) {
								    		   
								    		   welding="";
								    		   
								    	   }else {
								    		   
								    		   welding="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((weldingm!=null) && (!weldingm.isEmpty()) && (!weldingm.equals("-")) ) {
								    		
								    		weldingmd=Double.parseDouble(rs.getString("weldingm"));
								    		
								    	}
								    	
								    	
	                                    if((weldingt!=null) && (!weldingt.isEmpty())  && (!weldingt.equals("-"))) {
	                                    	
	                                    	 weldingtd=Double.parseDouble(rs.getString("weldingt"));
								    		
								    	}
								    	
								    	
								    	weldinga=weldingmd+weldingtd;
								    	welding=weldinga.toString();
								    }
								    
								    
								    
								    if(welding.isEmpty() || welding.equals(null)) {
										
										m39="";
										gr39="";
										
									}else {
										
										if(welding.equals("-")) {
											
											m39="-";
											gr39="-";
											
										}else {
											
											m39=welding;
											dm39=Double.parseDouble(welding);
											n39=1;
											
											if(dm39>=g1 && dm39<=g2) {
												gr39="A";
											}else if(dm39>=g3 && dm39<=g4) {
												gr39="B";
											}else if(dm39>=g5 && dm39<=g6) {
												gr39="C";
											}else if(dm39>=g7 && dm39<=g8) {
												gr39="D";
											}else if(dm39>=g9 && dm39<=g10) {
												gr39="F";
											}
											
											
										}
										
									}
								    if((fitm==null || fitm.isEmpty() ||fitm.equals("-")) && (fitt==null || fitt.isEmpty()||fitt.equals("-"))  ) {
								    	 
								    	
								    	   if((fitm==null || fitm.isEmpty()) && (fitt==null || fitt.isEmpty())) {
								    		   
								    		   fit="";
								    		   
								    	   }else {
								    		   
								    		   fit="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((fitm!=null) && (!fitm.isEmpty()) && (!fitm.equals("-")) ) {
								    		
								    		fitmd=Double.parseDouble(rs.getString("fitm"));
								    		
								    	}
								    	
								    	
	                                    if((fitt!=null) && (!fitt.isEmpty())  && (!fitt.equals("-"))) {
	                                    	
	                                    	 fittd=Double.parseDouble(rs.getString("fitt"));
								    		
								    	}
								    	
								    	
								    	fita=fitmd+fittd;
								    	fit=fita.toString();
								    }
								    
								    
								    
								    if(fit.isEmpty() || fit.equals(null)) {
										
										m40="";
										gr40="";
										
									}else {
										
										if(fit.equals("-")) {
											
											m40="-";
											gr40="-";
											
										}else {
											
											m40=fit;
											dm40=Double.parseDouble(fit);
											n40=1;
											
											if(dm40>=g1 && dm40<=g2) {
												gr40="A";
											}else if(dm40>=g3 && dm40<=g4) {
												gr40="B";
											}else if(dm40>=g5 && dm40<=g6) {
												gr40="C";
											}else if(dm40>=g7 && dm40<=g8) {
												gr40="D";
											}else if(dm40>=g9 && dm40<=g10) {
												gr40="F";
											}
											
											
										}
										
									}
								    if((autom==null || autom.isEmpty() ||autom.equals("-")) && (autot==null || autot.isEmpty()||autot.equals("-"))  ) {
								    	 
								    	
								    	   if((autom==null || autom.isEmpty()) && (autot==null || autot.isEmpty())) {
								    		   
								    		   auto="";
								    		   
								    	   }else {
								    		   
								    		   auto="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((autom!=null) && (!autom.isEmpty()) && (!autom.equals("-")) ) {
								    		
								    		automd=Double.parseDouble(rs.getString("autom"));
								    		
								    	}
								    	
								    	
	                                    if((autot!=null) && (!autot.isEmpty())  && (!autot.equals("-"))) {
	                                    	
	                                    	 autotd=Double.parseDouble(rs.getString("autot"));
								    		
								    	}
								    	
								    	
								    	autoa=automd+autotd;
								    	auto=autoa.toString();
								    }
								    
								    
								    
								    if(auto.isEmpty() || auto.equals(null)) {
										
										m41="";
										gr41="";
										
									}else {
										
										if(auto.equals("-")) {
											
											m41="-";
											gr41="-";
											
										}else {
											
											m41=auto;
											dm41=Double.parseDouble(auto);
											n41=1;
											
											if(dm41>=g1 && dm41<=g2) {
												gr41="A";
											}else if(dm41>=g3 && dm41<=g4) {
												gr41="B";
											}else if(dm41>=g5 && dm41<=g6) {
												gr41="C";
											}else if(dm41>=g7 && dm41<=g8) {
												gr41="D";
											}else if(dm41>=g9 && dm41<=g10) {
												gr41="F";
											}
											
											
										}
										
									}
								    if((mechanicm==null || mechanicm.isEmpty() ||mechanicm.equals("-")) && (mechanict==null || mechanict.isEmpty()||mechanict.equals("-"))  ) {
								    	 
								    	
								    	   if((mechanicm==null || mechanicm.isEmpty()) && (mechanict==null || mechanict.isEmpty())) {
								    		   
								    		   mechanic="";
								    		   
								    	   }else {
								    		   
								    		   mechanic="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((mechanicm!=null) && (!mechanicm.isEmpty()) && (!mechanicm.equals("-")) ) {
								    		
								    		mechanicmd=Double.parseDouble(rs.getString("mechanicm"));
								    		
								    	}
								    	
								    	
	                                    if((mechanict!=null) && (!mechanict.isEmpty())  && (!mechanict.equals("-"))) {
	                                    	
	                                    	 mechanictd=Double.parseDouble(rs.getString("mechanict"));
								    		
								    	}
								    	
								    	
								    	mechanica=mechanicmd+mechanictd;
								    	mechanic=mechanica.toString();
								    }
								    
								    
								    
								    if(mechanic.isEmpty() || mechanic.equals(null)) {
										
										m42="";
										gr42="";
										
									}else {
										
										if(mechanic.equals("-")) {
											
											m42="-";
											gr42="-";
											
										}else {
											
											m42=mechanic;
											dm42=Double.parseDouble(mechanic);
											n42=1;
											
											if(dm42>=g1 && dm42<=g2) {
												gr42="A";
											}else if(dm42>=g3 && dm42<=g4) {
												gr42="B";
											}else if(dm42>=g5 && dm42<=g6) {
												gr42="C";
											}else if(dm42>=g7 && dm42<=g8) {
												gr42="D";
											}else if(dm42>=g9 && dm42<=g10) {
												gr42="F";
											}
											
											
										}
										
									}
								    
								    
								    
								    if((foundrym==null || foundrym.isEmpty() ||foundrym.equals("-")) && (foundryt==null || foundryt.isEmpty()||foundryt.equals("-"))  ) {
								    	 
								    	
								    	   if((foundrym==null || foundrym.isEmpty()) && (foundryt==null || foundryt.isEmpty())) {
								    		   
								    		   foundry="";
								    		   
								    	   }else {
								    		   
								    		   foundry="-";
								    	   }
								    	   
								    	  
								    }else {
								    	
								    	if((foundrym!=null) && (!foundrym.isEmpty()) && (!foundrym.equals("-")) ) {
								    		
								    		foundrymd=Double.parseDouble(rs.getString("foundrym"));
								    		
								    	}
								    	
								    	
	                                    if((foundryt!=null) && (!foundryt.isEmpty())  && (!foundryt.equals("-"))) {
	                                    	
	                                    	 foundrytd=Double.parseDouble(rs.getString("foundryt"));
								    		
								    	}
								    	
								    	
								    	foundrya=foundrymd+foundrytd;
								    	foundry=foundrya.toString();
								    }
								    
								    
								    
								    if(foundry.isEmpty() || foundry.equals(null)) {
										
										m43="";
										gr43="";
										
									}else {
										
										if(foundry.equals("-")) {
											
											m43="-";
											gr43="-";
											
										}else {
											
											m43=foundry;
											dm43=Double.parseDouble(foundry);
											n43=1;
											
											if(dm43>=g1 && dm43<=g2) {
												gr43="A";
											}else if(dm43>=g3 && dm43<=g4) {
												gr43="B";
											}else if(dm43>=g5 && dm43<=g6) {
												gr43="C";
											}else if(dm43>=g7 && dm43<=g8) {
												gr43="D";
											}else if(dm43>=g9 && dm43<=g10) {
												gr43="F";
											}
											
											
										}
										
									}
								    
								    
								    
								    total=n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+n13+n14+n15+n16+n17+n18+n19+n20+n21+n22+n23+n24+n25+n26+n27+n28+n29+n30+n31+n32+n33+
								      		   n34+n35+n36+n37+n37+n39+n40+n41+n42+n43;
								    
								    String sum="",avg="",tp="",div="";
								    double temp=0.0;
								    int i=0,j=0,p=0,toto=0;
								      
								  Double sm=dm0+dm1+dm2+dm3+dm4+dm5+dm6+dm7+dm8+dm9+dm10+dm11+dm12+dm13+dm14+dm15+dm16+dm17+dm18+dm19+dm20+dm21+dm22+dm23+dm24+dm25+dm26+
								      	dm27+dm28+dm29+dm30+dm31+dm32+dm33+dm34+dm35+dm36+dm37+dm38+dm39+dm40+dm41+dm42+dm43;
								       
								       
								  if(total>0) {
							        	
							        	 sum=String.format("%,.2f", sm);
							        }else {
							        	
							        	sum="-";
							        }
							      
								
								  
								  
								  if(total>=7) {
										 
									    Double mudi[]= {dm0,dm1,dm2,dm3,dm4,dm5,dm6,dm7,dm8,dm9,dm10,dm11,dm12,dm13,dm14,dm15,dm16,dm17,dm18,dm19,dm20,dm21,dm22,dm23,dm24,
									    		        dm25,dm26,dm27,dm28,dm29,dm30,dm31,dm32,dm33,dm34,dm35,dm36,dm37,dm38,dm39,dm40,dm41,dm42,dm43};
										Double ave=sm/total;
									    avg=String.format("%,.2f", ave);
									    
									    
									    for(i=0;i<7;i++){
											for(j=i+1;j<mudi.length;j++) {
												if( mudi[i]<mudi[j]) {
													temp=mudi[i];
													mudi[i]=mudi[j];
													mudi[j]=temp;
													
													
													
												}
												
											}
											
											if(mudi[i]>=g1 && mudi[i]<=g2){
											       p=1;
											      }else if(mudi[i]>=g3 && mudi[i]<g4){
											    	 p=2;
											      }
											      else if(mudi[i]>=g5 && mudi[i]<g6){
											    	  p=3;
											      }
											      else if(mudi[i]>=g7 && mudi[i]<g8){
											    	  p=4;
												      }
												  else {
													  p=5;
												      }
												 
										     	 toto=p+toto;
										     	 tp=Integer.toString(toto);
										     	 
										     	 

											      if(toto>=7 && toto<=17){
								           	          div="I";
								           	      }else if(toto>=18 && toto<=21){
								           	    	  div="II";
								           	      }
								           	      else if(toto>=22 && toto<=25){
								           	    	  div="III";
								           	      }
								           	      else if(toto>=26 && toto<=33){
								           	    	  div="IV";
								           		      }
								           		  else if(toto>=34 && toto<=35){
								           			  div="0";
								           		      }
										     	 
										     //  System.out.print(mudi[i]+"\n");
											
										}

									    
									// System.out.println(rs.getString("id")+"  "+total+"   "+sum+"  avg"+avg+"  ");
									 
								 }else {
									 
									 avg="-";tp="-";div="-";
									
								 }
						           
								 
								 
								  // JOptionPane.showMessageDialog(null, avg+"  "+tp+"  "+div);
								    
								    
								
								   if(count1>0) {
									   
									   
									     String sql22="Delete  from Ave_MarkT  where tid ='"+tid+"' and class='"+t27.getSelectedItem().toString()+"' and year='"+t31.getSelectedItem().toString()+"'  and id='"+rs.getString("id")+"'   ";
								         ps=con.prepareStatement(sql22);
								         ps.execute();
								         
								         String sql1="insert into Ave_Markt(id,tid,total,ave,point,div,class,year)  values (?,?,?,?,?,?,?,?)";
								         ps=con.prepareStatement(sql1);
								         ps.setString(1, rs.getString("id"));
								         ps.setString(2,tid);
								         ps.setString(3,sum);
								         ps.setString(4,avg);
								         ps.setString(5,tp);
								         ps.setString(6,div);
								         ps.setString(7,t27.getSelectedItem().toString());
								         ps.setString(8,t31.getSelectedItem().toString());
								         ps.execute();

									   
								   }else {
									   

								         String sql1="insert into Ave_Markt(id,tid,total,ave,point,div,class,year)  values (?,?,?,?,?,?,?,?)";
								         ps=con.prepareStatement(sql1);
								         ps.setString(1, rs.getString("id"));
								         ps.setString(2,tid);
								         ps.setString(3,sum);
								         ps.setString(4,avg);
								         ps.setString(5,tp);
								         ps.setString(6,div);
								         ps.setString(7,t27.getSelectedItem().toString());
								         ps.setString(8,t31.getSelectedItem().toString());
								         ps.execute();

									   
								   }
								   
								    
								    
								    
						    	
						    }
							 
							 
							 
						   
							
							
						}else {
							
							JOptionPane.showMessageDialog(null, "Data are not Available !");
						}
					    
					    
					   
			
		
		}catch(Exception ex) {
			
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}
		
		
	
		
	}

	private void analysis1() {

		try {
			
			  
			  
			  
			  
			  String sqll="select * from Grade_O"; ps=con.prepareStatement(sqll); ResultSet
			  rs5=ps.executeQuery();
			  
			  
			  Double
			  g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
			  g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.
			  getDouble("g4");g5=rs5.getDouble("g5");
			  g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.
			  getDouble("g9");g10=rs5.getDouble("g10");
			  
			  Double a0=0.0,a0t=0.0;String a0v="";int a1=0,a2=0,a3=0,a4=0,a5=0,a6=0; Double
			  b0=0.0,b0t=0.0;String b0v="";int b1=0,b2=0,b3=0,b4=0,b5=0,b6=0; Double
			  c0=0.0,c0t=0.0;String c0v="";int c1=0,c2=0,c3=0,c4=0,c5=0,c6=0; Double
			  d0=0.0,d0t=0.0;String d0v="";int d1=0,d2=0,d3=0,d4=0,d5=0,d6=0; Double
			  e0=0.0,e0t=0.0;String e0v="";int e1=0,e2=0,e3=0,e4=0,e5=0,e6=0; Double
			  f0=0.0,f0t=0.0;String f0v="";int f1=0,f2=0,f3=0,f4=0,f5=0,f6=0; Double
			  h0=0.0,h0t=0.0;String h0v="";int h1=0,h2=0,h3=0,h4=0,h5=0,h6=0; Double
			  i0=0.0,i0t=0.0;String i0v="";int i1=0,i2=0,i3=0,i4=0,i5=0,i6=0; Double
			  j0=0.0,j0t=0.0;String j0v="";int j1=0,j2=0,j3=0,j4=0,j5=0,j6=0; Double
			  k0=0.0,k0t=0.0;String k0v="";int k1=0,k2=0,k3=0,k4=0,k5=0,k6=0; Double
			  l0=0.0,l0t=0.0;String l0v="";int l1=0,l2=0,l3=0,l4=0,l5=0,l6=0; Double
			  o0=0.0,o0t=0.0;String o0v="";int o1=0,o2=0,o3=0,o4=0,o5=0,o6=0; Double
			  p0=0.0,p0t=0.0;String p0v="";int p1=0,p2=0,p3=0,p4=0,p5=0,p6=0; Double
			  q0=0.0,q0t=0.0;String q0v="";int q1=0,q2=0,q3=0,q4=0,q5=0,q6=0; Double
			  r0=0.0,r0t=0.0;String r0v="";int r1=0,r2=0,r3=0,r4=0,r5=0,r6=0; Double
			  s0=0.0,s0t=0.0;String s0v="";int s1=0,s2=0,s3=0,s4=0,s5=0,s6=0; Double
			  t0=0.0,t0t=0.0;String t0v="";int t1=0,t2=0,t3=0,t4=0,t5=0,t6=0; Double
			  u0=0.0,u0t=0.0;String u0v="";int u1=0,u2=0,u3=0,u4=0,u5=0,u6=0; Double
			  v0=0.0,v0t=0.0;String v0v="";int v1=0,v2=0,v3=0,v4=0,v5=0,v6=0; Double
			  w0=0.0,w0t=0.0;String w0v="";int w1=0,w2=0,w3=0,w4=0,w5=0,w6=0; Double
			  x0=0.0,x0t=0.0;String x0v="";int x1=0,x2=0,x3=0,x4=0,x5=0,x6=0; Double
			  y0=0.0,y0t=0.0;String y0v="";int y1=0,y2=0,y3=0,y4=0,y5=0,y6=0; Double
			  z0=0.0,z0t=0.0;String z0v="";int z1=0,z2=0,z3=0,z4=0,z5=0,z6=0; Double
			  aa0=0.0,aa0t=0.0;String aa0v="";int aa1=0,aa2=0,aa3=0,aa4=0,aa5=0,aa6=0;
			  Double bb0=0.0,bb0t=0.0;String bb0v="";int
			  bb1=0,bb2=0,bb3=0,bb4=0,bb5=0,bb6=0; Double cc0=0.0,cc0t=0.0;String
			  cc0v="";int cc1=0,cc2=0,cc3=0,cc4=0,cc5=0,cc6=0; Double
			  dd0=0.0,dd0t=0.0;String dd0v="";int dd1=0,dd2=0,dd3=0,dd4=0,dd5=0,dd6=0;
			  Double ee0=0.0,ee0t=0.0;String ee0v="";int
			  ee1=0,ee2=0,ee3=0,ee4=0,ee5=0,ee6=0; Double ff0=0.0,ff0t=0.0;String
			  ff0v="";int ff1=0,ff2=0,ff3=0,ff4=0,ff5=0,ff6=0; Double
			  gg0=0.0,gg0t=0.0;String gg0v="";int gg1=0,gg2=0,gg3=0,gg4=0,gg5=0,gg6=0;
			  Double hh0=0.0,hh0t=0.0;String hh0v="";int
			  hh1=0,hh2=0,hh3=0,hh4=0,hh5=0,hh6=0; Double ii0=0.0,ii0t=0.0;String
			  ii0v="";int ii1=0,ii2=0,ii3=0,ii4=0,ii5=0,ii6=0; Double
			  jj0=0.0,jj0t=0.0;String jj0v="";int jj1=0,jj2=0,jj3=0,jj4=0,jj5=0,jj6=0;
			  Double kk0=0.0,kk0t=0.0;String kk0v="";int
			  kk1=0,kk2=0,kk3=0,kk4=0,kk5=0,kk6=0; Double ll0=0.0,ll0t=0.0;String
			  ll0v="";int ll1=0,ll2=0,ll3=0,ll4=0,ll5=0,ll6=0; Double
			  mm0=0.0,mm0t=0.0;String mm0v="";int mm1=0,mm2=0,mm3=0,mm4=0,mm5=0,mm6=0;
			  Double nn0=0.0,nn0t=0.0;String nn0v="";int
			  nn1=0,nn2=0,nn3=0,nn4=0,nn5=0,nn6=0; Double oo0=0.0,oo0t=0.0;String
			  oo0v="";int oo1=0,oo2=0,oo3=0,oo4=0,oo5=0,oo6=0; Double
			  pp0=0.0,pp0t=0.0;String pp0v="";int pp1=0,pp2=0,pp3=0,pp4=0,pp5=0,pp6=0;
			  Double qq0=0.0,qq0t=0.0;String qq0v="";int
			  qq1=0,qq2=0,qq3=0,qq4=0,qq5=0,qq6=0; Double rr0=0.0,rr0t=0.0;String
			  rr0v="";int rr1=0,rr2=0,rr3=0,rr4=0,rr5=0,rr6=0; Double
			  ss0=0.0,ss0t=0.0;String ss0v="";int ss1=0,ss2=0,ss3=0,ss4=0,ss5=0,ss6=0;
			  Double tt0=0.0,tt0t=0.0;String tt0v="";int
			  tt1=0,tt2=0,tt3=0,tt4=0,tt5=0,tt6=0; Double uu0=0.0,uu0t=0.0;String
			  uu0v="";int uu1=0,uu2=0,uu3=0,uu4=0,uu5=0,uu6=0; Double civa=0.0; Double
			  hisa=0.0; Double geoa=0.0; Double biblea=0.0; Double dinia=0.0; Double
			  arta=0.0; Double musica=0.0; Double edua=0.0; Double araa=0.0; Double
			  phya=0.0; Double chea=0.0; Double bioa=0.0; Double kiswa=0.0; Double
			  enga=0.0; Double frea=0.0; Double lita=0.0; Double agria=0.0; Double ita=0.0;
			  Double matha=0.0; Double adma=0.0; Double fooda=0.0; Double textilea=0.0;
			  Double coma=0.0; Double booka=0.0; Double builda=0.0; Double archa=0.0;
			  Double surveya=0.0; Double carpa=0.0; Double bricka=0.0; Double painta=0.0;
			  Double plumba=0.0; Double electa=0.0; Double engineera=0.0; Double
			  radioa=0.0; Double draughta=0.0; Double refa=0.0; Double planta=0.0; Double
			  worka=0.0; Double motora=0.0; Double weldinga=0.0; Double fita=0.0; Double
			  autoa=0.0; Double mechanica=0.0; Double foundrya=0.0;
			  
			  
			  
			  
			 
			 
			  
			  
			  
			  
			  String  sql33="Select tid from Term where tname= '"+box45.getSelectedItem().toString(
			  )+"'  "; ps=con.prepareStatement(sql33); ResultSet rs33=ps.executeQuery();
			  
			  String tid=rs33.getString("tid");
			  
			  
			  int exam1=0,exam2=0;
				
				if(tid.equals("1")) {
					exam1=1;exam2=2;
					//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
					
				}else {
					exam1=1;exam2=3;
					//JOptionPane.showMessageDialog(null, exam1+ "  "+exam2);
					
				}

			  
			  
			  String sql="Select sid,id, " +
			  "max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as civm ,max(CASE WHEN Mark_O.sid = '010'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as civt ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as hism,max(CASE WHEN Mark_O.sid = '012'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as hist,"
			  +
			  "max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as geom, max(CASE WHEN Mark_O.sid = '013'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as geot, "
			  +
			  "max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biblem ,max(CASE WHEN Mark_O.sid = '014'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biblet ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as dinim,max(CASE WHEN Mark_O.sid = '015'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as dinit,  "
			  +
			  "max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as artm, max(CASE WHEN Mark_O.sid = '016'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as artt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as musicm ,max(CASE WHEN Mark_O.sid = '017'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as musict ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as edum ,max(CASE WHEN Mark_O.sid = '018'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as edut ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as kiswm, max(CASE WHEN Mark_O.sid = '021'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as kiswt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as engm ,max(CASE WHEN Mark_O.sid = '022'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as engt ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as frem, max(CASE WHEN Mark_O.sid = '023'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fret, "
			  +
			  "max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as litm,max(CASE WHEN Mark_O.sid = '024'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as litt,  "
			  +
			  "max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as aram ,max(CASE WHEN Mark_O.sid = '025'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as arat ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as phym, max(CASE WHEN Mark_O.sid = '031'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as phyt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as chem, max(CASE WHEN Mark_O.sid = '032'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as chet, "
			  +
			  "max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as biom ,max(CASE WHEN Mark_O.sid = '033'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as biot ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as agrim, max(CASE WHEN Mark_O.sid = '034'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as agrit, "
			  +
			  "max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as itm, max(CASE WHEN Mark_O.sid = '036'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as itt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as mathm ,max(CASE WHEN Mark_O.sid = '041'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as matht ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as admm, max(CASE WHEN Mark_O.sid = '042'AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as admt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '051'AND Mark_O.eid='"+exam1+"'THEN Mark_O.pmark ELSE '' END) as foodm, max(CASE WHEN Mark_O.sid = '051' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as foodt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as textilem,max(CASE WHEN Mark_O.sid = '052'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as textilet,"
			  +
			  "max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as comm,max(CASE WHEN Mark_O.sid = '061'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as comt,  "
			  +
			  "max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as bookm, max(CASE WHEN Mark_O.sid = '062'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as bookt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as buildm,max(CASE WHEN Mark_O.sid = '071'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as buildt,"
			  +
			  "max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as archm, max(CASE WHEN Mark_O.sid = '072'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as archt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as surveym, max(CASE WHEN Mark_O.sid = '073'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as surveyt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as carpm ,max(CASE WHEN Mark_O.sid = '074'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as carpt ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as brickm, max(CASE WHEN Mark_O.sid = '075'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as brickt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as paintm, max(CASE WHEN Mark_O.sid = '076'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as paintt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plumbm,max(CASE WHEN Mark_O.sid = '077'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plumbt,  "
			  +
			  "max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as electm, max(CASE WHEN Mark_O.sid = '081'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as electt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '082'AND Mark_O.eid='"+exam1+"'THEN Mark_O.pmark ELSE '' END) as engineerm ,max(CASE WHEN Mark_O.sid = '082' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as engineert ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as radiom, max(CASE WHEN Mark_O.sid = '083'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as radiot, "
			  +
			  "max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as draughtm, max(CASE WHEN Mark_O.sid = '084'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as draughtt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as refm,max(CASE WHEN Mark_O.sid = '085'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as reft,  "
			  +
			  "max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as plantm, max(CASE WHEN Mark_O.sid = '086'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as plantt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as workm ,max(CASE WHEN Mark_O.sid = '092'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as workt ,"
			  +
			  "max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as motorm, max(CASE WHEN Mark_O.sid = '093'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as motort, "
			  +
			  "max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as weldingm, max(CASE WHEN Mark_O.sid = '094'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as weldingt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as fitm, max(CASE WHEN Mark_O.sid = '095'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as fitt, "
			  +
			  "max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as autom, max(CASE WHEN Mark_O.sid = '096'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as autot, "
			  +
			  "max(CASE WHEN Mark_O.sid = '097'AND Mark_O.eid='"+exam1+"'THEN Mark_O.pmark ELSE '' END) as mechanicm, max(CASE WHEN Mark_O.sid = '097' AND Mark_O.eid='"+exam2+"'THEN Mark_O.pmark ELSE '' END) as mechanict, "
			  +
			  "max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam1+"' THEN Mark_O.pmark ELSE '' END) as foundrym ,max(CASE WHEN Mark_O.sid = '098'AND Mark_O.eid='"+exam2+"' THEN Mark_O.pmark ELSE '' END) as foundryt "
			  + "from Mark_O " +
			  " where Mark_O.tid ='"+tid+"' and Mark_O.class='"+box44.getSelectedItem().
			  toString()+"' and Mark_O.year='"+box46.getSelectedItem().toString()
			  +"' GROUP BY id  ";
			  
			  
			  ps = con.prepareStatement(sql); rs = ps.executeQuery();
			  
			  
			  
			  while(rs.next()) {
			  
			  
			  String civm=rs.getString("civm");String civt=rs.getString("civt");Double
			  civmd=0.0;Double civtd=0.0;String civ=""; String
			  hism=rs.getString("hism");String hist=rs.getString("hist");Double
			  hismd=0.0;Double histd=0.0;String his=""; String
			  geom=rs.getString("geom");String geot=rs.getString("geot");Double
			  geomd=0.0;Double geotd=0.0;String geo=""; String
			  biblem=rs.getString("biblem");String biblet=rs.getString("biblet");Double
			  biblemd=0.0;Double bibletd=0.0;String bible=""; String
			  dinim=rs.getString("dinim");String dinit=rs.getString("dinit");Double
			  dinimd=0.0;Double dinitd=0.0;String dini=""; String
			  artm=rs.getString("artm");String artt=rs.getString("artt");Double
			  artmd=0.0;Double arttd=0.0;String art=""; String
			  musicm=rs.getString("musicm");String musict=rs.getString("musict");Double
			  musicmd=0.0;Double musictd=0.0;String music=""; String
			  edum=rs.getString("edum");String edut=rs.getString("edut");Double
			  edumd=0.0;Double edutd=0.0;String edu=""; String
			  aram=rs.getString("aram");String arat=rs.getString("arat");Double
			  aramd=0.0;Double aratd=0.0;String ara=""; String
			  phym=rs.getString("phym");String phyt=rs.getString("phyt");Double
			  phymd=0.0;Double phytd=0.0;String phy=""; String
			  chem=rs.getString("chem");String chet=rs.getString("chet");Double
			  chemd=0.0;Double chetd=0.;String che=""; String
			  biom=rs.getString("biom");String biot=rs.getString("biot");Double
			  biomd=0.0;Double biotd=0.0;String bio=""; String
			  kiswm=rs.getString("kiswm");String kiswt=rs.getString("kiswt");Double
			  kiswmd=0.0;Double kiswtd=0.0;String kisw=""; String
			  engm=rs.getString("engm");String engt=rs.getString("engt");Double
			  engmd=0.0;Double engtd=0.0;String eng=""; String
			  frem=rs.getString("frem");String fret=rs.getString("fret");Double
			  fremd=0.0;Double fretd=0.0;String fre=""; String
			  litm=rs.getString("litm");String litt=rs.getString("litt");Double
			  litmd=0.0;Double littd=0.0;String lit=""; String
			  agrim=rs.getString("agrim");String agrit=rs.getString("agrit");Double
			  agrimd=0.0;Double agritd=0.0;String agri=""; String
			  itm=rs.getString("itm");String itt=rs.getString("itt");Double itmd=0.0;Double
			  ittd=0.0;String it=""; String mathm=rs.getString("mathm");String
			  matht=rs.getString("matht");Double mathmd=0.0;Double mathtd=0.0;String
			  math=""; String admm=rs.getString("admm");String
			  admt=rs.getString("admt");Double admmd=0.0;Double admtd=0.0;String adm="";
			  String foodm=rs.getString("foodm");String foodt=rs.getString("foodt");Double
			  foodmd=0.0;Double foodtd=0.0;String food=""; String
			  textilem=rs.getString("textilem");String
			  textilet=rs.getString("textilet");Double textilemd=0.0;Double
			  textiletd=0.0;String textile=""; String comm=rs.getString("comm");String
			  comt=rs.getString("comt");Double commd=0.0;Double comtd=0.0;String com="";
			  String bookm=rs.getString("bookm");String bookt=rs.getString("bookt");Double
			  bookmd=0.0;Double booktd=0.0;String book=""; String
			  buildm=rs.getString("buildm");String buildt=rs.getString("buildt");Double
			  buildmd=0.0;Double buildtd=0.0;String build=""; String
			  archm=rs.getString("archm");String archt=rs.getString("archt");Double
			  archmd=0.0;Double archtd=0.0;String arch=""; String
			  surveym=rs.getString("surveym");String surveyt=rs.getString("surveyt");Double
			  surveymd=0.0;Double surveytd=0.0;String survey=""; String
			  carpm=rs.getString("carpm");String carpt=rs.getString("carpt");Double
			  carpmd=0.0;Double carptd=0.0;String carp=""; String
			  brickm=rs.getString("brickm");String brickt=rs.getString("brickt");Double
			  brickmd=0.0;Double bricktd=0.0;String brick=""; String
			  paintm=rs.getString("paintm");String paintt=rs.getString("paintt");Double
			  paintmd=0.0;Double painttd=0.0;String paint=""; String
			  plumbm=rs.getString("plumbm");String plumbt=rs.getString("plumbt");Double
			  plumbmd=0.0;Double plumbtd=0.0;String plumb=""; String
			  electm=rs.getString("electm");String electt=rs.getString("electt");Double
			  electmd=0.0;Double electtd=0.0;String elect=""; String
			  engineerm=rs.getString("engineerm");String
			  engineert=rs.getString("engineert");Double engineermd=0.0;Double
			  engineertd=0.0;String engineer=""; String
			  radiom=rs.getString("radiom");String radiot=rs.getString("radiot");Double
			  radiomd=0.0;Double radiotd=0.0;String radio=""; String
			  draughtm=rs.getString("draughtm");String
			  draughtt=rs.getString("draughtt");Double draughtmd=0.0;Double
			  draughttd=0.0;String draught=""; String refm=rs.getString("refm");String
			  reft=rs.getString("reft");Double refmd=0.0;Double reftd=0.0;String ref="";
			  String plantm=rs.getString("plantm");String
			  plantt=rs.getString("plantt");Double plantmd=0.0;Double planttd=0.0;String
			  plant=""; String workm=rs.getString("workm");String
			  workt=rs.getString("workt");Double workmd=0.0;Double worktd=0.0;String
			  work=""; String motorm=rs.getString("motorm");String
			  motort=rs.getString("motort");Double motormd=0.0;Double motortd=0.0;String
			  motor=""; String weldingm=rs.getString("weldingm");String
			  weldingt=rs.getString("weldingt");Double weldingmd=0.0;Double
			  weldingtd=0.0;String welding=""; String fitm=rs.getString("fitm");String
			  fitt=rs.getString("fitt");Double fitmd=0.0;Double fittd=0.0;String fit="";
			  String autom=rs.getString("autom");String autot=rs.getString("autot");Double
			  automd=0.0;Double autotd=0.0;String auto=""; String
			  mechanicm=rs.getString("mechanicm");String
			  mechanict=rs.getString("mechanict");Double mechanicmd=0.0;Double
			  mechanictd=0.0;String mechanic=""; String
			  foundrym=rs.getString("foundrym");String
			  foundryt=rs.getString("foundryt");Double foundrymd=0.0;Double
			  foundrytd=0.0;String foundry="";
			  
			  
			  
			  
			  
			  
			  
			  if((civm==null || civm.isEmpty()) && (civt==null || civt.isEmpty())) {
			  
			  civ="";
			  
			  }else {
			  
			  if((civm!=null) && (!civm.isEmpty()) && !civm.matches("-")) {
			  
			  civmd=Double.parseDouble(rs.getString("civm"));
			  
			  }
			  
			  
			  if((civt!=null) && (!civt.isEmpty()) && !civt.matches("-")) {
			  
			  civtd=Double.parseDouble(rs.getString("civt"));
			  
			  }
			  
			  
			  civa=civmd+civtd; civ=civa.toString(); }
			  
			  
			  
			  if(civ!=null && !civ.isEmpty() && !civ.equals("-")) {
			  
			  Double mk=civa;
			  
			  if(mk>=g1 && mk<=g2){ a0=+1.0;a1++; }else if(mk>=g3 && mk<g4){ a0=+2.0;a2++;
			  } else if(mk>=g5 && mk<g6){ a0=+3.0;a3++; } else if(mk>=g7 && mk<g8){
			  a0=+4.0;a4++; } else if(mk>=g9 && mk<g10) { a0=+5.0;a5++; }
			  
			  a0t+=a0;
			  
			  a6=a1+a2+a3+a4+a5; a0=a0t/a6; a0v=String.format("%,.4f", a0);
			  
			  
			  
			  }
			  
			  if((hism==null || hism.isEmpty()) && (hist==null || hist.isEmpty()) ) {
			  
			  his="";
			  
			  }else {
			  
			  if((hism!=null) && (!hism.isEmpty()) && !hism.matches("-") ) {
			  
			  hismd=Double.parseDouble(rs.getString("hism"));
			  
			  }
			  
			  
			  if((hist!=null) && (!hist.isEmpty()) && !hist.matches("-")) {
			  
			  histd=Double.parseDouble(rs.getString("hist"));
			  
			  }
			  
			  
			  hisa=hismd+histd; his=hisa.toString(); }
			  
			  
			  
			  if(his!=null && !his.isEmpty() && !his.equals("-")) {
			  
			  Double mk=Double.parseDouble(his);
			  
			  if(mk>=g1 && mk<=g2){ b0=+1.0;b1++; }else if(mk>=g3 && mk<g4){ b0=+2.0;b2++;
			  } else if(mk>=g5 && mk<g6){ b0=+3.0;b3++; } else if(mk>=g7 && mk<g8){
			  b0=+4.0;b4++; } else if(mk>=g9 && mk<g10) { b0=+5.0;b5++; }
			  
			  b0t+=b0;
			  
			  b6=b1+b2+b3+b4+b5; b0=b0t/b6; b0v=String.format("%,.4f", b0);
			  
			  
			  
			  } if((geom==null || geom.isEmpty()) && (geot==null || geot.isEmpty()) ) {
			  
			  geo="";
			  
			  }else {
			  
			  if((geom!=null) && (!geom.isEmpty()) && !geom.matches("-")) {
			  
			  geomd=Double.parseDouble(rs.getString("geom"));
			  
			  }
			  
			  
			  if((geot!=null) && (!geot.isEmpty()) && !geot.matches("-")) {
			  
			  geotd=Double.parseDouble(rs.getString("geot"));
			  
			  }
			  
			  
			  geoa=geomd+geotd; geo=geoa.toString(); }
			  
			  
			  
			  if(geo!=null && !geo.isEmpty() && !geo.equals("-")) {
			  
			  Double mk=Double.parseDouble(geo);
			  
			  if(mk>=g1 && mk<=g2){ c0=+1.0;c1++; }else if(mk>=g3 && mk<g4){ c0=+2.0;c2++;
			  } else if(mk>=g5 && mk<g6){ c0=+3.0;c3++; } else if(mk>=g7 && mk<g8){
			  c0=+4.0;c4++; } else if(mk>=g9 && mk<g10) { c0=+5.0;c5++; }
			  
			  c0t+=c0;
			  
			  c6=c1+c2+c3+c4+c5; c0=c0t/c6; c0v=String.format("%,.4f", c0);
			  
			  
			  
			  } if((biblem==null || biblem.isEmpty()) && (biblet==null || biblet.isEmpty())
			  ) {
			  
			  bible="";
			  
			  }else {
			  
			  if((biblem!=null) && (!biblem.isEmpty()) && !biblem.matches("-")) {
			  
			  biblemd=Double.parseDouble(rs.getString("biblem"));
			  
			  }
			  
			  
			  if((biblet!=null) && (!biblet.isEmpty()) && !biblet.matches("-")) {
			  
			  bibletd=Double.parseDouble(rs.getString("biblet"));
			  
			  }
			  
			  
			  biblea=biblemd+bibletd; bible=biblea.toString(); }
			  
			  
			  
			  if(bible!=null && !bible.isEmpty() && !bible.equals("-")) {
			  
			  Double mk=Double.parseDouble(bible);
			  
			  if(mk>=g1 && mk<=g2){ d0=+1.0;d1++; }else if(mk>=g3 && mk<g4){ d0=+2.0;d2++;
			  } else if(mk>=g5 && mk<g6){ d0=+3.0;d3++; } else if(mk>=g7 && mk<g8){
			  d0=+4.0;d4++; } else if(mk>=g9 && mk<g10) { d0=+5.0;d5++; }
			  
			  d0t+=d0;
			  
			  d6=d1+d2+d3+d4+d5; d0=d0t/d6; d0v=String.format("%,.4f", d0);
			  
			  
			  
			  } if((dinim==null || dinim.isEmpty()) && (dinit==null || dinit.isEmpty()) ) {
			  
			  dini="";
			  
			  }else {
			  
			  if((dinim!=null) && (!dinim.isEmpty()) && !dinim.matches("-")) {
			  
			  dinimd=Double.parseDouble(rs.getString("dinim"));
			  
			  }
			  
			  
			  if((dinit!=null) && (!dinit.isEmpty()) && !dinit.matches("-") ) {
			  
			  dinitd=Double.parseDouble(rs.getString("dinit"));
			  
			  }
			  
			  
			  dinia=dinimd+dinitd; dini=dinia.toString(); }
			  
			  
			  
			  if(dini!=null && !dini.isEmpty() && !dini.equals("-")) {
			  
			  Double mk=Double.parseDouble(dini);
			  
			  if(mk>=g1 && mk<=g2){ e0=+1.0;e1++; }else if(mk>=g3 && mk<g4){ e0=+2.0;e2++;
			  } else if(mk>=g5 && mk<g6){ e0=+3.0;e3++; } else if(mk>=g7 && mk<g8){
			  e0=+4.0;e4++; } else if(mk>=g9 && mk<g10) { e0=+5.0;e5++; }
			  
			  e0t+=e0;
			  
			  e6=e1+e2+e3+e4+e5; e0=e0t/e6; e0v=String.format("%,.4f", e0);
			  
			  
			  
			  } if((artm==null || artm.isEmpty()) && (artt==null || artt.isEmpty()) ) {
			  
			  art="";
			  
			  }else {
			  
			  if((artm!=null) && (!artm.isEmpty()) && !civm.matches("-")) {
			  
			  artmd=Double.parseDouble(rs.getString("artm"));
			  
			  }
			  
			  
			  if((artt!=null) && (!artt.isEmpty()) && !civm.matches("-") ) {
			  
			  arttd=Double.parseDouble(rs.getString("artt"));
			  
			  }
			  
			  
			  arta=artmd+arttd; art=arta.toString(); }
			  
			  
			  
			  if(art!=null && !art.isEmpty() && !art.equals("-")) {
			  
			  Double mk=Double.parseDouble(art);
			  
			  if(mk>=g1 && mk<=g2){ f0=+1.0;f1++; }else if(mk>=g3 && mk<g4){ f0=+2.0;f2++;
			  } else if(mk>=g5 && mk<g6){ f0=+3.0;f3++; } else if(mk>=g7 && mk<g8){
			  f0=+4.0;f4++; } else if(mk>=g9 && mk<g10) { f0=+5.0;f5++; }
			  
			  f0t+=f0;
			  
			  f6=f1+f2+f3+f4+f5; f0=f0t/f6; f0v=String.format("%,.4f", f0);
			  
			  
			  
			  } if((musicm==null || musicm.isEmpty()) && (musict==null || musict.isEmpty())
			  ) {
			  
			  music="";
			  
			  }else {
			  
			  if((musicm!=null) && (!musicm.isEmpty()) && !musicm.matches("-")) {
			  
			  musicmd=Double.parseDouble(rs.getString("musicm"));
			  
			  }
			  
			  
			  if((musict!=null) && (!musict.isEmpty()) && !musict.matches("-")) {
			  
			  musictd=Double.parseDouble(rs.getString("musict"));
			  
			  }
			  
			  
			  musica=musicmd+musictd; music=musica.toString(); }
			  
			  
			  
			  if(music!=null && !music.isEmpty() && !music.equals("-")) {
			  
			  Double mk=Double.parseDouble(music);
			  
			  if(mk>=g1 && mk<=g2){ h0=+1.0;h1++; }else if(mk>=g3 && mk<g4){ h0=+2.0;h2++;
			  } else if(mk>=g5 && mk<g6){ h0=+3.0;h3++; } else if(mk>=g7 && mk<g8){
			  h0=+4.0;h4++; } else if(mk>=g9 && mk<g10) { h0=+5.0;h5++; }
			  
			  h0t+=h0;
			  
			  h6=h1+h2+h3+h4+h5; h0=h0t/h6; h0v=String.format("%,.4f", h0);
			  
			  
			  
			  } if((edum==null || edum.isEmpty()) && (edut==null || edut.isEmpty()) ) {
			  
			  edu="";
			  
			  }else {
			  
			  if((edum!=null) && (!edum.isEmpty()) && !edum.matches("-") ) {
			  
			  edumd=Double.parseDouble(rs.getString("edum"));
			  
			  }
			  
			  
			  if((edut!=null) && (!edut.isEmpty()) && !edut.matches("-")) {
			  
			  edutd=Double.parseDouble(rs.getString("edut"));
			  
			  }
			  
			  
			  edua=edumd+edutd; edu=edua.toString(); }
			  
			  
			  
			  if(edu!=null && !edu.isEmpty() && !edu.equals("-")) {
			  
			  Double mk=Double.parseDouble(edu);
			  
			  if(mk>=g1 && mk<=g2){ i0=+1.0;i1++; }else if(mk>=g3 && mk<g4){ i0=+2.0;i2++;
			  } else if(mk>=g5 && mk<g6){ i0=+3.0;i3++; } else if(mk>=g7 && mk<g8){
			  i0=+4.0;i4++; } else if(mk>=g9 && mk<g10) { i0=+5.0;i5++; }
			  
			  i0t+=i0;
			  
			  i6=i1+i2+i3+i4+i5; i0=i0t/i6; i0v=String.format("%,.4f", i0);
			  
			  
			  
			  } if((kiswm==null || kiswm.isEmpty()) && (kiswt==null || kiswt.isEmpty()) ) {
			  
			  kisw="";
			  
			  }else {
			  
			  if((kiswm!=null) && (!kiswm.isEmpty()) && !kiswm.matches("-") ) {
			  
			  kiswmd=Double.parseDouble(rs.getString("kiswm"));
			  
			  }
			  
			  
			  if((kiswt!=null) && (!kiswt.isEmpty()) && !kiswt.matches("-") ) {
			  
			  kiswtd=Double.parseDouble(rs.getString("kiswt"));
			  
			  }
			  
			  
			  kiswa=kiswmd+kiswtd; kisw=kiswa.toString(); }
			  
			  
			  
			  if(kisw!=null && !kisw.isEmpty() && !kisw.equals("-")) {
			  
			  Double mk=Double.parseDouble(kisw);
			  
			  if(mk>=g1 && mk<=g2){ j0=+1.0;j1++; }else if(mk>=g3 && mk<g4){ j0=+2.0;j2++;
			  } else if(mk>=g5 && mk<g6){ j0=+3.0;j3++; } else if(mk>=g7 && mk<g8){
			  j0=+4.0;j4++; } else if(mk>=g9 && mk<g10) { j0=+5.0;j5++; }
			  
			  j0t+=j0;
			  
			  j6=j1+j2+j3+j4+j5; j0=j0t/j6; j0v=String.format("%,.4f", j0);
			  
			  
			  
			  } if((engm==null || engm.isEmpty()) && (engt==null || engt.isEmpty()) ) {
			  
			  eng="";
			  
			  }else {
			  
			  if((engm!=null) && (!engm.isEmpty()) && !engm.matches("-") ) {
			  
			  engmd=Double.parseDouble(rs.getString("engm"));
			  
			  }
			  
			  
			  if((engt!=null) && (!engt.isEmpty()) && !engt.matches("-")) {
			  
			  engtd=Double.parseDouble(rs.getString("engt"));
			  
			  }
			  
			  
			  enga=engmd+engtd; eng=enga.toString(); }
			  
			  
			  
			  if(eng!=null && !eng.isEmpty() && !eng.equals("-")) {
			  
			  Double mk=Double.parseDouble(eng);
			  
			  if(mk>=g1 && mk<=g2){ k0=+1.0;k1++; }else if(mk>=g3 && mk<g4){ k0=+2.0;k2++;
			  } else if(mk>=g5 && mk<g6){ k0=+3.0;k3++; } else if(mk>=g7 && mk<g8){
			  k0=+4.0;k4++; } else if(mk>=g9 && mk<g10) { k0=+5.0;k5++; }
			  
			  k0t+=k0;
			  
			  k6=k1+k2+k3+k4+k5; k0=k0t/k6; k0v=String.format("%,.4f", k0);
			  
			  
			  
			  } if((frem==null || frem.isEmpty()) && (fret==null || fret.isEmpty()) ) {
			  
			  fre="";
			  
			  }else {
			  
			  if((frem!=null) && (!frem.isEmpty()) && !frem.matches("-")) {
			  
			  fremd=Double.parseDouble(rs.getString("frem"));
			  
			  }
			  
			  
			  if((fret!=null) && (!fret.isEmpty()) && !fret.matches("-")) {
			  
			  fretd=Double.parseDouble(rs.getString("fret"));
			  
			  }
			  
			  
			  frea=fremd+fretd; fre=frea.toString(); }
			  
			  
			  
			  if(fre!=null && !fre.isEmpty() && !fre.equals("-")) {
			  
			  Double mk=Double.parseDouble(fre);
			  
			  if(mk>=g1 && mk<=g2){ l0=+1.0;l1++; }else if(mk>=g3 && mk<g4){ l0=+2.0;l2++;
			  } else if(mk>=g5 && mk<g6){ l0=+3.0;l3++; } else if(mk>=g7 && mk<g8){
			  l0=+4.0;l4++; } else if(mk>=g9 && mk<g10) { l0=+5.0;l5++; }
			  
			  l0t+=l0;
			  
			  l6=l1+l2+l3+l4+l5; l0=l0t/l6; l0v=String.format("%,.4f", l0);
			  
			  
			  
			  } if((litm==null || litm.isEmpty()) && (litt==null || litt.isEmpty()) ) {
			  
			  lit="";
			  
			  }else {
			  
			  if((litm!=null) && (!litm.isEmpty()) && !litm.matches("-") ) {
			  
			  litmd=Double.parseDouble(rs.getString("litm"));
			  
			  }
			  
			  
			  if((litt!=null) && (!litt.isEmpty()) && !litt.matches("-")) {
			  
			  littd=Double.parseDouble(rs.getString("litt"));
			  
			  }
			  
			  
			  lita=litmd+littd; lit=lita.toString(); }
			  
			  
			  
			  if(lit!=null && !lit.isEmpty() && !lit.equals("-")) {
			  
			  Double mk=Double.parseDouble(lit);
			  
			  if(mk>=g1 && mk<=g2){ o0=+1.0;o1++; }else if(mk>=g3 && mk<g4){ o0=+2.0;o2++;
			  } else if(mk>=g5 && mk<g6){ o0=+3.0;o3++; } else if(mk>=g7 && mk<g8){
			  o0=+4.0;o4++; } else if(mk>=g9 && mk<g10) { o0=+5.0;o5++; }
			  
			  o0t+=o0;
			  
			  o6=o1+o2+o3+o4+o5; o0=o0t/o6; o0v=String.format("%,.4f", o0);
			  
			  
			  
			  } if((aram==null || aram.isEmpty()) && (arat==null || arat.isEmpty()) ) {
			  
			  ara="";
			  
			  }else {
			  
			  if((aram!=null) && (!aram.isEmpty()) && !aram.matches("-") ) {
			  
			  aramd=Double.parseDouble(rs.getString("aram"));
			  
			  }
			  
			  
			  if((arat!=null) && (!arat.isEmpty()) && !arat.matches("-")) {
			  
			  aratd=Double.parseDouble(rs.getString("arat"));
			  
			  }
			  
			  
			  araa=aramd+aratd; ara=araa.toString(); }
			  
			  
			  
			  if(ara!=null && !ara.isEmpty() && !ara.equals("-")) {
			  
			  Double mk=Double.parseDouble(ara);
			  
			  if(mk>=g1 && mk<=g2){ p0=+1.0;p1++; }else if(mk>=g3 && mk<g4){ p0=+2.0;p2++;
			  } else if(mk>=g5 && mk<g6){ p0=+3.0;p3++; } else if(mk>=g7 && mk<g8){
			  p0=+4.0;p4++; } else if(mk>=g9 && mk<g10) { p0=+5.0;p5++; }
			  
			  p0t+=p0;
			  
			  p6=p1+p2+p3+p4+p5; p0=p0t/p6; p0v=String.format("%,.4f", p0);
			  
			  
			  
			  } if((phym==null || phym.isEmpty()) && (phyt==null || phyt.isEmpty()) ) {
			  
			  phy="";
			  
			  }else {
			  
			  if((phym!=null) && (!phym.isEmpty()) && !phym.matches("-") ) {
			  
			  phymd=Double.parseDouble(rs.getString("phym"));
			  
			  }
			  
			  
			  if((phyt!=null) && (!phyt.isEmpty()) && !phyt.matches("-") ) {
			  
			  phytd=Double.parseDouble(rs.getString("phyt"));
			  
			  }
			  
			  
			  phya=phymd+phytd; phy=phya.toString(); }
			  
			  
			  
			  if(phy!=null && !phy.isEmpty() && !phy.equals("-")) {
			  
			  Double mk=Double.parseDouble(phy);
			  
			  if(mk>=g1 && mk<=g2){ q0=+1.0;q1++; }else if(mk>=g3 && mk<g4){ q0=+2.0;q2++;
			  } else if(mk>=g5 && mk<g6){ q0=+3.0;q3++; } else if(mk>=g7 && mk<g8){
			  q0=+4.0;q4++; } else if(mk>=g9 && mk<g10) { q0=+5.0;q5++; }
			  
			  q0t+=q0;
			  
			  q6=q1+q2+q3+q4+q5; q0=q0t/q6; q0v=String.format("%,.4f", q0);
			  
			  
			  
			  } if((chem==null || chem.isEmpty()) && (chet==null || chet.isEmpty()) ) {
			  
			  che="";
			  
			  }else {
			  
			  if((chem!=null) && (!chem.isEmpty()) && !chem.matches("-")) {
			  
			  chemd=Double.parseDouble(rs.getString("chem"));
			  
			  }
			  
			  
			  if((chet!=null) && (!chet.isEmpty()) && !chet.matches("-")) {
			  
			  chetd=Double.parseDouble(rs.getString("chet"));
			  
			  }
			  
			  
			  chea=chemd+chetd; che=chea.toString(); }
			  
			  
			  
			  if(che!=null && !che.isEmpty() && !che.equals("-")) {
			  
			  Double mk=Double.parseDouble(che);
			  
			  if(mk>=g1 && mk<=g2){ r0=+1.0;r1++; }else if(mk>=g3 && mk<g4){ r0=+2.0;r2++;
			  } else if(mk>=g5 && mk<g6){ r0=+3.0;r3++; } else if(mk>=g7 && mk<g8){
			  r0=+4.0;r4++; } else if(mk>=g9 && mk<g10) { r0=+5.0;r5++; }
			  
			  r0t+=r0;
			  
			  r6=r1+r2+r3+r4+r5; r0=r0t/r6; r0v=String.format("%,.4f", r0);
			  
			  
			  
			  } if((biom==null || biom.isEmpty()) && (biot==null || biot.isEmpty()) ) {
			  
			  bio="";
			  
			  }else {
			  
			  if((biom!=null) && (!biom.isEmpty()) && !biom.matches("-")) {
			  
			  biomd=Double.parseDouble(rs.getString("biom"));
			  
			  }
			  
			  
			  if((biot!=null) && (!biot.isEmpty()) && !biot.matches("-") ) {
			  
			  biotd=Double.parseDouble(rs.getString("biot"));
			  
			  }
			  
			  
			  bioa=biomd+biotd; bio=bioa.toString(); }
			  
			  
			  
			  if(bio!=null && !bio.isEmpty() && !bio.equals("-")) {
			  
			  Double mk=Double.parseDouble(bio);
			  
			  if(mk>=g1 && mk<=g2){ s0=+1.0;s1++; }else if(mk>=g3 && mk<g4){ s0=+2.0;s2++;
			  } else if(mk>=g5 && mk<g6){ s0=+3.0;s3++; } else if(mk>=g7 && mk<g8){
			  s0=+4.0;s4++; } else if(mk>=g9 && mk<g10) { s0=+5.0;s5++; }
			  
			  s0t+=s0;
			  
			  s6=s1+s2+s3+s4+s5; s0=s0t/s6; s0v=String.format("%,.4f", s0);
			  
			  
			  
			  } if((agrim==null || agrim.isEmpty()) && (agrit==null || agrit.isEmpty()) ) {
			  
			  agri="";
			  
			  }else {
			  
			  if((agrim!=null) && (!agrim.isEmpty()) && !agrim.matches("-")) {
			  
			  agrimd=Double.parseDouble(rs.getString("agrim"));
			  
			  }
			  
			  
			  if((agrit!=null) && (!agrit.isEmpty()) && !agrit.matches("-") ) {
			  
			  agritd=Double.parseDouble(rs.getString("agrit"));
			  
			  }
			  
			  
			  agria=agrimd+agritd; agri=agria.toString(); }
			  
			  
			  
			  if(agri!=null && !agri.isEmpty() && !agri.equals("-")) {
			  
			  Double mk=Double.parseDouble(agri);
			  
			  if(mk>=g1 && mk<=g2){ t0=+1.0;t1++; }else if(mk>=g3 && mk<g4){ t0=+2.0;t2++;
			  } else if(mk>=g5 && mk<g6){ t0=+3.0;t3++; } else if(mk>=g7 && mk<g8){
			  t0=+4.0;t4++; } else if(mk>=g9 && mk<g10) { t0=+5.0;t5++; }
			  
			  t0t+=t0;
			  
			  t6=t1+t2+t3+t4+t5; t0=t0t/t6; t0v=String.format("%,.4f", t0);
			  
			  
			  
			  } if((itm==null || itm.isEmpty()) && (itt==null || itt.isEmpty()) ) {
			  
			  it="";
			  
			  }else {
			  
			  if((itm!=null) && (!itm.isEmpty()) && !itm.matches("-")) {
			  
			  itmd=Double.parseDouble(rs.getString("itm"));
			  
			  }
			  
			  
			  if((itt!=null) && (!itt.isEmpty()) && !itt.matches("-")) {
			  
			  ittd=Double.parseDouble(rs.getString("itt"));
			  
			  }
			  
			  
			  ita=itmd+ittd; it=ita.toString(); }
			  
			  
			  
			  if(it!=null && !it.isEmpty() && !it.equals("-")) {
			  
			  Double mk=Double.parseDouble(it);
			  
			  if(mk>=g1 && mk<=g2){ u0=+1.0;u1++; }else if(mk>=g3 && mk<g4){ u0=+2.0;u2++;
			  } else if(mk>=g5 && mk<g6){ u0=+3.0;u3++; } else if(mk>=g7 && mk<g8){
			  u0=+4.0;u4++; } else if(mk>=g9 && mk<g10) { u0=+5.0;u5++; }
			  
			  u0t+=u0;
			  
			  u6=u1+u2+u3+u4+u5; u0=u0t/u6; u0v=String.format("%,.4f", u0);
			  
			  
			  
			  } if((mathm==null || mathm.isEmpty()) && (matht==null || matht.isEmpty()) ) {
			  
			  math="";
			  
			  }else {
			  
			  if((mathm!=null) && (!mathm.isEmpty()) && !mathm.matches("-")) {
			  
			  mathmd=Double.parseDouble(rs.getString("mathm"));
			  
			  }
			  
			  
			  if((matht!=null) && (!matht.isEmpty()) && !matht.matches("-")) {
			  
			  mathtd=Double.parseDouble(rs.getString("matht"));
			  
			  }
			  
			  
			  matha=mathmd+mathtd; math=matha.toString(); }
			  
			  
			  
			  if(math!=null && !math.isEmpty() && !math.equals("-")) {
			  
			  Double mk=Double.parseDouble(math);
			  
			  if(mk>=g1 && mk<=g2){ v0=+1.0;v1++; }else if(mk>=g3 && mk<g4){ v0=+2.0;v2++;
			  } else if(mk>=g5 && mk<g6){ v0=+3.0;v3++; } else if(mk>=g7 && mk<g8){
			  v0=+4.0;v4++; } else if(mk>=g9 && mk<g10) { v0=+5.0;v5++; }
			  
			  v0t+=v0;
			  
			  v6=v1+v2+v3+v4+v5; v0=v0t/v6; v0v=String.format("%,.4f", v0);
			  
			  
			  
			  } if((admm==null || admm.isEmpty()) && (admt==null || admt.isEmpty()) ) {
			  
			  adm="";
			  
			  }else {
			  
			  if((admm!=null) && (!admm.isEmpty()) && !admm.matches("-")) {
			  
			  admmd=Double.parseDouble(rs.getString("admm"));
			  
			  }
			  
			  
			  if((admt!=null) && (!admt.isEmpty()) && !admt.matches("-") ) {
			  
			  admtd=Double.parseDouble(rs.getString("admt"));
			  
			  }
			  
			  
			  adma=admmd+admtd; adm=adma.toString(); }
			  
			  
			  
			  if(adm!=null && !adm.isEmpty() && !adm.equals("-")) {
			  
			  Double mk=Double.parseDouble(adm);
			  
			  if(mk>=g1 && mk<=g2){ w0=+1.0;w1++; }else if(mk>=g3 && mk<g4){ w0=+2.0;w2++;
			  } else if(mk>=g5 && mk<g6){ w0=+3.0;w3++; } else if(mk>=g7 && mk<g8){
			  w0=+4.0;w4++; } else if(mk>=g9 && mk<g10) { w0=+5.0;w5++; }
			  
			  w0t+=w0;
			  
			  w6=w1+w2+w3+w4+w5; w0=w0t/w6; w0v=String.format("%,.4f", w0);
			  
			  
			  
			  } if((foodm==null || foodm.isEmpty()) && (foodt==null || foodt.isEmpty()) ) {
			  
			  food="";
			  
			  }else {
			  
			  if((foodm!=null) && (!foodm.isEmpty()) && !foodm.matches("-")) {
			  
			  foodmd=Double.parseDouble(rs.getString("foodm"));
			  
			  }
			  
			  
			  if((foodt!=null) && (!foodt.isEmpty()) && !foodt.matches("-")) {
			  
			  foodtd=Double.parseDouble(rs.getString("foodt"));
			  
			  }
			  
			  
			  fooda=foodmd+foodtd; food=fooda.toString(); }
			  
			  
			  
			  if(food!=null && !food.isEmpty() && !food.equals("-")) {
			  
			  Double mk=Double.parseDouble(food);
			  
			  if(mk>=g1 && mk<=g2){ x0=+1.0;x1++; }else if(mk>=g3 && mk<g4){ x0=+2.0;x2++;
			  } else if(mk>=g5 && mk<g6){ x0=+3.0;x3++; } else if(mk>=g7 && mk<g8){
			  x0=+4.0;x4++; } else if(mk>=g9 && mk<g10) { x0=+5.0;x5++; }
			  
			  x0t+=x0;
			  
			  x6=x1+x2+x3+x4+x5; x0=x0t/x6; x0v=String.format("%,.4f", x0);
			  
			  
			  
			  } if((textilem==null || textilem.isEmpty()) && (textilet==null ||
			  textilet.isEmpty()) ) {
			  
			  textile="";
			  
			  }else {
			  
			  if((textilem!=null) && (!textilem.isEmpty()) && !textilem.matches("-")) {
			  
			  textilemd=Double.parseDouble(rs.getString("textilem"));
			  
			  }
			  
			  
			  if((textilet!=null) && (!textilet.isEmpty()) && !textilet.matches("-")) {
			  
			  textiletd=Double.parseDouble(rs.getString("textilet"));
			  
			  }
			  
			  
			  textilea=textilemd+textiletd; textile=textilea.toString(); }
			  
			  
			  
			  if(textile!=null && !textile.isEmpty() && !textile.equals("-")) {
			  
			  Double mk=Double.parseDouble(textile);
			  
			  if(mk>=g1 && mk<=g2){ y0=+1.0;y1++; }else if(mk>=g3 && mk<g4){ y0=+2.0;y2++;
			  } else if(mk>=g5 && mk<g6){ y0=+3.0;y3++; } else if(mk>=g7 && mk<g8){
			  y0=+4.0;y4++; } else if(mk>=g9 && mk<g10) { y0=+5.0;y5++; }
			  
			  y0t+=y0;
			  
			  y6=y1+y2+y3+y4+y5; y0=y0t/y6; y0v=String.format("%,.4f", y0);
			  
			  
			  
			  } if((comm==null || comm.isEmpty()) && (comt==null || comt.isEmpty()) ) {
			  
			  com="";
			  
			  }else {
			  
			  if((comm!=null) && (!comm.isEmpty()) && !comm.matches("-")) {
			  
			  commd=Double.parseDouble(rs.getString("comm"));
			  
			  }
			  
			  
			  if((comt!=null) && (!comt.isEmpty()) && !comt.matches("-") ) {
			  
			  comtd=Double.parseDouble(rs.getString("comt"));
			  
			  }
			  
			  
			  coma=commd+comtd; com=coma.toString(); }
			  
			  
			  
			  if(com!=null && !com.isEmpty() && !com.equals("-")) {
			  
			  Double mk=Double.parseDouble(com);
			  
			  if(mk>=g1 && mk<=g2){ z0=+1.0;z1++; }else if(mk>=g3 && mk<g4){ z0=+2.0;z2++;
			  } else if(mk>=g5 && mk<g6){ z0=+3.0;z3++; } else if(mk>=g7 && mk<g8){
			  z0=+4.0;z4++; } else if(mk>=g9 && mk<g10) { z0=+5.0;z5++; }
			  
			  z0t+=z0;
			  
			  z6=z1+z2+z3+z4+z5; z0=z0t/z6; z0v=String.format("%,.4f", z0);
			  
			  
			  
			  } if((bookm==null || bookm.isEmpty()) && (bookt==null || bookt.isEmpty()) ) {
			  
			  book="";
			  
			  }else {
			  
			  if((bookm!=null) && (!bookm.isEmpty()) && !bookm.matches("-")) {
			  
			  bookmd=Double.parseDouble(rs.getString("bookm"));
			  
			  }
			  
			  
			  if((bookt!=null) && (!bookt.isEmpty()) && !bookt.matches("-")) {
			  
			  booktd=Double.parseDouble(rs.getString("bookt"));
			  
			  }
			  
			  
			  booka=bookmd+booktd; book=booka.toString(); }
			  
			  
			  
			  if(book!=null && !book.isEmpty() && !book.equals("-")) {
			  
			  Double mk=Double.parseDouble(book);
			  
			  if(mk>=g1 && mk<=g2){ aa0=+1.0;aa1++; }else if(mk>=g3 && mk<g4){
			  aa0=+2.0;aa2++; } else if(mk>=g5 && mk<g6){ aa0=+3.0;aa3++; } else if(mk>=g7
			  && mk<g8){ aa0=+4.0;aa4++; } else if(mk>=g9 && mk<g10) { aa0=+5.0;aa5++; }
			  
			  aa0t+=aa0;
			  
			  aa6=aa1+aa2+aa3+aa4+aa5; aa0=aa0t/aa6; aa0v=String.format("%,.4f", aa0);
			  
			  
			  
			  } if((buildm==null || buildm.isEmpty()) && (buildt==null || buildt.isEmpty())
			  ) {
			  
			  build="";
			  
			  }else {
			  
			  if((buildm!=null) && (!buildm.isEmpty()) && !buildm.matches("-")) {
			  
			  buildmd=Double.parseDouble(rs.getString("buildm"));
			  
			  }
			  
			  
			  if((buildt!=null) && (!buildt.isEmpty()) && !buildt.matches("-") ) {
			  
			  buildtd=Double.parseDouble(rs.getString("buildt"));
			  
			  }
			  
			  
			  builda=buildmd+buildtd; build=builda.toString(); }
			  
			  
			  
			  if(build!=null && !build.isEmpty() && !build.equals("-")) {
			  
			  Double mk=Double.parseDouble(build);
			  
			  if(mk>=g1 && mk<=g2){ bb0=+1.0;bb1++; }else if(mk>=g3 && mk<g4){
			  bb0=+2.0;bb2++; } else if(mk>=g5 && mk<g6){ bb0=+3.0;bb3++; } else if(mk>=g7
			  && mk<g8){ bb0=+4.0;bb4++; } else if(mk>=g9 && mk<g10) { bb0=+5.0;bb5++; }
			  
			  bb0t+=bb0;
			  
			  bb6=bb1+bb2+bb3+bb4+bb5; bb0=bb0t/bb6; bb0v=String.format("%,.4f", bb0);
			  
			  
			  
			  } if((archm==null || archm.isEmpty()) && (archt==null || archt.isEmpty()) ) {
			  
			  arch="";
			  
			  }else {
			  
			  if((archm!=null) && (!archm.isEmpty()) && !archm.matches("-")) {
			  
			  archmd=Double.parseDouble(rs.getString("archm"));
			  
			  }
			  
			  
			  if((archt!=null) && (!archt.isEmpty()) && !archt.matches("-")) {
			  
			  archtd=Double.parseDouble(rs.getString("archt"));
			  
			  }
			  
			  
			  archa=archmd+archtd; arch=archa.toString(); }
			  
			  
			  
			  if(arch!=null && !arch.isEmpty() && !arch.equals("-")) {
			  
			  Double mk=Double.parseDouble(arch);
			  
			  if(mk>=g1 && mk<=g2){ cc0=+1.0;cc1++; }else if(mk>=g3 && mk<g4){
			  cc0=+2.0;cc2++; } else if(mk>=g5 && mk<g6){ cc0=+3.0;cc3++; } else if(mk>=g7
			  && mk<g8){ cc0=+4.0;cc4++; } else if(mk>=g9 && mk<g10) { cc0=+5.0;cc5++; }
			  
			  cc0t+=cc0;
			  
			  cc6=cc1+cc2+cc3+cc4+cc5; cc0=cc0t/cc6; cc0v=String.format("%,.4f", cc0);
			  
			  
			  
			  } if((surveym==null || surveym.isEmpty()) && (surveyt==null ||
			  surveyt.isEmpty()) ) {
			  
			  survey="";
			  
			  }else {
			  
			  if((surveym!=null) && (!surveym.isEmpty()) && !surveym.matches("-")) {
			  
			  surveymd=Double.parseDouble(rs.getString("surveym"));
			  
			  }
			  
			  
			  if((surveyt!=null) && (!surveyt.isEmpty()) && !surveyt.matches("-") ) {
			  
			  surveytd=Double.parseDouble(rs.getString("surveyt"));
			  
			  }
			  
			  
			  surveya=surveymd+surveytd; survey=surveya.toString(); }
			  
			  
			  
			  if(survey!=null && !survey.isEmpty() && !survey.equals("-")) {
			  
			  Double mk=Double.parseDouble(survey);
			  
			  if(mk>=g1 && mk<=g2){ dd0=+1.0;dd1++; }else if(mk>=g3 && mk<g4){
			  dd0=+2.0;dd2++; } else if(mk>=g5 && mk<g6){ dd0=+3.0;dd3++; } else if(mk>=g7
			  && mk<g8){ dd0=+4.0;dd4++; } else if(mk>=g9 && mk<g10) { dd0=+5.0;dd5++; }
			  
			  dd0t+=dd0;
			  
			  dd6=dd1+dd2+dd3+dd4+dd5; dd0=dd0t/dd6; dd0v=String.format("%,.4f", dd0);
			  
			  
			  
			  } if((carpm==null || carpm.isEmpty()) && (carpt==null || carpt.isEmpty()) ) {
			  
			  carp="";
			  
			  }else {
			  
			  if((carpm!=null) && (!carpm.isEmpty()) && !carpm.matches("-")) {
			  
			  carpmd=Double.parseDouble(rs.getString("carpm"));
			  
			  }
			  
			  
			  if((carpt!=null) && (!carpt.isEmpty()) && !carpt.matches("-")) {
			  
			  carptd=Double.parseDouble(rs.getString("carpt"));
			  
			  }
			  
			  
			  carpa=carpmd+carptd; carp=carpa.toString(); }
			  
			  
			  
			  if(carp!=null && !carp.isEmpty() && !carp.equals("-")) {
			  
			  Double mk=Double.parseDouble(carp);
			  
			  if(mk>=g1 && mk<=g2){ ee0=+1.0;ee1++; }else if(mk>=g3 && mk<g4){
			  ee0=+2.0;ee2++; } else if(mk>=g5 && mk<g6){ ee0=+3.0;ee3++; } else if(mk>=g7
			  && mk<g8){ ee0=+4.0;ee4++; } else if(mk>=g9 && mk<g10) { ee0=+5.0;ee5++; }
			  
			  ee0t+=ee0;
			  
			  ee6=ee1+ee2+ee3+ee4+ee5; ee0=ee0t/ee6; ee0v=String.format("%,.4f", ee0);
			  
			  
			  
			  } if((brickm==null || brickm.isEmpty()) && (brickt==null || brickt.isEmpty())
			  ) {
			  
			  brick="";
			  
			  }else {
			  
			  if((brickm!=null) && (!brickm.isEmpty()) && !brickm.matches("-") ) {
			  
			  brickmd=Double.parseDouble(rs.getString("brickm"));
			  
			  }
			  
			  
			  if((brickt!=null) && (!brickt.isEmpty()) && !brickt.matches("-") ) {
			  
			  bricktd=Double.parseDouble(rs.getString("brickt"));
			  
			  }
			  
			  
			  bricka=brickmd+bricktd; brick=bricka.toString(); }
			  
			  
			  
			  if(brick!=null && !brick.isEmpty() && !brick.equals("-")) {
			  
			  Double mk=Double.parseDouble(brick);
			  
			  if(mk>=g1 && mk<=g2){ ff0=+1.0;ff1++; }else if(mk>=g3 && mk<g4){
			  ff0=+2.0;ff2++; } else if(mk>=g5 && mk<g6){ ff0=+3.0;ff3++; } else if(mk>=g7
			  && mk<g8){ ff0=+4.0;ff4++; } else if(mk>=g9 && mk<g10) { ff0=+5.0;ff5++; }
			  
			  ff0t+=ff0;
			  
			  ff6=ff1+ff2+ff3+ff4+ff5; ff0=ff0t/ff6; ff0v=String.format("%,.4f", ff0);
			  
			  
			  
			  } if((paintm==null || paintm.isEmpty()) && (paintt==null || paintt.isEmpty())
			  ) {
			  
			  paint="";
			  
			  }else {
			  
			  if((paintm!=null) && (!paintm.isEmpty()) && !paintm.matches("-") ) {
			  
			  paintmd=Double.parseDouble(rs.getString("paintm"));
			  
			  }
			  
			  
			  if((paintt!=null) && (!paintt.isEmpty()) && !paintt.matches("-") ) {
			  
			  painttd=Double.parseDouble(rs.getString("paintt"));
			  
			  }
			  
			  
			  painta=paintmd+painttd; paint=painta.toString(); }
			  
			  
			  
			  if(paint!=null && !paint.isEmpty() && !paint.equals("-")) {
			  
			  Double mk=Double.parseDouble(paint);
			  
			  if(mk>=g1 && mk<=g2){ gg0=+1.0;gg1++; }else if(mk>=g3 && mk<g4){
			  gg0=+2.0;gg2++; } else if(mk>=g5 && mk<g6){ gg0=+3.0;gg3++; } else if(mk>=g7
			  && mk<g8){ gg0=+4.0;gg4++; } else if(mk>=g9 && mk<g10) { gg0=+5.0;gg5++; }
			  
			  gg0t+=gg0;
			  
			  gg6=gg1+gg2+gg3+gg4+gg5; gg0=gg0t/gg6; gg0v=String.format("%,.4f", gg0);
			  
			  
			  
			  } if((plumbm==null || plumbm.isEmpty()) && (plumbt==null || plumbt.isEmpty())
			  ) {
			  
			  plumb="";
			  
			  }else {
			  
			  if((plumbm!=null) && (!plumbm.isEmpty()) && !plumbm.matches("-")) {
			  
			  plumbmd=Double.parseDouble(rs.getString("plumbm"));
			  
			  }
			  
			  
			  if((plumbt!=null) && (!plumbt.isEmpty()) && !plumbt.matches("-")) {
			  
			  plumbtd=Double.parseDouble(rs.getString("plumbt"));
			  
			  }
			  
			  
			  plumba=plumbmd+plumbtd; plumb=plumba.toString(); }
			  
			  
			  
			  if(plumb!=null && !plumb.isEmpty() && !plumb.equals("-")) {
			  
			  Double mk=Double.parseDouble(plumb);
			  
			  if(mk>=g1 && mk<=g2){ hh0=+1.0;hh1++; }else if(mk>=g3 && mk<g4){
			  hh0=+2.0;hh2++; } else if(mk>=g5 && mk<g6){ hh0=+3.0;hh3++; } else if(mk>=g7
			  && mk<g8){ hh0=+4.0;hh4++; } else if(mk>=g9 && mk<g10) { hh0=+5.0;hh5++; }
			  
			  hh0t+=hh0;
			  
			  hh6=hh1+hh2+hh3+hh4+hh5; hh0=hh0t/hh6; hh0v=String.format("%,.4f", hh0);
			  
			  
			  
			  } if((electm==null || electm.isEmpty()) && (electt==null || electt.isEmpty())
			  ) {
			  
			  elect="";
			  
			  }else {
			  
			  if((electm!=null) && (!electm.isEmpty()) && !electm.matches("-")) {
			  
			  electmd=Double.parseDouble(rs.getString("electm"));
			  
			  }
			  
			  
			  if((electt!=null) && (!electt.isEmpty()) && !electt.matches("-")) {
			  
			  electtd=Double.parseDouble(rs.getString("electt"));
			  
			  }
			  
			  
			  electa=electmd+electtd; elect=electa.toString(); }
			  
			  
			  
			  if(elect!=null && !elect.isEmpty() && !elect.equals("-")) {
			  
			  Double mk=Double.parseDouble(elect);
			  
			  if(mk>=g1 && mk<=g2){ ii0=+1.0;ii1++; }else if(mk>=g3 && mk<g4){
			  ii0=+2.0;ii2++; } else if(mk>=g5 && mk<g6){ ii0=+3.0;ii3++; } else if(mk>=g7
			  && mk<g8){ ii0=+4.0;ii4++; } else if(mk>=g9 && mk<g10) { ii0=+5.0;ii5++; }
			  
			  ii0t+=ii0;
			  
			  ii6=ii1+ii2+ii3+ii4+ii5; ii0=ii0t/ii6; ii0v=String.format("%,.4f", ii0);
			  
			  
			  
			  } if((engineerm==null || engineerm.isEmpty()) && (engineert==null ||
			  engineert.isEmpty()) ) {
			  
			  engineer="";
			  
			  }else {
			  
			  if((engineerm!=null) && (!engineerm.isEmpty()) && !engineerm.matches("-")) {
			  
			  engineermd=Double.parseDouble(rs.getString("engineerm"));
			  
			  }
			  
			  
			  if((engineert!=null) && (!engineert.isEmpty()) && !engineert.matches("-") ) {
			  
			  engineertd=Double.parseDouble(rs.getString("engineert"));
			  
			  }
			  
			  
			  engineera=engineermd+engineertd; engineer=engineera.toString(); }
			  
			  
			  
			  if(engineer!=null && !engineer.isEmpty() && !engineer.equals("-")) {
			  
			  Double mk=Double.parseDouble(engineer);
			  
			  if(mk>=g1 && mk<=g2){ jj0=+1.0;jj1++; }else if(mk>=g3 && mk<g4){
			  jj0=+2.0;jj2++; } else if(mk>=g5 && mk<g6){ jj0=+3.0;jj3++; } else if(mk>=g7
			  && mk<g8){ jj0=+4.0;jj4++; } else if(mk>=g9 && mk<g10) { jj0=+5.0;jj5++; }
			  
			  jj0t+=jj0;
			  
			  jj6=jj1+jj2+jj3+jj4+jj5; jj0=jj0t/jj6; jj0v=String.format("%,.4f", jj0);
			  
			  
			  
			  } if((radiom==null || radiom.isEmpty()) && (radiot==null || radiot.isEmpty())
			  ) {
			  
			  radio="";
			  
			  }else {
			  
			  if((radiom!=null) && (!radiom.isEmpty()) && !radiom.matches("-")) {
			  
			  radiomd=Double.parseDouble(rs.getString("radiom"));
			  
			  }
			  
			  
			  if((radiot!=null) && (!radiot.isEmpty()) && !radiot.matches("-")) {
			  
			  radiotd=Double.parseDouble(rs.getString("radiot"));
			  
			  }
			  
			  
			  radioa=radiomd+radiotd; radio=radioa.toString(); }
			  
			  
			  
			  if(radio!=null && !radio.isEmpty() && !radio.equals("-")) {
			  
			  Double mk=Double.parseDouble(radio);
			  
			  if(mk>=g1 && mk<=g2){ kk0=+1.0;kk1++; }else if(mk>=g3 && mk<g4){
			  kk0=+2.0;kk2++; } else if(mk>=g5 && mk<g6){ kk0=+3.0;kk3++; } else if(mk>=g7
			  && mk<g8){ kk0=+4.0;kk4++; } else if(mk>=g9 && mk<g10) { kk0=+5.0;kk5++; }
			  
			  kk0t+=kk0;
			  
			  kk6=kk1+kk2+kk3+kk4+kk5; kk0=kk0t/kk6; kk0v=String.format("%,.4f", kk0);
			  
			  
			  
			  } if((draughtm==null || draughtm.isEmpty()) && (draughtt==null ||
			  draughtt.isEmpty()) ) {
			  
			  draught="";
			  
			  }else {
			  
			  if((draughtm!=null) && (!draughtm.isEmpty()) && !draughtm.matches("-")) {
			  
			  draughtmd=Double.parseDouble(rs.getString("draughtm"));
			  
			  }
			  
			  
			  if((draughtt!=null) && (!draughtt.isEmpty()) && !draughtt.matches("-")) {
			  
			  draughttd=Double.parseDouble(rs.getString("draughtt"));
			  
			  }
			  
			  
			  draughta=draughtmd+draughttd; draught=draughta.toString(); }
			  
			  
			  
			  if(draught!=null && !draught.isEmpty() && !draught.equals("-")) {
			  
			  Double mk=Double.parseDouble(draught);
			  
			  if(mk>=g1 && mk<=g2){ ll0=+1.0;ll1++; }else if(mk>=g3 && mk<g4){
			  ll0=+2.0;ll2++; } else if(mk>=g5 && mk<g6){ ll0=+3.0;ll3++; } else if(mk>=g7
			  && mk<g8){ ll0=+4.0;ll4++; } else if(mk>=g9 && mk<g10) { ll0=+5.0;ll5++; }
			  
			  ll0t+=ll0;
			  
			  ll6=ll1+ll2+ll3+ll4+ll5; ll0=ll0t/ll6; ll0v=String.format("%,.4f", ll0);
			  
			  
			  
			  } if((refm==null || refm.isEmpty()) && (reft==null || reft.isEmpty()) ) {
			  
			  ref="";
			  
			  }else {
			  
			  if((refm!=null) && (!refm.isEmpty()) && !refm.matches("-")) {
			  
			  refmd=Double.parseDouble(rs.getString("refm"));
			  
			  }
			  
			  
			  if((reft!=null) && (!reft.isEmpty()) && !reft.matches("-")) {
			  
			  reftd=Double.parseDouble(rs.getString("reft"));
			  
			  }
			  
			  
			  refa=refmd+reftd; ref=refa.toString(); }
			  
			  
			  
			  if(ref!=null && !ref.isEmpty() && !ref.equals("-")) {
			  
			  Double mk=Double.parseDouble(ref);
			  
			  if(mk>=g1 && mk<=g2){ mm0=+1.0;mm1++; }else if(mk>=g3 && mk<g4){
			  mm0=+2.0;mm2++; } else if(mk>=g5 && mk<g6){ mm0=+3.0;mm3++; } else if(mk>=g7
			  && mk<g8){ mm0=+4.0;mm4++; } else if(mk>=g9 && mk<g10) { mm0=+5.0;mm5++; }
			  
			  mm0t+=mm0;
			  
			  mm6=mm1+mm2+mm3+mm4+mm5; mm0=mm0t/mm6; mm0v=String.format("%,.4f", mm0);
			  
			  
			  
			  } if((plantm==null || plantm.isEmpty()) && (plantt==null || plantt.isEmpty())
			  ) {
			  
			  plant="";
			  
			  }else {
			  
			  if((plantm!=null) && (!plantm.isEmpty()) && !plantm.matches("-")) {
			  
			  plantmd=Double.parseDouble(rs.getString("plantm"));
			  
			  }
			  
			  
			  if((plantt!=null) && (!plantt.isEmpty()) && !plantt.matches("-")) {
			  
			  planttd=Double.parseDouble(rs.getString("plantt"));
			  
			  }
			  
			  
			  planta=plantmd+planttd; plant=planta.toString(); }
			  
			  
			  
			  if(plant!=null && !plant.isEmpty() && !plant.equals("-")) {
			  
			  Double mk=Double.parseDouble(plant);
			  
			  if(mk>=g1 && mk<=g2){ nn0=+1.0;nn1++; }else if(mk>=g3 && mk<g4){
			  nn0=+2.0;nn2++; } else if(mk>=g5 && mk<g6){ nn0=+3.0;nn3++; } else if(mk>=g7
			  && mk<g8){ nn0=+4.0;nn4++; } else if(mk>=g9 && mk<g10) { nn0=+5.0;nn5++; }
			  
			  nn0t+=nn0;
			  
			  nn6=nn1+nn2+nn3+nn4+nn5; nn0=nn0t/nn6; nn0v=String.format("%,.4f", nn0);
			  
			  
			  
			  } if((workm==null || workm.isEmpty()) && (workt==null || workt.isEmpty()) ) {
			  
			  work="";
			  
			  }else {
			  
			  if((workm!=null) && (!workm.isEmpty()) && !workm.matches("-")) {
			  
			  workmd=Double.parseDouble(rs.getString("workm"));
			  
			  }
			  
			  
			  if((workt!=null) && (!workt.isEmpty()) && !workt.matches("-")) {
			  
			  worktd=Double.parseDouble(rs.getString("workt"));
			  
			  }
			  
			  
			  worka=workmd+worktd; work=worka.toString(); }
			  
			  
			  
			  if(work!=null && !work.isEmpty() && !work.equals("-")) {
			  
			  Double mk=Double.parseDouble(work);
			  
			  if(mk>=g1 && mk<=g2){ oo0=+1.0;oo1++; }else if(mk>=g3 && mk<g4){
			  oo0=+2.0;oo2++; } else if(mk>=g5 && mk<g6){ oo0=+3.0;oo3++; } else if(mk>=g7
			  && mk<g8){ oo0=+4.0;oo4++; } else if(mk>=g9 && mk<g10) { oo0=+5.0;oo5++; }
			  
			  oo0t+=oo0;
			  
			  oo6=oo1+oo2+oo3+oo4+oo5; oo0=oo0t/oo6; oo0v=String.format("%,.4f", oo0);
			  
			  
			  
			  } if((motorm==null || motorm.isEmpty()) && (motort==null || motort.isEmpty())
			  ) {
			  
			  motor="";
			  
			  }else {
			  
			  if((motorm!=null) && (!motorm.isEmpty()) && !motorm.matches("-")) {
			  
			  motormd=Double.parseDouble(rs.getString("motorm"));
			  
			  }
			  
			  
			  if((motort!=null) && (!motort.isEmpty()) && !motort.matches("-") ) {
			  
			  motortd=Double.parseDouble(rs.getString("motort"));
			  
			  }
			  
			  
			  motora=motormd+motortd; motor=motora.toString(); }
			  
			  
			  
			  if(motor!=null && !motor.isEmpty() && !motor.equals("-")) {
			  
			  Double mk=Double.parseDouble(motor);
			  
			  if(mk>=g1 && mk<=g2){ pp0=+1.0;pp1++; }else if(mk>=g3 && mk<g4){
			  pp0=+2.0;pp2++; } else if(mk>=g5 && mk<g6){ pp0=+3.0;pp3++; } else if(mk>=g7
			  && mk<g8){ pp0=+4.0;pp4++; } else if(mk>=g9 && mk<g10) { pp0=+5.0;pp5++; }
			  
			  pp0t+=pp0;
			  
			  pp6=pp1+pp2+pp3+pp4+pp5; pp0=pp0t/pp6; pp0v=String.format("%,.4f", pp0);
			  
			  
			  
			  } if((weldingm==null || weldingm.isEmpty()) && (weldingt==null ||
			  weldingt.isEmpty()) ) {
			  
			  welding="";
			  
			  }else {
			  
			  if((weldingm!=null) && (!weldingm.isEmpty()) && !weldingm.matches("-") ) {
			  
			  weldingmd=Double.parseDouble(rs.getString("weldingm"));
			  
			  }
			  
			  
			  if((weldingt!=null) && (!weldingt.isEmpty()) && !weldingt.matches("-") ) {
			  
			  weldingtd=Double.parseDouble(rs.getString("weldingt"));
			  
			  }
			  
			  
			  weldinga=weldingmd+weldingtd; welding=weldinga.toString(); }
			  
			  
			  
			  if(welding!=null && !welding.isEmpty() && !welding.equals("-")) {
			  
			  Double mk=Double.parseDouble(welding);
			  
			  if(mk>=g1 && mk<=g2){ qq0=+1.0;qq1++; }else if(mk>=g3 && mk<g4){
			  qq0=+2.0;qq2++; } else if(mk>=g5 && mk<g6){ qq0=+3.0;qq3++; } else if(mk>=g7
			  && mk<g8){ qq0=+4.0;qq4++; } else if(mk>=g9 && mk<g10) { qq0=+5.0;qq5++; }
			  
			  qq0t+=qq0;
			  
			  qq6=qq1+qq2+qq3+qq4+qq5; qq0=qq0t/qq6; qq0v=String.format("%,.4f", qq0);
			  
			  
			  
			  } if((fitm==null || fitm.isEmpty()) && (fitt==null || fitt.isEmpty()) ) {
			  
			  fit="";
			  
			  }else {
			  
			  if((fitm!=null) && (!fitm.isEmpty()) && !fitm.matches("-") ) {
			  
			  fitmd=Double.parseDouble(rs.getString("fitm"));
			  
			  }
			  
			  
			  if((fitt!=null) && (!fitt.isEmpty()) && !fitt.matches("-")) {
			  
			  fittd=Double.parseDouble(rs.getString("fitt"));
			  
			  }
			  
			  
			  fita=fitmd+fittd; fit=fita.toString(); }
			  
			  
			  
			  if(fit!=null && !fit.isEmpty() && !fit.equals("-")) {
			  
			  Double mk=Double.parseDouble(fit);
			  
			  if(mk>=g1 && mk<=g2){ rr0=+1.0;rr1++; }else if(mk>=g3 && mk<g4){
			  rr0=+2.0;rr2++; } else if(mk>=g5 && mk<g6){ rr0=+3.0;rr3++; } else if(mk>=g7
			  && mk<g8){ rr0=+4.0;rr4++; } else if(mk>=g9 && mk<g10) { rr0=+5.0;rr5++; }
			  
			  rr0t+=rr0;
			  
			  rr6=rr1+rr2+rr3+rr4+rr5; rr0=rr0t/rr6; rr0v=String.format("%,.4f", rr0);
			  
			  
			  
			  } if((autom==null || autom.isEmpty()) && (autot==null || autot.isEmpty()) ) {
			  
			  auto="";
			  
			  }else {
			  
			  if((autom!=null) && (!autom.isEmpty()) && !autom.matches("-") ) {
			  
			  automd=Double.parseDouble(rs.getString("autom"));
			  
			  }
			  
			  
			  if((autot!=null) && (!autot.isEmpty()) && !autot.matches("-")) {
			  
			  autotd=Double.parseDouble(rs.getString("autot"));
			  
			  }
			  
			  
			  autoa=automd+autotd; auto=autoa.toString(); }
			  
			  
			  
			  if(auto!=null && !auto.isEmpty() && !auto.equals("-")) {
			  
			  Double mk=Double.parseDouble(auto);
			  
			  if(mk>=g1 && mk<=g2){ ss0=+1.0;ss1++; }else if(mk>=g3 && mk<g4){
			  ss0=+2.0;ss2++; } else if(mk>=g5 && mk<g6){ ss0=+3.0;ss3++; } else if(mk>=g7
			  && mk<g8){ ss0=+4.0;ss4++; } else if(mk>=g9 && mk<g10) { ss0=+5.0;ss5++; }
			  
			  ss0t+=ss0;
			  
			  ss6=ss1+ss2+ss3+ss4+ss5; ss0=ss0t/ss6; ss0v=String.format("%,.4f", ss0);
			  
			  
			  
			  } if((mechanicm==null || mechanicm.isEmpty()) && (mechanict==null ||
			  mechanict.isEmpty()) ) {
			  
			  mechanic="";
			  
			  }else {
			  
			  if((mechanicm!=null) && (!mechanicm.isEmpty()) && !mechanicm.matches("-")) {
			  
			  mechanicmd=Double.parseDouble(rs.getString("mechanicm"));
			  
			  }
			  
			  
			  if((mechanict!=null) && (!mechanict.isEmpty()) && !mechanict.matches("-") ) {
			  
			  mechanictd=Double.parseDouble(rs.getString("mechanict"));
			  
			  }
			  
			  
			  mechanica=mechanicmd+mechanictd; mechanic=mechanica.toString(); }
			  
			  
			  
			  if(mechanic!=null && !mechanic.isEmpty() && !mechanic.equals("-")) {
			  
			  Double mk=Double.parseDouble(mechanic);
			  
			  if(mk>=g1 && mk<=g2){ tt0=+1.0;tt1++; }else if(mk>=g3 && mk<g4){
			  tt0=+2.0;tt2++; } else if(mk>=g5 && mk<g6){ tt0=+3.0;tt3++; } else if(mk>=g7
			  && mk<g8){ tt0=+4.0;tt4++; } else if(mk>=g9 && mk<g10) { tt0=+5.0;tt5++; }
			  
			  tt0t+=tt0;
			  
			  tt6=tt1+tt2+tt3+tt4+tt5; tt0=tt0t/tt6; tt0v=String.format("%,.4f", tt0);
			  
			  
			  
			  }
			  
			  if((foundrym==null || foundrym.isEmpty()) && (foundryt==null ||
			  foundryt.isEmpty()) ) {
			  
			  foundry="";
			  
			  }else {
			  
			  if((foundrym!=null) && (!foundrym.isEmpty()) && !foundrym.matches("-") ) {
			  
			  foundrymd=Double.parseDouble(rs.getString("foundrym"));
			  
			  }
			  
			  
			  if((foundryt!=null) && (!foundryt.isEmpty()) && !foundryt.matches("-") ) {
			  
			  foundrytd=Double.parseDouble(rs.getString("foundryt"));
			  
			  }
			  
			  
			  foundrya=foundrymd+foundrytd; foundry=foundrya.toString(); }
			  
			  
			  
			  if(foundry!=null && !foundry.isEmpty() && !foundry.equals("-")) {
			  
			  Double mk=Double.parseDouble(foundry);
			  
			  if(mk>=g1 && mk<=g2){ uu0=+1.0;uu1++; }else if(mk>=g3 && mk<g4){
			  uu0=+2.0;uu2++; } else if(mk>=g5 && mk<g6){ uu0=+3.0;uu3++; } else if(mk>=g7
			  && mk<g8){ uu0=+4.0;uu4++; } else if(mk>=g9 && mk<g10) { uu0=+5.0;uu5++; }
			  
			  uu0t+=uu0;
			  
			  uu6=uu1+uu2+uu3+uu4+uu5; uu0=uu0t/uu6; uu0v=String.format("%,.4f", uu0);
			  
			  
			  
			  }
			  
			  }
			  
			  mudi20 = new Table(15);
				mudi20.setWidth(500);

				Paragraph parr1 = new Paragraph("SUBJECT PERFORMANCE SUMMARY");
				Paragraph parr2 = new Paragraph("CODE");
				Paragraph parr3 = new Paragraph("SUBJECT NAME");
				Paragraph parr4 = new Paragraph("A");
				Paragraph parr5 = new Paragraph("B");
				Paragraph parr6 = new Paragraph("C");
				Paragraph parr7 = new Paragraph("D");
				Paragraph parr8 = new Paragraph("F");
				Paragraph parr9= new Paragraph("GPA");
				
				Paragraph pac= new Paragraph("010");	Paragraph pan= new Paragraph("CIVICS");Paragraph pa1= new Paragraph(""+a1);Paragraph pa2= new Paragraph(""+a2);
				Paragraph pa3= new Paragraph(""+a3);Paragraph pa4= new Paragraph(""+a4);Paragraph pa5= new Paragraph(""+a5);Paragraph pav= new Paragraph(""+a0v);
				Paragraph pbc= new Paragraph("012");	Paragraph pbn= new Paragraph("HISTORY");Paragraph pb1= new Paragraph(""+b1);Paragraph pb2= new Paragraph(""+b2);
				Paragraph pb3= new Paragraph(""+b3);Paragraph pb4= new Paragraph(""+b4);Paragraph pb5= new Paragraph(""+b5);Paragraph pbv= new Paragraph(""+b0v);
				Paragraph pcc= new Paragraph("013");	Paragraph pcn= new Paragraph("GEOGRAPHY");Paragraph pc1= new Paragraph(""+c1);Paragraph pc2= new Paragraph(""+c2);
				Paragraph pc3= new Paragraph(""+c3);Paragraph pc4= new Paragraph(""+c4);Paragraph pc5= new Paragraph(""+c5);Paragraph pcv= new Paragraph(""+c0v);
				Paragraph pdc= new Paragraph("014");	Paragraph pdn= new Paragraph("BIBLE KNOWLEDGE");Paragraph pd1= new Paragraph(""+d1);Paragraph pd2= new Paragraph(""+d2);
				Paragraph pd3= new Paragraph(""+d3);Paragraph pd4= new Paragraph(""+d4);Paragraph pd5= new Paragraph(""+d5);Paragraph pdv= new Paragraph(""+d0v);
				Paragraph pec= new Paragraph("015");	Paragraph pen= new Paragraph("ELIMU YA DINI YA KIISLAMU");Paragraph pe1= new Paragraph(""+e1);Paragraph pe2= new Paragraph(""+e2);
				Paragraph pe3= new Paragraph(""+e3);Paragraph pe4= new Paragraph(""+e4);Paragraph pe5= new Paragraph(""+e5);Paragraph pev= new Paragraph(""+e0v);
				Paragraph pfc= new Paragraph("016");	Paragraph pfn= new Paragraph("FINE ART");Paragraph pf1= new Paragraph(""+f1);Paragraph pf2= new Paragraph(""+f2);
				Paragraph pf3= new Paragraph(""+f3);Paragraph pf4= new Paragraph(""+f4);Paragraph pf5= new Paragraph(""+f5);Paragraph pfv= new Paragraph(""+f0v);
				Paragraph phc= new Paragraph("017");	Paragraph phn= new Paragraph("MUSIC");Paragraph ph1= new Paragraph(""+h1);Paragraph ph2= new Paragraph(""+h2);
				Paragraph ph3= new Paragraph(""+h3);Paragraph ph4= new Paragraph(""+h4);Paragraph ph5= new Paragraph(""+h5);Paragraph phv= new Paragraph(""+h0v);
				Paragraph pic= new Paragraph("018");	Paragraph pin= new Paragraph("PHYSICAL EDUCATION");Paragraph pi1= new Paragraph(""+i1);Paragraph pi2= new Paragraph(""+i2);
				Paragraph pi3= new Paragraph(""+i3);Paragraph pi4= new Paragraph(""+i4);Paragraph pi5= new Paragraph(""+i5);Paragraph piv= new Paragraph(""+i0v);
				Paragraph pjc= new Paragraph("021");	Paragraph pjn= new Paragraph("KISWAHILI");Paragraph pj1= new Paragraph(""+j1);Paragraph pj2= new Paragraph(""+j2);
				Paragraph pj3= new Paragraph(""+j3);Paragraph pj4= new Paragraph(""+j4);Paragraph pj5= new Paragraph(""+j5);Paragraph pjv= new Paragraph(""+j0v);
				Paragraph pkc= new Paragraph("022");	Paragraph pkn= new Paragraph("ENGLISH LANGAUGE");Paragraph pk1= new Paragraph(""+k1);Paragraph pk2= new Paragraph(""+k2);
				Paragraph pk3= new Paragraph(""+k3);Paragraph pk4= new Paragraph(""+k4);Paragraph pk5= new Paragraph(""+k5);Paragraph pkv= new Paragraph(""+k0v);
				Paragraph plc= new Paragraph("023");	Paragraph pln= new Paragraph("FRENCH LANGAUGE");Paragraph pl1= new Paragraph(""+l1);Paragraph pl2= new Paragraph(""+l2);
				Paragraph pl3= new Paragraph(""+l3);Paragraph pl4= new Paragraph(""+l4);Paragraph pl5= new Paragraph(""+l5);Paragraph plv= new Paragraph(""+l0v);
				Paragraph poc= new Paragraph("024");	Paragraph pon= new Paragraph("LITERATURE IN ENGLISH");Paragraph po1= new Paragraph(""+o1);Paragraph po2= new Paragraph(""+o2);
				Paragraph po3= new Paragraph(""+o3);Paragraph po4= new Paragraph(""+o4);Paragraph po5= new Paragraph(""+o5);Paragraph pov= new Paragraph(""+o0v);
				Paragraph pppc= new Paragraph("025");	Paragraph pppn= new Paragraph("ARABIC LANGUAGE");Paragraph ppp1= new Paragraph(""+p1);Paragraph ppp2= new Paragraph(""+p2);
				Paragraph ppp3= new Paragraph(""+p3);Paragraph ppp4= new Paragraph(""+p4);Paragraph ppp5= new Paragraph(""+p5);Paragraph pppv= new Paragraph(""+p0v);
				Paragraph pqc= new Paragraph("031");	Paragraph pqn= new Paragraph("PHYSICS");Paragraph pq1= new Paragraph(""+q1);Paragraph pq2= new Paragraph(""+q2);
				Paragraph pq3= new Paragraph(""+q3);Paragraph pq4= new Paragraph(""+q4);Paragraph pq5= new Paragraph(""+q5);Paragraph pqv= new Paragraph(""+q0v);
				Paragraph prc= new Paragraph("032");	Paragraph prn= new Paragraph("CHEMISTRY");Paragraph pr1= new Paragraph(""+r1);Paragraph pr2= new Paragraph(""+r2);
				Paragraph pr3= new Paragraph(""+r3);Paragraph pr4= new Paragraph(""+r4);Paragraph pr5= new Paragraph(""+r5);Paragraph prv= new Paragraph(""+r0v);
				Paragraph psc= new Paragraph("033");	Paragraph psn= new Paragraph("BIOLOGY");Paragraph ps1= new Paragraph(""+s1);Paragraph ps2= new Paragraph(""+s2);
				Paragraph ps3= new Paragraph(""+s3);Paragraph ps4= new Paragraph(""+s4);Paragraph ps5= new Paragraph(""+s5);Paragraph psv= new Paragraph(""+s0v);
				Paragraph ptc= new Paragraph("034");	Paragraph ptn= new Paragraph("AGRICULTURAL  SCIENCE");Paragraph pt1= new Paragraph(""+t1);Paragraph pt2= new Paragraph(""+t2);
				Paragraph pt3= new Paragraph(""+t3);Paragraph pt4= new Paragraph(""+t4);Paragraph pt5= new Paragraph(""+t5);Paragraph ptv= new Paragraph(""+t0v);
				Paragraph puc= new Paragraph("036");	Paragraph pun= new Paragraph("INFORMATION AND COMPUTER STUDIES");Paragraph pu1= new Paragraph(""+u1);Paragraph pu2= new Paragraph(""+u2);
				Paragraph pu3= new Paragraph(""+u3);Paragraph pu4= new Paragraph(""+u4);Paragraph pu5= new Paragraph(""+u5);Paragraph puv= new Paragraph(""+u0v);
				Paragraph pvc= new Paragraph("041");	Paragraph pvn= new Paragraph("BASIC MATHEMATICS");Paragraph pv1= new Paragraph(""+v1);Paragraph pv2= new Paragraph(""+v2);
				Paragraph pv3= new Paragraph(""+v3);Paragraph pv4= new Paragraph(""+v4);Paragraph pv5= new Paragraph(""+v5);Paragraph pvv= new Paragraph(""+v0v);
				Paragraph pwc= new Paragraph("042");	Paragraph pwn= new Paragraph("ADDITIONAL MATHEMATICS");Paragraph pw1= new Paragraph(""+w1);Paragraph pw2= new Paragraph(""+w2);
				Paragraph pw3= new Paragraph(""+w3);Paragraph pw4= new Paragraph(""+w4);Paragraph pw5= new Paragraph(""+w5);Paragraph pwv= new Paragraph(""+w0v);
				Paragraph pxc= new Paragraph("051");	Paragraph pxn= new Paragraph("FOOD AND NUTRITION");Paragraph px1= new Paragraph(""+x1);Paragraph px2= new Paragraph(""+x2);
				Paragraph px3= new Paragraph(""+x3);Paragraph px4= new Paragraph(""+x4);Paragraph px5= new Paragraph(""+x5);Paragraph pxv= new Paragraph(""+x0v);
				Paragraph pyc= new Paragraph("052");	Paragraph pyn= new Paragraph("TEXTILES AND DRESSMAKING");Paragraph py1= new Paragraph(""+y1);Paragraph py2= new Paragraph(""+y2);
				Paragraph py3= new Paragraph(""+y3);Paragraph py4= new Paragraph(""+y4);Paragraph py5= new Paragraph(""+y5);Paragraph pyv= new Paragraph(""+y0v);
				Paragraph pzc= new Paragraph("061");	Paragraph pzn= new Paragraph("COMMERCE");Paragraph pz1= new Paragraph(""+z1);Paragraph pz2= new Paragraph(""+z2);
				Paragraph pz3= new Paragraph(""+z3);Paragraph pz4= new Paragraph(""+z4);Paragraph pz5= new Paragraph(""+z5);Paragraph pzv= new Paragraph(""+z0v);
				Paragraph paac= new Paragraph("062");	Paragraph paan= new Paragraph("BOOKEEPING");Paragraph paa1= new Paragraph(""+aa1);Paragraph paa2= new Paragraph(""+aa2);
				Paragraph paa3= new Paragraph(""+aa3);Paragraph paa4= new Paragraph(""+aa4);Paragraph paa5= new Paragraph(""+aa5);Paragraph paav= new Paragraph(""+aa0v);
				Paragraph pbbc= new Paragraph("071");	Paragraph pbbn= new Paragraph("BUILDING CONSTRUCTION");Paragraph pbb1= new Paragraph(""+bb1);Paragraph pbb2= new Paragraph(""+bb2);
				Paragraph pbb3= new Paragraph(""+bb3);Paragraph pbb4= new Paragraph(""+bb4);Paragraph pbb5= new Paragraph(""+bb5);Paragraph pbbv= new Paragraph(""+bb0v);
				Paragraph pccc= new Paragraph("072");	Paragraph pccn= new Paragraph("ARCHITECTURAL DRAUGHTING");Paragraph pcc1= new Paragraph(""+cc1);Paragraph pcc2= new Paragraph(""+cc2);
				Paragraph pcc3= new Paragraph(""+cc3);Paragraph pcc4= new Paragraph(""+cc4);Paragraph pcc5= new Paragraph(""+cc5);Paragraph pccv= new Paragraph(""+cc0v);
				Paragraph pddc= new Paragraph("073");	Paragraph pddn= new Paragraph("SURVEYING");Paragraph pdd1= new Paragraph(""+dd1);Paragraph pdd2= new Paragraph(""+dd2);
				Paragraph pdd3= new Paragraph(""+dd3);Paragraph pdd4= new Paragraph(""+dd4);Paragraph pdd5= new Paragraph(""+dd5);Paragraph pddv= new Paragraph(""+dd0v);
				Paragraph peec= new Paragraph("074");	Paragraph peen= new Paragraph("CARPENTRY AND JOINERY");Paragraph pee1= new Paragraph(""+ee1);Paragraph pee2= new Paragraph(""+ee2);
				Paragraph pee3= new Paragraph(""+ee3);Paragraph pee4= new Paragraph(""+ee4);Paragraph pee5= new Paragraph(""+ee5);Paragraph peev= new Paragraph(""+ee0v);
				Paragraph pffc= new Paragraph("075");	Paragraph pffn= new Paragraph("BRICKWORK AND MASONRY");Paragraph pff1= new Paragraph(""+ff1);Paragraph pff2= new Paragraph(""+ff2);
				Paragraph pff3= new Paragraph(""+ff3);Paragraph pff4= new Paragraph(""+ff4);Paragraph pff5= new Paragraph(""+ff5);Paragraph pffv= new Paragraph(""+ff0v);
				Paragraph pggc= new Paragraph("076");	Paragraph pggn= new Paragraph("PAINTING AND SIGNWRITING");Paragraph pgg1= new Paragraph(""+gg1);Paragraph pgg2= new Paragraph(""+gg2);
				Paragraph pgg3= new Paragraph(""+gg3);Paragraph pgg4= new Paragraph(""+gg4);Paragraph pgg5= new Paragraph(""+gg5);Paragraph pggv= new Paragraph(""+gg0v);
				Paragraph phhc= new Paragraph("077");	Paragraph phhn= new Paragraph("PLUMBING");Paragraph phh1= new Paragraph(""+hh1);Paragraph phh2= new Paragraph(""+hh2);
				Paragraph phh3= new Paragraph(""+hh3);Paragraph phh4= new Paragraph(""+hh4);Paragraph phh5= new Paragraph(""+hh5);Paragraph phhv= new Paragraph(""+hh0v);
				Paragraph piic= new Paragraph("081");	Paragraph piin= new Paragraph("ELECTICAL INSTALLATION");Paragraph pii1= new Paragraph(""+ii1);Paragraph pii2= new Paragraph(""+ii2);
				Paragraph pii3= new Paragraph(""+ii3);Paragraph pii4= new Paragraph(""+ii4);Paragraph pii5= new Paragraph(""+ii5);Paragraph piiv= new Paragraph(""+ii0v);
				Paragraph pjjc= new Paragraph("082");	Paragraph pjjn= new Paragraph("ELECTICAL ENGINEERING SCIENCE");Paragraph pjj1= new Paragraph(""+jj1);Paragraph pjj2= new Paragraph(""+jj2);
				Paragraph pjj3= new Paragraph(""+jj3);Paragraph pjj4= new Paragraph(""+jj4);Paragraph pjj5= new Paragraph(""+jj5);Paragraph pjjv= new Paragraph(""+jj0v);
				Paragraph pkkc= new Paragraph("083");	Paragraph pkkn= new Paragraph("RADIO AND TELEVISION SERVISING");Paragraph pkk1= new Paragraph(""+kk1);Paragraph pkk2= new Paragraph(""+kk2);
				Paragraph pkk3= new Paragraph(""+kk3);Paragraph pkk4= new Paragraph(""+kk4);Paragraph pkk5= new Paragraph(""+kk5);Paragraph pkkv= new Paragraph(""+kk0v);
				Paragraph pllc= new Paragraph("084");	Paragraph plln= new Paragraph("ELETRICAL DRAUGHTING");Paragraph pll1= new Paragraph(""+ll1);Paragraph pll2= new Paragraph(""+ll2);
				Paragraph pll3= new Paragraph(""+ll3);Paragraph pll4= new Paragraph(""+ll4);Paragraph pll5= new Paragraph(""+ll5);Paragraph pllv= new Paragraph(""+ll0v);
				Paragraph pmmc= new Paragraph("085");	Paragraph pmmn= new Paragraph("REFRIGERATION AND AIR CONDITION");Paragraph pmm1= new Paragraph(""+mm1);Paragraph pmm2= new Paragraph(""+mm2);
				Paragraph pmm3= new Paragraph(""+mm3);Paragraph pmm4= new Paragraph(""+mm4);Paragraph pmm5= new Paragraph(""+mm5);Paragraph pmmv= new Paragraph(""+mm0v);
				Paragraph pnnc= new Paragraph("086");	Paragraph pnnn= new Paragraph("PLANT AND EQUIPMENT MAINTANANCE");Paragraph pnn1= new Paragraph(""+nn1);Paragraph pnn2= new Paragraph(""+nn2);
				Paragraph pnn3= new Paragraph(""+nn3);Paragraph pnn4= new Paragraph(""+nn4);Paragraph pnn5= new Paragraph(""+nn5);Paragraph pnnv= new Paragraph(""+nn0v);
				Paragraph pooc= new Paragraph("092");	Paragraph poon= new Paragraph("WORKSHOP TECHNOLOGY");Paragraph poo1= new Paragraph(""+oo1);Paragraph poo2= new Paragraph(""+oo2);
				Paragraph poo3= new Paragraph(""+oo3);Paragraph poo4= new Paragraph(""+oo4);Paragraph poo5= new Paragraph(""+oo5);Paragraph poov= new Paragraph(""+oo0v);
				Paragraph ppppc= new Paragraph("093");	Paragraph ppppn= new Paragraph("MOTOR VEHICLE MECHANICS");Paragraph pppp1= new Paragraph(""+pp1);Paragraph pppp2= new Paragraph(""+pp2);
				Paragraph pppp3= new Paragraph(""+pp3);Paragraph pppp4= new Paragraph(""+pp4);Paragraph pppp5= new Paragraph(""+pp5);Paragraph ppppv= new Paragraph(""+pp0v);
				Paragraph pqqc= new Paragraph("094");	Paragraph pqqn= new Paragraph("WELDING AND METAL FABRICATION");Paragraph pqq1= new Paragraph(""+qq1);Paragraph pqq2= new Paragraph(""+qq2);
				Paragraph pqq3= new Paragraph(""+qq3);Paragraph pqq4= new Paragraph(""+qq4);Paragraph pqq5= new Paragraph(""+qq5);Paragraph pqqv= new Paragraph(""+qq0v);
				Paragraph prrc= new Paragraph("095");	Paragraph prrn= new Paragraph("FITTING AND TURNING");Paragraph prr1= new Paragraph(""+rr1);Paragraph prr2= new Paragraph(""+rr2);
				Paragraph prr3= new Paragraph(""+rr3);Paragraph prr4= new Paragraph(""+rr4);Paragraph prr5= new Paragraph(""+rr5);Paragraph prrv= new Paragraph(""+rr0v);
				Paragraph pssc= new Paragraph("096");	Paragraph pssn= new Paragraph("AUTO ELETRIC");Paragraph pss1= new Paragraph(""+ss1);Paragraph pss2= new Paragraph(""+ss2);
				Paragraph pss3= new Paragraph(""+ss3);Paragraph pss4= new Paragraph(""+ss4);Paragraph pss5= new Paragraph(""+ss5);Paragraph pssv= new Paragraph(""+ss0v);
				Paragraph pttc= new Paragraph("097");	Paragraph pttn= new Paragraph("MECHANICAL DRAUGHTING");Paragraph ptt1= new Paragraph(""+tt1);Paragraph ptt2= new Paragraph(""+tt2);
				Paragraph ptt3= new Paragraph(""+tt3);Paragraph ptt4= new Paragraph(""+tt4);Paragraph ptt5= new Paragraph(""+tt5);Paragraph pttv= new Paragraph(""+tt0v);
				Paragraph puuc= new Paragraph("098");	Paragraph puun= new Paragraph("FOUNDRY AND BLACKSMITH");Paragraph puu1= new Paragraph(""+uu1);Paragraph puu2= new Paragraph(""+uu2);
				Paragraph puu3= new Paragraph(""+uu3);Paragraph puu4= new Paragraph(""+uu4);Paragraph puu5= new Paragraph(""+uu5);Paragraph puuv= new Paragraph(""+uu0v);
				
				Cell cel1 = new Cell(1, 15).add(parr1).setTextAlignment(TextAlignment.CENTER).setFontSize(10)
						.setBold().setBorder(com.itextpdf.layout.borders.Border.NO_BORDER)
						.setFontColor(new DeviceRgb(0, 0, 255));
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr2).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell(1,7).add(parr3).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr6).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr7).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr8).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell(1,2).add(parr9).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				
			  
			  if(civa>0.0) {
					cel1 = new Cell().add(pac).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pan).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pav).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(hisa>0.0) {
					cel1 = new Cell().add(pbc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pbn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pb1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pb2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pb3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pb4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pb5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pbv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(geoa>0.0) {

					cel1 = new Cell().add(pcc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pcn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pc1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pc2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pc3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pc4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pc5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pcv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				
			  } 
			  if(biblea>0.0) {
					cel1 = new Cell().add(pdc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pdn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pd1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pd2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pd3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pd4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pd5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pdv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				
				  
			  } if(dinia>0.0) {
					cel1 = new Cell().add(pec).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pen).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pe1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pe2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pe3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pe4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pe5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pev).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				
               }
			  
			  
			  
			  if(arta>0.0) {
					cel1 = new Cell().add(pfc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pfn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pf1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pf2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pf3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pf4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pf5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pfv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(musica>0.0) {
					cel1 = new Cell().add(phc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(phn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ph1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ph2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ph3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ph4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ph5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(phv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(edua>0.0) {
					cel1 = new Cell().add(pic).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pin).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pi1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pi2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pi3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pi4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pi5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(piv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(kiswa>0.0) {
					cel1 = new Cell().add(pjc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pjn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pj1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pj2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pj3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pj4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pj5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pjv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(enga>0.0) {
					cel1 = new Cell().add(pkc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pkn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pk1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pk2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pk3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pk4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pk5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pkv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(frea>0.0) {
					cel1 = new Cell().add(plc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pln).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pl1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pl2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pl3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pl4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pl5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(plv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(lita>0.0) {
					cel1 = new Cell().add(poc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pon).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(po1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(po2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(po3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(po4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(po5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pov).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(araa>0.0) {
					cel1 = new Cell().add(pppc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pppn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ppp1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ppp2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ppp3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ppp4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ppp5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pppv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(phya>0.0) {
					cel1 = new Cell().add(pqc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pqn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pq1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pq2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pq3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pq4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pq5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pqv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(chea>0.0) {
					cel1 = new Cell().add(prc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(prn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pr1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pr2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pr3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(prv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				} 
			  if(bioa>0.0) {
					cel1 = new Cell().add(psc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(psn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ps1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ps2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ps3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ps4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ps5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(psv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(agria>0.0) {
					cel1 = new Cell().add(ptc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(ptn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pt1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pt2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pt3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pt4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pt5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(ptv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(ita>0.0) {
					cel1 = new Cell().add(puc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pun).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pu1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pu2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pu3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pu4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pu5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(puv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(matha>0.0) {
					cel1 = new Cell().add(pvc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pvn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pv1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pv2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pv3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pv4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pv5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pvv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(adma>0.0) {
					cel1 = new Cell().add(pwc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pwn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pw1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pw2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pw3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pw4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pw5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pwv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(fooda>0.0) {
					cel1 = new Cell().add(pxc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pxn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(px1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(px2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(px3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(px4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(px5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pxv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(textilea>0.0) {
					cel1 = new Cell().add(pyc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pyn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(py1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(py2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(py3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(py4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(py5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pyv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(coma>0.0) {
					cel1 = new Cell().add(pzc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pzn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pz1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pz2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pz3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pz4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pz5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pzv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  if(booka>0.0) {
					cel1 = new Cell().add(paac).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(paan).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(paa1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(paa2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(paa3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(paa4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(paa5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(paav).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(builda>0.0) {
					cel1 = new Cell().add(pbbc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pbbn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pbb1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pbb2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pbb3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pbb4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pbb5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pbbv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(archa>0.0) {
					cel1 = new Cell().add(pccc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pccn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pcc1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pcc2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pcc3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pcc4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pcc5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pccv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  
			  
			  if(surveya>0.0) {
					cel1 = new Cell().add(pddc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pddn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pdd1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pdd2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pdd3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pdd4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pdd5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pddv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(carpa>0.0) {
					cel1 = new Cell().add(peec).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(peen).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pee1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pee2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pee3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pee4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pee5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(peev).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(bricka>0.0) {
					cel1 = new Cell().add(pffc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pffn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pff1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pff2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pff3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pff4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pff5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pffv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(painta>0.0) {
					cel1 = new Cell().add(pggc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pggn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pgg1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pgg2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pgg3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pgg4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pgg5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pggv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(plumba>0.0) {
					cel1 = new Cell().add(phhc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(phhn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(phh1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(phh2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(phh3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(phh4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(phh5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(phhv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(electa>0.0) {
					cel1 = new Cell().add(piic).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(piin).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pii1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pii2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pii3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pii4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pii5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(piiv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(engineera>0.0) {
					cel1 = new Cell().add(pjjc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pjjn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pjj1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pjj2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pjj3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pjj4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pjj5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pjjv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(radioa>0.0) {
					cel1 = new Cell().add(pkkc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pkkn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pkk1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pkk2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pkk3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pkk4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pkk5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pkkv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(draughta>0.0) {
					cel1 = new Cell().add(pllc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(plln).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pll1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pll2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pll3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pll4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pll5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pllv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(refa>0.0) {
					cel1 = new Cell().add(pmmc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pmm1).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pmm1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pmm2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pmm3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pmm4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pmm5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pmmv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(planta>0.0) {
					cel1 = new Cell().add(pnnc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pnnn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pnn1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pnn2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pnn3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pnn4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pnn5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pnnv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  
			  if(worka>0.0) {
					cel1 = new Cell().add(pooc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(poon).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(poo1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(poo2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(poo3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(poo4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(poo5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(poov).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(motora>0.0) {
					cel1 = new Cell().add(ppppc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(ppppn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pppp1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pppp2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pppp3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pppp4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pppp5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(ppppv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(weldinga>0.0) {
					cel1 = new Cell().add(pqqc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pqqn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pqq1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pqq2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pqq3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pqq4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pqq5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pqqv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  if(fita>0.0) {
					cel1 = new Cell().add(prrc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(prrn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(prr1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(prr2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(prr3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(prr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(prr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(prrv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(autoa>0.0) {
					cel1 = new Cell().add(pssc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pssn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pss1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pss2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pss3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pss4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pss5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pssv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(mechanica>0.0) {
					cel1 = new Cell().add(pttc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pttn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ptt1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ptt2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ptt3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ptt4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(ptt5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pttv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  if(foundrya>0.0) {
					cel1 = new Cell().add(puuc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(puun).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(puu1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(puu2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(puu3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(puu4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(puu5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(puuv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
			  
			  
			  
			  
			  
			  
			  
			  
			  
			 }catch(Exception ex) {
        	 JOptionPane.showMessageDialog(null, ex.getMessage());
         }
		
	}

	/**
	 * 
	 */
	private void analysis() {


		
			
		try {
			
			  
			  Double a0=0.0,a0t=0.0;String a0v="";int a1=0,a2=0,a3=0,a4=0,a5=0,a6=0; Double
			  b0=0.0,b0t=0.0;String b0v="";int b1=0,b2=0,b3=0,b4=0,b5=0,b6=0; Double
			  c0=0.0,c0t=0.0;String c0v="";int c1=0,c2=0,c3=0,c4=0,c5=0,c6=0; Double
			  d0=0.0,d0t=0.0;String d0v="";int d1=0,d2=0,d3=0,d4=0,d5=0,d6=0; Double
			  e0=0.0,e0t=0.0;String e0v="";int e1=0,e2=0,e3=0,e4=0,e5=0,e6=0; Double
			  f0=0.0,f0t=0.0;String f0v="";int f1=0,f2=0,f3=0,f4=0,f5=0,f6=0; Double
			  h0=0.0,h0t=0.0;String h0v="";int h1=0,h2=0,h3=0,h4=0,h5=0,h6=0; Double
			  i0=0.0,i0t=0.0;String i0v="";int i1=0,i2=0,i3=0,i4=0,i5=0,i6=0; Double
			  j0=0.0,j0t=0.0;String j0v="";int j1=0,j2=0,j3=0,j4=0,j5=0,j6=0; Double
			  k0=0.0,k0t=0.0;String k0v="";int k1=0,k2=0,k3=0,k4=0,k5=0,k6=0; Double
			  l0=0.0,l0t=0.0;String l0v="";int l1=0,l2=0,l3=0,l4=0,l5=0,l6=0; Double
			  o0=0.0,o0t=0.0;String o0v="";int o1=0,o2=0,o3=0,o4=0,o5=0,o6=0; Double
			  p0=0.0,p0t=0.0;String p0v="";int p1=0,p2=0,p3=0,p4=0,p5=0,p6=0; Double
			  q0=0.0,q0t=0.0;String q0v="";int q1=0,q2=0,q3=0,q4=0,q5=0,q6=0; Double
			  r0=0.0,r0t=0.0;String r0v="";int r1=0,r2=0,r3=0,r4=0,r5=0,r6=0; Double
			  s0=0.0,s0t=0.0;String s0v="";int s1=0,s2=0,s3=0,s4=0,s5=0,s6=0; Double
			  t0=0.0,t0t=0.0;String t0v="";int t1=0,t2=0,t3=0,t4=0,t5=0,t6=0; Double
			  u0=0.0,u0t=0.0;String u0v="";int u1=0,u2=0,u3=0,u4=0,u5=0,u6=0; Double
			  v0=0.0,v0t=0.0;String v0v="";int v1=0,v2=0,v3=0,v4=0,v5=0,v6=0; Double
			  w0=0.0,w0t=0.0;String w0v="";int w1=0,w2=0,w3=0,w4=0,w5=0,w6=0; Double
			  x0=0.0,x0t=0.0;String x0v="";int x1=0,x2=0,x3=0,x4=0,x5=0,x6=0; Double
			  y0=0.0,y0t=0.0;String y0v="";int y1=0,y2=0,y3=0,y4=0,y5=0,y6=0; Double
			  z0=0.0,z0t=0.0;String z0v="";int z1=0,z2=0,z3=0,z4=0,z5=0,z6=0; Double
			  aa0=0.0,aa0t=0.0;String aa0v="";int aa1=0,aa2=0,aa3=0,aa4=0,aa5=0,aa6=0;
			  Double bb0=0.0,bb0t=0.0;String bb0v="";int
			  bb1=0,bb2=0,bb3=0,bb4=0,bb5=0,bb6=0; Double cc0=0.0,cc0t=0.0;String
			  cc0v="";int cc1=0,cc2=0,cc3=0,cc4=0,cc5=0,cc6=0; Double
			  dd0=0.0,dd0t=0.0;String dd0v="";int dd1=0,dd2=0,dd3=0,dd4=0,dd5=0,dd6=0;
			  Double ee0=0.0,ee0t=0.0;String ee0v="";int
			  ee1=0,ee2=0,ee3=0,ee4=0,ee5=0,ee6=0; Double ff0=0.0,ff0t=0.0;String
			  ff0v="";int ff1=0,ff2=0,ff3=0,ff4=0,ff5=0,ff6=0; Double
			  gg0=0.0,gg0t=0.0;String gg0v="";int gg1=0,gg2=0,gg3=0,gg4=0,gg5=0,gg6=0;
			  Double hh0=0.0,hh0t=0.0;String hh0v="";int
			  hh1=0,hh2=0,hh3=0,hh4=0,hh5=0,hh6=0; Double ii0=0.0,ii0t=0.0;String
			  ii0v="";int ii1=0,ii2=0,ii3=0,ii4=0,ii5=0,ii6=0; Double
			  jj0=0.0,jj0t=0.0;String jj0v="";int jj1=0,jj2=0,jj3=0,jj4=0,jj5=0,jj6=0;
			  Double kk0=0.0,kk0t=0.0;String kk0v="";int
			  kk1=0,kk2=0,kk3=0,kk4=0,kk5=0,kk6=0; Double ll0=0.0,ll0t=0.0;String
			  ll0v="";int ll1=0,ll2=0,ll3=0,ll4=0,ll5=0,ll6=0; Double
			  mm0=0.0,mm0t=0.0;String mm0v="";int mm1=0,mm2=0,mm3=0,mm4=0,mm5=0,mm6=0;
			  Double nn0=0.0,nn0t=0.0;String nn0v="";int
			  nn1=0,nn2=0,nn3=0,nn4=0,nn5=0,nn6=0; Double oo0=0.0,oo0t=0.0;String
			  oo0v="";int oo1=0,oo2=0,oo3=0,oo4=0,oo5=0,oo6=0; Double
			  pp0=0.0,pp0t=0.0;String pp0v="";int pp1=0,pp2=0,pp3=0,pp4=0,pp5=0,pp6=0;
			  Double qq0=0.0,qq0t=0.0;String qq0v="";int
			  qq1=0,qq2=0,qq3=0,qq4=0,qq5=0,qq6=0; Double rr0=0.0,rr0t=0.0;String
			  rr0v="";int rr1=0,rr2=0,rr3=0,rr4=0,rr5=0,rr6=0; Double
			  ss0=0.0,ss0t=0.0;String ss0v="";int ss1=0,ss2=0,ss3=0,ss4=0,ss5=0,ss6=0;
			  Double tt0=0.0,tt0t=0.0;String tt0v="";int
			  tt1=0,tt2=0,tt3=0,tt4=0,tt5=0,tt6=0; Double uu0=0.0,uu0t=0.0;String
			  uu0v="";int uu1=0,uu2=0,uu3=0,uu4=0,uu5=0,uu6=0;
			  
			  
			  
			  String
			  sql22="Select eid from Exam where ename= '"+box41.getSelectedItem().toString(
			  )+"'  "; ps=con.prepareStatement(sql22); ResultSet rs22=ps.executeQuery();
			  
			  
			  String
			  sql33="Select tid from Term where tname= '"+box42.getSelectedItem().toString(
			  )+"'  "; ps=con.prepareStatement(sql33); ResultSet rs33=ps.executeQuery();
			  
			  String eid=rs22.getString("eid"); String tid=rs33.getString("tid");
			  
			  
			  
			  String ss11="select count(id) from Mark_O where eid='"+eid+"' and tid ='"
			  +tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.
			  getSelectedItem().toString()+"' "; ps=con.prepareStatement(ss11); ResultSet
			  rs1=ps.executeQuery();
			  
			  
			  try {
			  
			  String sqll="select * from Grade_O"; ps=con.prepareStatement(sqll); ResultSet
			  rs5=ps.executeQuery();
			  
			  String ss="select count(id) from Mark_O where eid='"+eid+"' and tid ='"
			  +tid+"' and class='"+box40.getSelectedItem().toString()+"' and year='"+box43.
			  getSelectedItem().toString()+"' "; ps=con.prepareStatement(ss); ResultSet
			  rs6=ps.executeQuery();
			  
			  
			  String
			  gpa="select * from Mark_O where eid='"+eid+"' and tid ='"+tid+"' and class='"
			  +box40.getSelectedItem().toString()+"' and year='"+box43.getSelectedItem().
			  toString()+"' "; ps=con.prepareStatement(gpa); ResultSet
			  rs4=ps.executeQuery();
			  
			  
			  
			  
			  
			  
			  Double
			  g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
			  g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.
			  getDouble("g4");g5=rs5.getDouble("g5");
			  g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.
			  getDouble("g9");g10=rs5.getDouble("g10");
			  
			  
			  
			  int cou=Integer.parseInt(rs6.getString("count(id)")); int total=0;
			  
			  String sql="Select Mark_O.id,Mark_O.mark,Subject_O.sname, " +
			  "max(CASE WHEN Mark_O.sid = '010' THEN Mark_O.mark ELSE '' END) as civ ," +
			  "max(CASE WHEN Mark_O.sid = '012' THEN Mark_O.mark ELSE '' END) as his, " +
			  "max(CASE WHEN Mark_O.sid = '013' THEN Mark_O.mark ELSE '' END) as geo, " +
			  "max(CASE WHEN Mark_O.sid = '014' THEN Mark_O.mark ELSE '' END) as bible ," +
			  "max(CASE WHEN Mark_O.sid = '015' THEN Mark_O.mark ELSE '' END) as dini, " +
			  "max(CASE WHEN Mark_O.sid = '016' THEN Mark_O.mark ELSE '' END) as art, " +
			  "max(CASE WHEN Mark_O.sid = '017' THEN Mark_O.mark ELSE '' END) as music ," +
			  "max(CASE WHEN Mark_O.sid = '018' THEN Mark_O.mark ELSE '' END) as edu ," +
			  "max(CASE WHEN Mark_O.sid = '021' THEN Mark_O.mark ELSE '' END) as kisw, " +
			  "max(CASE WHEN Mark_O.sid = '022' THEN Mark_O.mark ELSE '' END) as eng ," +
			  "max(CASE WHEN Mark_O.sid = '023' THEN Mark_O.mark ELSE '' END) as fre, " +
			  "max(CASE WHEN Mark_O.sid = '024' THEN Mark_O.mark ELSE '' END) as lit, " +
			  "max(CASE WHEN Mark_O.sid = '025' THEN Mark_O.mark ELSE '' END) as ara ," +
			  "max(CASE WHEN Mark_O.sid = '031' THEN Mark_O.mark ELSE '' END) as phy, " +
			  "max(CASE WHEN Mark_O.sid = '032' THEN Mark_O.mark ELSE '' END) as che, " +
			  "max(CASE WHEN Mark_O.sid = '033' THEN Mark_O.mark ELSE '' END) as bio ," +
			  "max(CASE WHEN Mark_O.sid = '034' THEN Mark_O.mark ELSE '' END) as agri, " +
			  "max(CASE WHEN Mark_O.sid = '036' THEN Mark_O.mark ELSE '' END) as it, " +
			  "max(CASE WHEN Mark_O.sid = '041' THEN Mark_O.mark ELSE '' END) as math ," +
			  "max(CASE WHEN Mark_O.sid = '042' THEN Mark_O.mark ELSE '' END) as adm, " +
			  "max(CASE WHEN Mark_O.sid = '051' THEN Mark_O.mark ELSE '' END) as food, " +
			  "max(CASE WHEN Mark_O.sid = '052' THEN Mark_O.mark ELSE '' END) as textile,"
			  + "max(CASE WHEN Mark_O.sid = '061' THEN Mark_O.mark ELSE '' END) as com, " +
			  "max(CASE WHEN Mark_O.sid = '062' THEN Mark_O.mark ELSE '' END) as book, " +
			  "max(CASE WHEN Mark_O.sid = '071' THEN Mark_O.mark ELSE '' END) as build," +
			  "max(CASE WHEN Mark_O.sid = '072' THEN Mark_O.mark ELSE '' END) as arch, " +
			  "max(CASE WHEN Mark_O.sid = '073' THEN Mark_O.mark ELSE '' END) as survey, "
			  + "max(CASE WHEN Mark_O.sid = '074' THEN Mark_O.mark ELSE '' END) as carp ,"
			  + "max(CASE WHEN Mark_O.sid = '075' THEN Mark_O.mark ELSE '' END) as brick, "
			  + "max(CASE WHEN Mark_O.sid = '076' THEN Mark_O.mark ELSE '' END) as paint, "
			  + "max(CASE WHEN Mark_O.sid = '077' THEN Mark_O.mark ELSE '' END) as plumb, "
			  + "max(CASE WHEN Mark_O.sid = '081' THEN Mark_O.mark ELSE '' END) as elect, "
			  +
			  "max(CASE WHEN Mark_O.sid = '082' THEN Mark_O.mark ELSE '' END) as engineer ,"
			  + "max(CASE WHEN Mark_O.sid = '083' THEN Mark_O.mark ELSE '' END) as radio, "
			  +
			  "max(CASE WHEN Mark_O.sid = '084' THEN Mark_O.mark ELSE '' END) as draught, "
			  + "max(CASE WHEN Mark_O.sid = '085' THEN Mark_O.mark ELSE '' END) as ref, " +
			  "max(CASE WHEN Mark_O.sid = '086' THEN Mark_O.mark ELSE '' END) as plant, " +
			  "max(CASE WHEN Mark_O.sid = '092' THEN Mark_O.mark ELSE '' END) as work ," +
			  "max(CASE WHEN Mark_O.sid = '093' THEN Mark_O.mark ELSE '' END) as motor, " +
			  "max(CASE WHEN Mark_O.sid = '094' THEN Mark_O.mark ELSE '' END) as welding, "
			  + "max(CASE WHEN Mark_O.sid = '095' THEN Mark_O.mark ELSE '' END) as fit, " +
			  "max(CASE WHEN Mark_O.sid = '096' THEN Mark_O.mark ELSE '' END) as auto, " +
			  "max(CASE WHEN Mark_O.sid = '097' THEN Mark_O.mark ELSE '' END) as mechanic, "
			  +
			  "max(CASE WHEN Mark_O.sid = '098' THEN Mark_O.mark ELSE '' END) as foundry "
			  + "from Mark_O " + "INNER JOIN Ouser ON Ouser.id = Mark_O.id " +
			  "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid " +
			  " where Mark_O.eid='"+eid+"' and Mark_O.tid ='"+tid+"' and Mark_O.class='"
			  +box40.getSelectedItem().toString()+"' and Mark_O.year='"+box43.
			  getSelectedItem().toString()
			  +"' GROUP BY Mark_O.id,Ouser.id    ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC "
			  ;
			  
			  
			  ps = con.prepareStatement(sql); rs = ps.executeQuery();
			  
			  
			  
			  
			  
			  if(cou>0) {
			  
			  
			  // while (rs.next()) {
			  
			  
			  
			  
			  while(rs4.next()) {
			  
			  if(rs4.getString("sid").equals("010") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ a0=+1.0;a1++; }else if(mk>=g3 && mk<g4){ a0=+2.0;a2++;
			  } else if(mk>=g5 && mk<g6){ a0=+3.0;a3++; } else if(mk>=g7 && mk<g8){
			  a0=+4.0;a4++; } else if(mk>=g9 && mk<g10) { a0=+5.0;a5++; }
			  
			  a0t+=a0;
			  
			  a6=a1+a2+a3+a4+a5; a0=a0t/a6; a0v=String.format("%,.4f", a0);
			  
			  }
			  
			  
			  
			  if(rs4.getString("sid").equals("012") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ b0=+1.0;b1++; }else if(mk>=g3 && mk<g4){ b0=+2.0;b2++;
			  } else if(mk>=g5 && mk<g6){ b0=+3.0;b3++; } else if(mk>=g7 && mk<g8){
			  b0=+4.0;b4++; } else if(mk>=g9 && mk<g10) { b0=+5.0;b5++; }
			  
			  b0t+=b0;
			  
			  b6=b1+b2+b3+b4+b5; b0=b0t/b6; b0v=String.format("%,.4f", b0);
			  
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("013") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ c0=+1.0;c1++; }else if(mk>=g3 && mk<g4){ c0=+2.0;c2++;
			  } else if(mk>=g5 && mk<g6){ c0=+3.0;c3++; } else if(mk>=g7 && mk<g8){
			  c0=+4.0;c4++; } else if(mk>=g9 && mk<g10) { c0=+5.0;c5++; }
			  
			  c0t+=c0; c6=c1+c2+c3+c4+c5; c0=c0t/c6; c0v=String.format("%,.4f", c0);
			  
			  }
			  
			  if(rs4.getString("sid").equals("014") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ d0=+1.0;d1++; }else if(mk>=g3 && mk<g4){ d0=+2.0;d2++;
			  } else if(mk>=g5 && mk<g6){ d0=+3.0;d3++; } else if(mk>=g7 && mk<g8){
			  d0=+4.0;d4++; } else if(mk>=g9 && mk<g10) { d0=+5.0;d5++; }
			  
			  d0t+=d0; d6=d1+d2+d3+d4+d5; d0=d0t/d6; d0v=String.format("%,.4f", d0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("015") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ e0=+1.0;e1++; }else if(mk>=g3 && mk<g4){ e0=+2.0;e2++;
			  } else if(mk>=g5 && mk<g6){ e0=+3.0;e3++; } else if(mk>=g7 && mk<g8){
			  e0=+4.0;e4++; } else if(mk>=g9 && mk<g10) { e0=+5.0;e5++; }
			  
			  e0t+=e0; e6=e1+e2+e3+e4+e5; e0=e0t/e6; e0v=String.format("%,.4f", e0);
			  
			  }
			  
			  if(rs4.getString("sid").equals("016") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ f0=+1.0;f1++; }else if(mk>=g3 && mk<g4){ f0=+2.0;f2++;
			  } else if(mk>=g5 && mk<g6){ f0=+3.0;f3++; } else if(mk>=g7 && mk<g8){
			  f0=+4.0;f4++; } else if(mk>=g9 && mk<g10) { f0=+5.0;f5++; }
			  
			  f0t+=f0; f6=f1+f2+f3+f4+f5; f0=f0t/f6; f0v=String.format("%,.4f", f0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("017") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ h0=+1.0;h1++; }else if(mk>=g3 && mk<g4){ h0=+2.0;h2++;
			  } else if(mk>=g5 && mk<g6){ h0=+3.0;h3++; } else if(mk>=g7 && mk<g8){
			  h0=+4.0;h4++; } else if(mk>=g9 && mk<g10) { h0=+5.0;h5++; }
			  
			  h0t+=h0; h6=h1+h2+h3+h4+h5; h0=h0t/h6; h0v=String.format("%,.4f", h0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("018") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ i0=+1.0;i1++; }else if(mk>=g3 && mk<g4){ i0=+2.0;i2++;
			  } else if(mk>=g5 && mk<g6){ i0=+3.0;i3++; } else if(mk>=g7 && mk<g8){
			  i0=+4.0;i4++; } else if(mk>=g9 && mk<g10) { i0=+5.0;i5++; }
			  
			  i0t+=i0; i6=i1+i2+i3+i4+i5; i0=i0t/i6; i0v=String.format("%,.4f", i0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("021") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ j0=+1.0;j1++; }else if(mk>=g3 && mk<g4){ j0=+2.0;j2++;
			  } else if(mk>=g5 && mk<g6){ j0=+3.0;j3++; } else if(mk>=g7 && mk<g8){
			  j0=+4.0;j4++; } else if(mk>=g9 && mk<g10) { j0=+5.0;j5++; }
			  
			  j0t+=j0; j6=j1+j2+j3+j4+j5; j0=j0t/j6; j0v=String.format("%,.4f", j0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("022") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ k0=+1.0;k1++; }else if(mk>=g3 && mk<g4){ k0=+2.0;k2++;
			  } else if(mk>=g5 && mk<g6){ k0=+3.0;k3++; } else if(mk>=g7 && mk<g8){
			  k0=+4.0;k4++; } else if(mk>=g9 && mk<g10) { k0=+5.0;k5++; }
			  
			  k0t+=k0; k6=k1+k2+k3+k4+k5; k0=k0t/k6; k0v=String.format("%,.4f", k0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("023") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ l0=+1.0;l1++; }else if(mk>=g3 && mk<g4){ l0=+2.0;l2++;
			  } else if(mk>=g5 && mk<g6){ l0=+3.0;l3++; } else if(mk>=g7 && mk<g8){
			  l0=+4.0;l4++; } else if(mk>=g9 && mk<g10) { l0=+5.0;l5++; }
			  
			  l0t+=l0; l6=l1+l2+l3+l4+l5; l0=l0t/l6; l0v=String.format("%,.4f", l0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("024") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ o0=+1.0;o1++; }else if(mk>=g3 && mk<g4){ o0=+2.0;o2++;
			  } else if(mk>=g5 && mk<g6){ o0=+3.0;o3++; } else if(mk>=g7 && mk<g8){
			  o0=+4.0;o4++; } else if(mk>=g9 && mk<g10) { o0=+5.0;o5++; }
			  
			  o0t+=o0; o6=o1+o2+o3+o4+o5; o0=o0t/o6; o0v=String.format("%,.4f", o0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("025") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ p0=+1.0;p1++; }else if(mk>=g3 && mk<g4){ p0=+2.0;p2++;
			  } else if(mk>=g5 && mk<g6){ p0=+3.0;p3++; } else if(mk>=g7 && mk<g8){
			  p0=+4.0;p4++; } else if(mk>=g9 && mk<g10) { p0=+5.0;p5++; }
			  
			  p0t+=p0; p6=p1+p2+p3+p4+p5; p0=p0t/p6; p0v=String.format("%,.4f", p0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("031") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ q0=+1.0;q1++; }else if(mk>=g3 && mk<g4){ q0=+2.0;q2++;
			  } else if(mk>=g5 && mk<g6){ q0=+3.0;q3++; } else if(mk>=g7 && mk<g8){
			  q0=+4.0;q4++; } else if(mk>=g9 && mk<g10) { q0=+5.0;q5++; }
			  
			  q0t+=q0; q6=q1+q2+q3+q4+q5; q0=q0t/q6; q0v=String.format("%,.4f", q0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("032") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ r0=+1.0;r1++; }else if(mk>=g3 && mk<g4){ r0=+2.0;r2++;
			  } else if(mk>=g5 && mk<g6){ r0=+3.0;r3++; } else if(mk>=g7 && mk<g8){
			  r0=+4.0;r4++; } else if(mk>=g9 && mk<g10) { r0=+5.0;r5++; }
			  
			  r0t+=r0; r6=r1+r2+r3+r4+r5; r0=r0t/r6; r0v=String.format("%,.4f", r0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("033") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ s0=+1.0;s1++; }else if(mk>=g3 && mk<g4){ s0=+2.0;s2++;
			  } else if(mk>=g5 && mk<g6){ s0=+3.0;s3++; } else if(mk>=g7 && mk<g8){
			  s0=+4.0;s4++; } else if(mk>=g9 && mk<g10) { s0=+5.0;s5++; }
			  
			  s0t+=s0; s6=s1+s2+s3+s4+s5; s0=s0t/s6; s0v=String.format("%,.4f", s0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("034") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ t0=+1.0;t1++; }else if(mk>=g3 && mk<g4){ t0=+2.0;t2++;
			  } else if(mk>=g5 && mk<g6){ t0=+3.0;t3++; } else if(mk>=g7 && mk<g8){
			  t0=+4.0;t4++; } else if(mk>=g9 && mk<g10) { t0=+5.0;t5++; }
			  
			  t0t+=t0; t6=t1+t2+t3+t4+t5; t0=t0t/t6; t0v=String.format("%,.4f", t0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("036") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ u0=+1.0;u1++; }else if(mk>=g3 && mk<g4){ u0=+2.0;u2++;
			  } else if(mk>=g5 && mk<g6){ u0=+3.0;u3++; } else if(mk>=g7 && mk<g8){
			  u0=+4.0;u4++; } else if(mk>=g9 && mk<g10) { u0=+5.0;u5++; }
			  
			  u0t+=u0; u6=u1+u2+u3+u4+u5; u0=u0t/u6; u0v=String.format("%,.4f", u0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("041") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ v0=+1.0;v1++; }else if(mk>=g3 && mk<g4){ v0=+2.0;v2++;
			  } else if(mk>=g5 && mk<g6){ v0=+3.0;v3++; } else if(mk>=g7 && mk<g8){
			  v0=+4.0;v4++; } else if(mk>=g9 && mk<g10) { v0=+5.0;v5++; }
			  
			  v0t+=v0; v6=v1+v2+v3+v4+v5; v0=v0t/v6; v0v=String.format("%,.4f", v0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("042") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ w0=+1.0;w1++; }else if(mk>=g3 && mk<g4){ w0=+2.0;w2++;
			  } else if(mk>=g5 && mk<g6){ w0=+3.0;w3++; } else if(mk>=g7 && mk<g8){
			  w0=+4.0;w4++; } else if(mk>=g9 && mk<g10) { w0=+5.0;w5++; }
			  
			  w0t+=w0; w6=w1+w2+w3+w4+w5; w0=w0t/w6; w0v=String.format("%,.4f", w0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("051") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ x0=+1.0;x1++; }else if(mk>=g3 && mk<g4){ x0=+2.0;x2++;
			  } else if(mk>=g5 && mk<g6){ x0=+3.0;x3++; } else if(mk>=g7 && mk<g8){
			  x0=+4.0;x4++; } else if(mk>=g9 && mk<g10) { x0=+5.0;x5++; }
			  
			  x0t+=x0; x6=x1+x2+x3+x4+x5; x0=x0t/x6; x0v=String.format("%,.4f", x0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("052") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ y0=+1.0;y1++; }else if(mk>=g3 && mk<g4){ y0=+2.0;y2++;
			  } else if(mk>=g5 && mk<g6){ y0=+3.0;y3++; } else if(mk>=g7 && mk<g8){
			  y0=+4.0;y4++; } else if(mk>=g9 && mk<g10) { y0=+5.0;y5++; }
			  
			  y0t+=y0; y6=y1+y2+y3+y4+y5; y0=y0t/y6; y0v=String.format("%,.4f", y0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("061") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ z0=+1.0;z1++; }else if(mk>=g3 && mk<g4){ z0=+2.0;z2++;
			  } else if(mk>=g5 && mk<g6){ z0=+3.0;z3++; } else if(mk>=g7 && mk<g8){
			  z0=+4.0;z4++; } else if(mk>=g9 && mk<g10) { z0=+5.0;z5++; }
			  
			  z0t+=z0; z6=z1+z2+z3+z4+z5; z0=z0t/z6; z0v=String.format("%,.4f", z0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("062") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ aa0=+1.0;aa1++; }else if(mk>=g3 && mk<g4){
			  aa0=+2.0;aa2++; } else if(mk>=g5 && mk<g6){ aa0=+3.0;aa3++; } else if(mk>=g7
			  && mk<g8){ aa0=+4.0;aa4++; } else if(mk>=g9 && mk<g10) { aa0=+5.0;aa5++; }
			  
			  aa0t+=aa0; aa6=aa1+aa2+aa3+aa4+aa5; aa0=aa0t/aa6; aa0v=String.format("%,.4f",
			  aa0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("071") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ bb0=+1.0;bb1++; }else if(mk>=g3 && mk<g4){
			  bb0=+2.0;bb2++; } else if(mk>=g5 && mk<g6){ bb0=+3.0;bb3++; } else if(mk>=g7
			  && mk<g8){ bb0=+4.0;bb4++; } else if(mk>=g9 && mk<g10) { bb0=+5.0;bb5++; }
			  
			  bb0t+=bb0; bb6=bb1+bb2+bb3+bb4+bb5; bb0=bb0t/bb6; bb0v=String.format("%,.4f",
			  bb0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("072") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ cc0=+1.0;cc1++; }else if(mk>=g3 && mk<g4){
			  cc0=+2.0;cc2++; } else if(mk>=g5 && mk<g6){ cc0=+3.0;cc3++; } else if(mk>=g7
			  && mk<g8){ cc0=+4.0;cc4++; } else if(mk>=g9 && mk<g10) { cc0=+5.0;cc5++; }
			  
			  cc0t+=cc0; cc6=cc1+cc2+cc3+cc4+cc5; cc0=cc0t/cc6; cc0v=String.format("%,.4f",
			  cc0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("073") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ dd0=+1.0;dd1++; }else if(mk>=g3 && mk<g4){
			  dd0=+2.0;dd2++; } else if(mk>=g5 && mk<g6){ dd0=+3.0;dd3++; } else if(mk>=g7
			  && mk<g8){ dd0=+4.0;dd4++; } else if(mk>=g9 && mk<g10) { dd0=+5.0;dd5++; }
			  
			  dd0t+=dd0; dd6=dd1+dd2+dd3+dd4+dd5; dd0=dd0t/dd6; dd0v=String.format("%,.4f",
			  dd0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("074") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ ee0=+1.0;ee1++; }else if(mk>=g3 && mk<g4){
			  ee0=+2.0;ee2++; } else if(mk>=g5 && mk<g6){ ee0=+3.0;ee3++; } else if(mk>=g7
			  && mk<g8){ ee0=+4.0;ee4++; } else if(mk>=g9 && mk<g10) { ee0=+5.0;ee5++; }
			  
			  ee0t+=ee0; ee6=ee1+ee2+ee3+ee4+ee5; ee0=ee0t/ee6; ee0v=String.format("%,.4f",
			  ee0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("075") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ ff0=+1.0;ff1++; }else if(mk>=g3 && mk<g4){
			  ff0=+2.0;ff2++; } else if(mk>=g5 && mk<g6){ ff0=+3.0;ff3++; } else if(mk>=g7
			  && mk<g8){ ff0=+4.0;ff4++; } else if(mk>=g9 && mk<g10) { ff0=+5.0;ff5++; }
			  
			  ff0t+=ff0; ff6=ff1+ff2+ff3+ff4+ff5; ff0=ff0t/ff6; ff0v=String.format("%,.4f",
			  ff0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("076") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ gg0=+1.0;gg1++; }else if(mk>=g3 && mk<g4){
			  gg0=+2.0;gg2++; } else if(mk>=g5 && mk<g6){ gg0=+3.0;gg3++; } else if(mk>=g7
			  && mk<g8){ gg0=+4.0;gg4++; } else if(mk>=g9 && mk<g10) { gg0=+5.0;gg5++; }
			  
			  gg0t+=gg0; gg6=gg1+gg2+gg3+gg4+gg5; gg0=gg0t/gg6; gg0v=String.format("%,.4f",
			  gg0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("077") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ hh0=+1.0;hh1++; }else if(mk>=g3 && mk<g4){
			  hh0=+2.0;hh2++; } else if(mk>=g5 && mk<g6){ hh0=+3.0;hh3++; } else if(mk>=g7
			  && mk<g8){ hh0=+4.0;hh4++; } else if(mk>=g9 && mk<g10) { hh0=+5.0;hh5++; }
			  
			  hh0t+=hh0; hh6=hh1+hh2+hh3+hh4+hh5; hh0=hh0t/hh6; hh0v=String.format("%,.4f",
			  hh0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("081") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ ii0=+1.0;ii1++; }else if(mk>=g3 && mk<g4){
			  ii0=+2.0;ii2++; } else if(mk>=g5 && mk<g6){ ii0=+3.0;ii3++; } else if(mk>=g7
			  && mk<g8){ ii0=+4.0;ii4++; } else if(mk>=g9 && mk<g10) { ii0=+5.0;ii5++; }
			  
			  ii0t+=ii0; ii6=ii1+ii2+ii3+ii4+ii5; ii0=ii0t/ii6; ii0v=String.format("%,.4f",
			  ii0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("082") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ jj0=+1.0;jj1++; }else if(mk>=g3 && mk<g4){
			  jj0=+2.0;jj2++; } else if(mk>=g5 && mk<g6){ jj0=+3.0;jj3++; } else if(mk>=g7
			  && mk<g8){ jj0=+4.0;jj4++; } else if(mk>=g9 && mk<g10) { jj0=+5.0;jj5++; }
			  
			  jj0t+=jj0; jj6=jj1+jj2+jj3+jj4+jj5; jj0=jj0t/jj6; jj0v=String.format("%,.4f",
			  jj0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("083") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ kk0=+1.0;kk1++; }else if(mk>=g3 && mk<g4){
			  kk0=+2.0;kk2++; } else if(mk>=g5 && mk<g6){ kk0=+3.0;kk3++; } else if(mk>=g7
			  && mk<g8){ kk0=+4.0;kk4++; } else if(mk>=g9 && mk<g10) { kk0=+5.0;kk5++; }
			  
			  kk0t+=kk0; kk6=kk1+kk2+kk3+kk4+kk5; kk0=kk0t/kk6; kk0v=String.format("%,.4f",
			  kk0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("084") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ ll0=+1.0;ll1++; }else if(mk>=g3 && mk<g4){
			  ll0=+2.0;ll2++; } else if(mk>=g5 && mk<g6){ ll0=+3.0;ll3++; } else if(mk>=g7
			  && mk<g8){ ll0=+4.0;ll4++; } else if(mk>=g9 && mk<g10) { ll0=+5.0;ll5++; }
			  
			  ll0t+=ll0; ll6=ll1+ll2+ll3+ll4+ll5; ll0=ll0t/ll6; ll0v=String.format("%,.4f",
			  ll0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("085") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ mm0=+1.0;mm1++; }else if(mk>=g3 && mk<g4){
			  mm0=+2.0;mm2++; } else if(mk>=g5 && mk<g6){ mm0=+3.0;mm3++; } else if(mk>=g7
			  && mk<g8){ mm0=+4.0;mm4++; } else if(mk>=g9 && mk<g10) { mm0=+5.0;mm5++; }
			  
			  mm0t+=mm0; mm6=mm1+mm2+mm3+mm4+mm5; mm0=mm0t/mm6; mm0v=String.format("%,.4f",
			  mm0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("086") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ nn0=+1.0;nn1++; }else if(mk>=g3 && mk<g4){
			  nn0=+2.0;nn2++; } else if(mk>=g5 && mk<g6){ nn0=+3.0;nn3++; } else if(mk>=g7
			  && mk<g8){ nn0=+4.0;nn4++; } else if(mk>=g9 && mk<g10) { nn0=+5.0;nn5++; }
			  
			  nn0t+=nn0; nn6=nn1+nn2+nn3+nn4+nn5; nn0=nn0t/nn6; nn0v=String.format("%,.4f",
			  nn0);
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("092") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ oo0=+1.0;oo1++; }else if(mk>=g3 && mk<g4){
			  oo0=+2.0;oo2++; } else if(mk>=g5 && mk<g6){ oo0=+3.0;oo3++; } else if(mk>=g7
			  && mk<g8){ oo0=+4.0;oo4++; } else if(mk>=g9 && mk<g10) { oo0=+5.0;oo5++; }
			  
			  oo0t+=oo0; oo6=oo1+oo2+oo3+oo4+oo5; oo0=oo0t/oo6; oo0v=String.format("%,.4f",
			  oo0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("093") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ pp0=+1.0;pp1++; }else if(mk>=g3 && mk<g4){
			  pp0=+2.0;pp2++; } else if(mk>=g5 && mk<g6){ pp0=+3.0;pp3++; } else if(mk>=g7
			  && mk<g8){ pp0=+4.0;pp4++; } else if(mk>=g9 && mk<g10) { pp0=+5.0;pp5++; }
			  
			  pp0t+=pp0; pp6=pp1+pp2+pp3+pp4+pp5; pp0=pp0t/pp6; pp0v=String.format("%,.4f",
			  pp0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("094") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ qq0=+1.0;qq1++; }else if(mk>=g3 && mk<g4){
			  qq0=+2.0;qq2++; } else if(mk>=g5 && mk<g6){ qq0=+3.0;qq3++; } else if(mk>=g7
			  && mk<g8){ qq0=+4.0;qq4++; } else if(mk>=g9 && mk<g10) { qq0=+5.0;qq5++; }
			  
			  qq0t+=qq0; qq6=qq1+qq2+qq3+qq4+qq5; qq0=qq0t/qq6; qq0v=String.format("%,.4f",
			  qq0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("095") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ rr0=+1.0;rr1++; }else if(mk>=g3 && mk<g4){
			  rr0=+2.0;rr2++; } else if(mk>=g5 && mk<g6){ rr0=+3.0;rr3++; } else if(mk>=g7
			  && mk<g8){ rr0=+4.0;rr4++; } else if(mk>=g9 && mk<g10) { rr0=+5.0;rr5++; }
			  
			  rr0t+=rr0; rr6=rr1+rr2+rr3+rr4+rr5; rr0=rr0t/rr6; rr0v=String.format("%,.4f",
			  rr0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("096") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ ss0=+1.0;ss1++; }else if(mk>=g3 && mk<g4){
			  ss0=+2.0;ss2++; } else if(mk>=g5 && mk<g6){ ss0=+3.0;ss3++; } else if(mk>=g7
			  && mk<g8){ ss0=+4.0;ss4++; } else if(mk>=g9 && mk<g10) { ss0=+5.0;ss5++; }
			  
			  ss0t+=ss0; ss6=ss1+ss2+ss3+ss4+ss5; ss0=ss0t/ss6; ss0v=String.format("%,.4f",
			  ss0);
			  
			  
			  }
			  
			  if(rs4.getString("sid").equals("097") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ tt0=+1.0;tt1++; }else if(mk>=g3 && mk<g4){
			  tt0=+2.0;tt2++; } else if(mk>=g5 && mk<g6){ tt0=+3.0;tt3++; } else if(mk>=g7
			  && mk<g8){ tt0=+4.0;tt4++; } else if(mk>=g9 && mk<g10) { tt0=+5.0;tt5++; }
			  
			  tt0t+=tt0; tt6=tt1+tt2+tt3+tt4+tt5; tt0=tt0t/tt6; tt0v=String.format("%,.4f",
			  tt0);
			  
			  
			  }
			  
			  
			  if(rs4.getString("sid").equals("098") && !rs4.getString("mark").equals(null)
			  && !rs4.getString("mark").isEmpty() && !rs4.getString("mark").matches("-")) {
			  
			  Double mk=Double.parseDouble(rs4.getString("mark"));
			  
			  
			  if(mk>=g1 && mk<=g2){ uu0=+1.0;uu1++; }else if(mk>=g3 && mk<g4){
			  uu0=+2.0;uu2++; } else if(mk>=g5 && mk<g6){ uu0=+3.0;uu3++; } else if(mk>=g7
			  && mk<g8){ uu0=+4.0;uu4++; } else if(mk>=g9 && mk<g10) { uu0=+5.0;uu5++; }
			  
			  uu0t+=uu0; uu6=uu1+uu2+uu3+uu4+uu5; uu0=uu0t/uu6; uu0v=String.format("%,.4f",
			  uu0);
			  
			  
			  }
			  
			  
			  
			  
			  
			  
			  
			  
			  
			  }
			  
			  
			
			  
			  
			  String sql77="Select sid, " +
			  "sum(CASE WHEN Mark_O.sid = '010' THEN Mark_O.mark ELSE '' END) as civ ," +
			  "sum(CASE WHEN Mark_O.sid = '012' THEN Mark_O.mark ELSE '' END) as his, " +
			  "sum(CASE WHEN Mark_O.sid = '013' THEN Mark_O.mark ELSE '' END) as geo, " +
			  "sum(CASE WHEN Mark_O.sid = '014' THEN Mark_O.mark ELSE '' END) as bible ," +
			  "sum(CASE WHEN Mark_O.sid = '015' THEN Mark_O.mark ELSE '' END) as dini, " +
			  "sum(CASE WHEN Mark_O.sid = '016' THEN Mark_O.mark ELSE '' END) as art, " +
			  "sum(CASE WHEN Mark_O.sid = '017' THEN Mark_O.mark ELSE '' END) as music ," +
			  "sum(CASE WHEN Mark_O.sid = '018' THEN Mark_O.mark ELSE '' END) as edu ," +
			  "sum(CASE WHEN Mark_O.sid = '021' THEN Mark_O.mark ELSE '' END) as kisw, " +
			  "sum(CASE WHEN Mark_O.sid = '022' THEN Mark_O.mark ELSE '' END) as eng ," +
			  "sum(CASE WHEN Mark_O.sid = '023' THEN Mark_O.mark ELSE '' END) as fre, " +
			  "sum(CASE WHEN Mark_O.sid = '024' THEN Mark_O.mark ELSE '' END) as lit, " +
			  "sum(CASE WHEN Mark_O.sid = '025' THEN Mark_O.mark ELSE '' END) as ara ," +
			  "sum(CASE WHEN Mark_O.sid = '031' THEN Mark_O.mark ELSE '' END) as phy, " +
			  "sum(CASE WHEN Mark_O.sid = '032' THEN Mark_O.mark ELSE '' END) as che, " +
			  "sum(CASE WHEN Mark_O.sid = '033' THEN Mark_O.mark ELSE '' END) as bio ," +
			  "sum(CASE WHEN Mark_O.sid = '034' THEN Mark_O.mark ELSE '' END) as agri, " +
			  "sum(CASE WHEN Mark_O.sid = '036' THEN Mark_O.mark ELSE '' END) as it, " +
			  "sum(CASE WHEN Mark_O.sid = '041' THEN Mark_O.mark ELSE '' END) as math ," +
			  "sum(CASE WHEN Mark_O.sid = '042' THEN Mark_O.mark ELSE '' END) as adm, " +
			  "sum(CASE WHEN Mark_O.sid = '051' THEN Mark_O.mark ELSE '' END) as food, " +
			  "sum(CASE WHEN Mark_O.sid = '052' THEN Mark_O.mark ELSE '' END) as textile,"
			  + "sum(CASE WHEN Mark_O.sid = '061' THEN Mark_O.mark ELSE '' END) as com, " +
			  "sum(CASE WHEN Mark_O.sid = '062' THEN Mark_O.mark ELSE '' END) as book, " +
			  "sum(CASE WHEN Mark_O.sid = '071' THEN Mark_O.mark ELSE '' END) as build," +
			  "sum(CASE WHEN Mark_O.sid = '072' THEN Mark_O.mark ELSE '' END) as arch, " +
			  "sum(CASE WHEN Mark_O.sid = '073' THEN Mark_O.mark ELSE '' END) as survey, "
			  + "sum(CASE WHEN Mark_O.sid = '074' THEN Mark_O.mark ELSE '' END) as carp ,"
			  + "sum(CASE WHEN Mark_O.sid = '075' THEN Mark_O.mark ELSE '' END) as brick, "
			  + "sum(CASE WHEN Mark_O.sid = '076' THEN Mark_O.mark ELSE '' END) as paint, "
			  + "sum(CASE WHEN Mark_O.sid = '077' THEN Mark_O.mark ELSE '' END) as plumb, "
			  + "sum(CASE WHEN Mark_O.sid = '081' THEN Mark_O.mark ELSE '' END) as elect, "
			  +
			  "sum(CASE WHEN Mark_O.sid = '082' THEN Mark_O.mark ELSE '' END) as engineer ,"
			  + "sum(CASE WHEN Mark_O.sid = '083' THEN Mark_O.mark ELSE '' END) as radio, "
			  +
			  "sum(CASE WHEN Mark_O.sid = '084' THEN Mark_O.mark ELSE '' END) as draught, "
			  + "sum(CASE WHEN Mark_O.sid = '085' THEN Mark_O.mark ELSE '' END) as ref, " +
			  "sum(CASE WHEN Mark_O.sid = '086' THEN Mark_O.mark ELSE '' END) as plant, " +
			  "sum(CASE WHEN Mark_O.sid = '092' THEN Mark_O.mark ELSE '' END) as work ," +
			  "sum(CASE WHEN Mark_O.sid = '093' THEN Mark_O.mark ELSE '' END) as motor, " +
			  "sum(CASE WHEN Mark_O.sid = '094' THEN Mark_O.mark ELSE '' END) as welding, "
			  + "sum(CASE WHEN Mark_O.sid = '095' THEN Mark_O.mark ELSE '' END) as fit, " +
			  "sum(CASE WHEN Mark_O.sid = '096' THEN Mark_O.mark ELSE '' END) as auto, " +
			  "sum(CASE WHEN Mark_O.sid = '097' THEN Mark_O.mark ELSE '' END) as mechanic, "
			  +
			  "sum(CASE WHEN Mark_O.sid = '098' THEN Mark_O.mark ELSE '' END) as foundry "
			  + " from Mark_O where Mark_O.eid='"+eid+"' and Mark_O.tid ='"
			  +tid+"' and Mark_O.class='"+box40.getSelectedItem().toString()
			  +"' and Mark_O.year='"+box43.getSelectedItem().toString()+"'";
			  
			  ps=con.prepareStatement(sql77); ResultSet rs77=ps.executeQuery();
			  
			  
			    mudi20 = new Table(15);
				mudi20.setWidth(500);

				Paragraph parr1 = new Paragraph("DIVISION PERFORMANCE SUMMARY");
				Paragraph parr2 = new Paragraph("CODE");
				Paragraph parr3 = new Paragraph("SUBJECT NAME");
				Paragraph parr4 = new Paragraph("A");
				Paragraph parr5 = new Paragraph("B");
				Paragraph parr6 = new Paragraph("C");
				Paragraph parr7 = new Paragraph("D");
				Paragraph parr8 = new Paragraph("F");
				Paragraph parr9= new Paragraph("GPA");
				
				Paragraph pac= new Paragraph("010");	Paragraph pan= new Paragraph("CIVICS");Paragraph pa1= new Paragraph(""+a1);Paragraph pa2= new Paragraph(""+a2);
				Paragraph pa3= new Paragraph(""+a3);Paragraph pa4= new Paragraph(""+a4);Paragraph pa5= new Paragraph(""+a5);Paragraph pav= new Paragraph(""+a0v);
				Paragraph pbc= new Paragraph("012");	Paragraph pbn= new Paragraph("HISTORY");Paragraph pb1= new Paragraph(""+b1);Paragraph pb2= new Paragraph(""+b2);
				Paragraph pb3= new Paragraph(""+b3);Paragraph pb4= new Paragraph(""+b4);Paragraph pb5= new Paragraph(""+b5);Paragraph pbv= new Paragraph(""+b0v);
				Paragraph pcc= new Paragraph("013");	Paragraph pcn= new Paragraph("GEOGRAPHY");Paragraph pc1= new Paragraph(""+c1);Paragraph pc2= new Paragraph(""+c2);
				Paragraph pc3= new Paragraph(""+c3);Paragraph pc4= new Paragraph(""+c4);Paragraph pc5= new Paragraph(""+c5);Paragraph pcv= new Paragraph(""+c0v);
				Paragraph pdc= new Paragraph("014");	Paragraph pdn= new Paragraph("BIBLE KNOWLEDGE");Paragraph pd1= new Paragraph(""+d1);Paragraph pd2= new Paragraph(""+d2);
				Paragraph pd3= new Paragraph(""+d3);Paragraph pd4= new Paragraph(""+d4);Paragraph pd5= new Paragraph(""+d5);Paragraph pdv= new Paragraph(""+d0v);
				Paragraph pec= new Paragraph("015");	Paragraph pen= new Paragraph("ELIMU YA DINI YA KIISLAMU");Paragraph pe1= new Paragraph(""+e1);Paragraph pe2= new Paragraph(""+e2);
				Paragraph pe3= new Paragraph(""+e3);Paragraph pe4= new Paragraph(""+e4);Paragraph pe5= new Paragraph(""+e5);Paragraph pev= new Paragraph(""+e0v);
				Paragraph pfc= new Paragraph("016");	Paragraph pfn= new Paragraph("FINE ART");Paragraph pf1= new Paragraph(""+f1);Paragraph pf2= new Paragraph(""+f2);
				Paragraph pf3= new Paragraph(""+f3);Paragraph pf4= new Paragraph(""+f4);Paragraph pf5= new Paragraph(""+f5);Paragraph pfv= new Paragraph(""+f0v);
				Paragraph phc= new Paragraph("017");	Paragraph phn= new Paragraph("MUSIC");Paragraph ph1= new Paragraph(""+h1);Paragraph ph2= new Paragraph(""+h2);
				Paragraph ph3= new Paragraph(""+h3);Paragraph ph4= new Paragraph(""+h4);Paragraph ph5= new Paragraph(""+h5);Paragraph phv= new Paragraph(""+h0v);
				Paragraph pic= new Paragraph("018");	Paragraph pin= new Paragraph("PHYSICAL EDUCATION");Paragraph pi1= new Paragraph(""+i1);Paragraph pi2= new Paragraph(""+i2);
				Paragraph pi3= new Paragraph(""+i3);Paragraph pi4= new Paragraph(""+i4);Paragraph pi5= new Paragraph(""+i5);Paragraph piv= new Paragraph(""+i0v);
				Paragraph pjc= new Paragraph("021");	Paragraph pjn= new Paragraph("KISWAHILI");Paragraph pj1= new Paragraph(""+j1);Paragraph pj2= new Paragraph(""+j2);
				Paragraph pj3= new Paragraph(""+j3);Paragraph pj4= new Paragraph(""+j4);Paragraph pj5= new Paragraph(""+j5);Paragraph pjv= new Paragraph(""+j0v);
				Paragraph pkc= new Paragraph("022");	Paragraph pkn= new Paragraph("ENGLISH LANGAUGE");Paragraph pk1= new Paragraph(""+k1);Paragraph pk2= new Paragraph(""+k2);
				Paragraph pk3= new Paragraph(""+k3);Paragraph pk4= new Paragraph(""+k4);Paragraph pk5= new Paragraph(""+k5);Paragraph pkv= new Paragraph(""+k0v);
				Paragraph plc= new Paragraph("023");	Paragraph pln= new Paragraph("FRENCH LANGAUGE");Paragraph pl1= new Paragraph(""+l1);Paragraph pl2= new Paragraph(""+l2);
				Paragraph pl3= new Paragraph(""+l3);Paragraph pl4= new Paragraph(""+l4);Paragraph pl5= new Paragraph(""+l5);Paragraph plv= new Paragraph(""+l0v);
				Paragraph poc= new Paragraph("024");	Paragraph pon= new Paragraph("LITERATURE IN ENGLISH");Paragraph po1= new Paragraph(""+o1);Paragraph po2= new Paragraph(""+o2);
				Paragraph po3= new Paragraph(""+o3);Paragraph po4= new Paragraph(""+o4);Paragraph po5= new Paragraph(""+o5);Paragraph pov= new Paragraph(""+o0v);
				Paragraph pppc= new Paragraph("025");	Paragraph pppn= new Paragraph("ARABIC LANGUAGE");Paragraph ppp1= new Paragraph(""+p1);Paragraph ppp2= new Paragraph(""+p2);
				Paragraph ppp3= new Paragraph(""+p3);Paragraph ppp4= new Paragraph(""+p4);Paragraph ppp5= new Paragraph(""+p5);Paragraph pppv= new Paragraph(""+p0v);
				Paragraph pqc= new Paragraph("031");	Paragraph pqn= new Paragraph("PHYSICS");Paragraph pq1= new Paragraph(""+q1);Paragraph pq2= new Paragraph(""+q2);
				Paragraph pq3= new Paragraph(""+q3);Paragraph pq4= new Paragraph(""+q4);Paragraph pq5= new Paragraph(""+q5);Paragraph pqv= new Paragraph(""+q0v);
				Paragraph prc= new Paragraph("032");	Paragraph prn= new Paragraph("CHEMISTRY");Paragraph pr1= new Paragraph(""+r1);Paragraph pr2= new Paragraph(""+r2);
				Paragraph pr3= new Paragraph(""+r3);Paragraph pr4= new Paragraph(""+r4);Paragraph pr5= new Paragraph(""+r5);Paragraph prv= new Paragraph(""+r0v);
				Paragraph psc= new Paragraph("033");	Paragraph psn= new Paragraph("BIOLOGY");Paragraph ps1= new Paragraph(""+s1);Paragraph ps2= new Paragraph(""+s2);
				Paragraph ps3= new Paragraph(""+s3);Paragraph ps4= new Paragraph(""+s4);Paragraph ps5= new Paragraph(""+s5);Paragraph psv= new Paragraph(""+s0v);
				Paragraph ptc= new Paragraph("034");	Paragraph ptn= new Paragraph("AGRICULTURAL  SCIENCE");Paragraph pt1= new Paragraph(""+t1);Paragraph pt2= new Paragraph(""+t2);
				Paragraph pt3= new Paragraph(""+t3);Paragraph pt4= new Paragraph(""+t4);Paragraph pt5= new Paragraph(""+t5);Paragraph ptv= new Paragraph(""+t0v);
				Paragraph puc= new Paragraph("036");	Paragraph pun= new Paragraph("INFORMATION AND COMPUTER STUDIES");Paragraph pu1= new Paragraph(""+u1);Paragraph pu2= new Paragraph(""+u2);
				Paragraph pu3= new Paragraph(""+u3);Paragraph pu4= new Paragraph(""+u4);Paragraph pu5= new Paragraph(""+u5);Paragraph puv= new Paragraph(""+u0v);
				Paragraph pvc= new Paragraph("041");	Paragraph pvn= new Paragraph("BASIC MATHEMATICS");Paragraph pv1= new Paragraph(""+v1);Paragraph pv2= new Paragraph(""+v2);
				Paragraph pv3= new Paragraph(""+v3);Paragraph pv4= new Paragraph(""+v4);Paragraph pv5= new Paragraph(""+v5);Paragraph pvv= new Paragraph(""+v0v);
				Paragraph pwc= new Paragraph("042");	Paragraph pwn= new Paragraph("ADDITIONAL MATHEMATICS");Paragraph pw1= new Paragraph(""+w1);Paragraph pw2= new Paragraph(""+w2);
				Paragraph pw3= new Paragraph(""+w3);Paragraph pw4= new Paragraph(""+w4);Paragraph pw5= new Paragraph(""+w5);Paragraph pwv= new Paragraph(""+w0v);
				Paragraph pxc= new Paragraph("051");	Paragraph pxn= new Paragraph("FOOD AND NUTRITION");Paragraph px1= new Paragraph(""+x1);Paragraph px2= new Paragraph(""+x2);
				Paragraph px3= new Paragraph(""+x3);Paragraph px4= new Paragraph(""+x4);Paragraph px5= new Paragraph(""+x5);Paragraph pxv= new Paragraph(""+x0v);
				Paragraph pyc= new Paragraph("052");	Paragraph pyn= new Paragraph("TEXTILES AND DRESSMAKING");Paragraph py1= new Paragraph(""+y1);Paragraph py2= new Paragraph(""+y2);
				Paragraph py3= new Paragraph(""+y3);Paragraph py4= new Paragraph(""+y4);Paragraph py5= new Paragraph(""+y5);Paragraph pyv= new Paragraph(""+y0v);
				Paragraph pzc= new Paragraph("061");	Paragraph pzn= new Paragraph("COMMERCE");Paragraph pz1= new Paragraph(""+z1);Paragraph pz2= new Paragraph(""+z2);
				Paragraph pz3= new Paragraph(""+z3);Paragraph pz4= new Paragraph(""+z4);Paragraph pz5= new Paragraph(""+z5);Paragraph pzv= new Paragraph(""+z0v);
				Paragraph paac= new Paragraph("062");	Paragraph paan= new Paragraph("BOOKEEPING");Paragraph paa1= new Paragraph(""+aa1);Paragraph paa2= new Paragraph(""+aa2);
				Paragraph paa3= new Paragraph(""+aa3);Paragraph paa4= new Paragraph(""+aa4);Paragraph paa5= new Paragraph(""+aa5);Paragraph paav= new Paragraph(""+aa0v);
				Paragraph pbbc= new Paragraph("071");	Paragraph pbbn= new Paragraph("BUILDING CONSTRUCTION");Paragraph pbb1= new Paragraph(""+bb1);Paragraph pbb2= new Paragraph(""+bb2);
				Paragraph pbb3= new Paragraph(""+bb3);Paragraph pbb4= new Paragraph(""+bb4);Paragraph pbb5= new Paragraph(""+bb5);Paragraph pbbv= new Paragraph(""+bb0v);
				Paragraph pccc= new Paragraph("072");	Paragraph pccn= new Paragraph("ARCHITECTURAL DRAUGHTING");Paragraph pcc1= new Paragraph(""+cc1);Paragraph pcc2= new Paragraph(""+cc2);
				Paragraph pcc3= new Paragraph(""+cc3);Paragraph pcc4= new Paragraph(""+cc4);Paragraph pcc5= new Paragraph(""+cc5);Paragraph pccv= new Paragraph(""+cc0v);
				Paragraph pddc= new Paragraph("073");	Paragraph pddn= new Paragraph("SURVEYING");Paragraph pdd1= new Paragraph(""+dd1);Paragraph pdd2= new Paragraph(""+dd2);
				Paragraph pdd3= new Paragraph(""+dd3);Paragraph pdd4= new Paragraph(""+dd4);Paragraph pdd5= new Paragraph(""+dd5);Paragraph pddv= new Paragraph(""+dd0v);
				Paragraph peec= new Paragraph("074");	Paragraph peen= new Paragraph("CARPENTRY AND JOINERY");Paragraph pee1= new Paragraph(""+ee1);Paragraph pee2= new Paragraph(""+ee2);
				Paragraph pee3= new Paragraph(""+ee3);Paragraph pee4= new Paragraph(""+ee4);Paragraph pee5= new Paragraph(""+ee5);Paragraph peev= new Paragraph(""+ee0v);
				Paragraph pffc= new Paragraph("075");	Paragraph pffn= new Paragraph("BRICKWORK AND MASONRY");Paragraph pff1= new Paragraph(""+ff1);Paragraph pff2= new Paragraph(""+ff2);
				Paragraph pff3= new Paragraph(""+ff3);Paragraph pff4= new Paragraph(""+ff4);Paragraph pff5= new Paragraph(""+ff5);Paragraph pffv= new Paragraph(""+ff0v);
				Paragraph pggc= new Paragraph("076");	Paragraph pggn= new Paragraph("PAINTING AND SIGNWRITING");Paragraph pgg1= new Paragraph(""+gg1);Paragraph pgg2= new Paragraph(""+gg2);
				Paragraph pgg3= new Paragraph(""+gg3);Paragraph pgg4= new Paragraph(""+gg4);Paragraph pgg5= new Paragraph(""+gg5);Paragraph pggv= new Paragraph(""+gg0v);
				Paragraph phhc= new Paragraph("077");	Paragraph phhn= new Paragraph("PLUMBING");Paragraph phh1= new Paragraph(""+hh1);Paragraph phh2= new Paragraph(""+hh2);
				Paragraph phh3= new Paragraph(""+hh3);Paragraph phh4= new Paragraph(""+hh4);Paragraph phh5= new Paragraph(""+hh5);Paragraph phhv= new Paragraph(""+hh0v);
				Paragraph piic= new Paragraph("081");	Paragraph piin= new Paragraph("ELECTICAL INSTALLATION");Paragraph pii1= new Paragraph(""+ii1);Paragraph pii2= new Paragraph(""+ii2);
				Paragraph pii3= new Paragraph(""+ii3);Paragraph pii4= new Paragraph(""+ii4);Paragraph pii5= new Paragraph(""+ii5);Paragraph piiv= new Paragraph(""+ii0v);
				Paragraph pjjc= new Paragraph("082");	Paragraph pjjn= new Paragraph("ELECTICAL ENGINEERING SCIENCE");Paragraph pjj1= new Paragraph(""+jj1);Paragraph pjj2= new Paragraph(""+jj2);
				Paragraph pjj3= new Paragraph(""+jj3);Paragraph pjj4= new Paragraph(""+jj4);Paragraph pjj5= new Paragraph(""+jj5);Paragraph pjjv= new Paragraph(""+jj0v);
				Paragraph pkkc= new Paragraph("083");	Paragraph pkkn= new Paragraph("RADIO AND TELEVISION SERVISING");Paragraph pkk1= new Paragraph(""+kk1);Paragraph pkk2= new Paragraph(""+kk2);
				Paragraph pkk3= new Paragraph(""+kk3);Paragraph pkk4= new Paragraph(""+kk4);Paragraph pkk5= new Paragraph(""+kk5);Paragraph pkkv= new Paragraph(""+kk0v);
				Paragraph pllc= new Paragraph("084");	Paragraph plln= new Paragraph("ELETRICAL DRAUGHTING");Paragraph pll1= new Paragraph(""+ll1);Paragraph pll2= new Paragraph(""+ll2);
				Paragraph pll3= new Paragraph(""+ll3);Paragraph pll4= new Paragraph(""+ll4);Paragraph pll5= new Paragraph(""+ll5);Paragraph pllv= new Paragraph(""+ll0v);
				Paragraph pmmc= new Paragraph("085");	Paragraph pmmn= new Paragraph("REFRIGERATION AND AIR CONDITION");Paragraph pmm1= new Paragraph(""+mm1);Paragraph pmm2= new Paragraph(""+mm2);
				Paragraph pmm3= new Paragraph(""+mm3);Paragraph pmm4= new Paragraph(""+mm4);Paragraph pmm5= new Paragraph(""+mm5);Paragraph pmmv= new Paragraph(""+mm0v);
				Paragraph pnnc= new Paragraph("086");	Paragraph pnnn= new Paragraph("PLANT AND EQUIPMENT MAINTANANCE");Paragraph pnn1= new Paragraph(""+nn1);Paragraph pnn2= new Paragraph(""+nn2);
				Paragraph pnn3= new Paragraph(""+nn3);Paragraph pnn4= new Paragraph(""+nn4);Paragraph pnn5= new Paragraph(""+nn5);Paragraph pnnv= new Paragraph(""+nn0v);
				Paragraph pooc= new Paragraph("092");	Paragraph poon= new Paragraph("WORKSHOP TECHNOLOGY");Paragraph poo1= new Paragraph(""+oo1);Paragraph poo2= new Paragraph(""+oo2);
				Paragraph poo3= new Paragraph(""+oo3);Paragraph poo4= new Paragraph(""+oo4);Paragraph poo5= new Paragraph(""+oo5);Paragraph poov= new Paragraph(""+oo0v);
				Paragraph ppppc= new Paragraph("093");	Paragraph ppppn= new Paragraph("MOTOR VEHICLE MECHANICS");Paragraph pppp1= new Paragraph(""+pp1);Paragraph pppp2= new Paragraph(""+pp2);
				Paragraph pppp3= new Paragraph(""+pp3);Paragraph pppp4= new Paragraph(""+pp4);Paragraph pppp5= new Paragraph(""+pp5);Paragraph ppppv= new Paragraph(""+pp0v);
				Paragraph pqqc= new Paragraph("094");	Paragraph pqqn= new Paragraph("WELDING AND METAL FABRICATION");Paragraph pqq1= new Paragraph(""+qq1);Paragraph pqq2= new Paragraph(""+qq2);
				Paragraph pqq3= new Paragraph(""+qq3);Paragraph pqq4= new Paragraph(""+qq4);Paragraph pqq5= new Paragraph(""+qq5);Paragraph pqqv= new Paragraph(""+qq0v);
				Paragraph prrc= new Paragraph("095");	Paragraph prrn= new Paragraph("FITTING AND TURNING");Paragraph prr1= new Paragraph(""+rr1);Paragraph prr2= new Paragraph(""+rr2);
				Paragraph prr3= new Paragraph(""+rr3);Paragraph prr4= new Paragraph(""+rr4);Paragraph prr5= new Paragraph(""+rr5);Paragraph prrv= new Paragraph(""+rr0v);
				Paragraph pssc= new Paragraph("096");	Paragraph pssn= new Paragraph("AUTO ELETRIC");Paragraph pss1= new Paragraph(""+ss1);Paragraph pss2= new Paragraph(""+ss2);
				Paragraph pss3= new Paragraph(""+ss3);Paragraph pss4= new Paragraph(""+ss4);Paragraph pss5= new Paragraph(""+ss5);Paragraph pssv= new Paragraph(""+ss0v);
				Paragraph pttc= new Paragraph("097");	Paragraph pttn= new Paragraph("MECHANICAL DRAUGHTING");Paragraph ptt1= new Paragraph(""+tt1);Paragraph ptt2= new Paragraph(""+tt2);
				Paragraph ptt3= new Paragraph(""+tt3);Paragraph ptt4= new Paragraph(""+tt4);Paragraph ptt5= new Paragraph(""+tt5);Paragraph pttv= new Paragraph(""+tt0v);
				Paragraph puuc= new Paragraph("098");	Paragraph puun= new Paragraph("FOUNDRY AND BLACKSMITH");Paragraph puu1= new Paragraph(""+uu1);Paragraph puu2= new Paragraph(""+uu2);
				Paragraph puu3= new Paragraph(""+uu3);Paragraph puu4= new Paragraph(""+uu4);Paragraph puu5= new Paragraph(""+uu5);Paragraph puuv= new Paragraph(""+uu0v);
			  
				Cell cel1 = new Cell(1, 15).add(parr1).setTextAlignment(TextAlignment.CENTER).setFontSize(10)
						.setBold().setBorder(com.itextpdf.layout.borders.Border.NO_BORDER)
						.setFontColor(new DeviceRgb(0, 0, 255));
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr2).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell(1,7).add(parr3).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr6).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr7).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell().add(parr8).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				cel1 = new Cell(1,2).add(parr9).setTextAlignment(TextAlignment.CENTER).setFontSize(9)
						.setBold();
				mudi20.addHeaderCell(cel1);
				
				if(!rs77.getString("civ").equals("0.0")) {
					cel1 = new Cell().add(pac).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell(1,7).add(pan).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell().add(pa5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					cel1 = new Cell(1,2).add(pav).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
					mudi20.addCell(cel1);
					
				}
					  
					  
					  if(!rs77.getString("his").equals("0.0")) {
							cel1 = new Cell().add(pbc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pbn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pb1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pb2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pb3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pb4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pb5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pbv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("geo").equals("0.0")) {
							cel1 = new Cell().add(pcc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pcn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pc1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pc2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pc3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pc4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pc5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pcv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						} 
					  if(!rs77.getString("bible").equals("0.0")) {
							cel1 = new Cell().add(pdc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pdn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pd1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pd2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pd3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pd4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pd5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pdv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						} 
					  if(!rs77.getString("dini").equals("0.0")) {
							cel1 = new Cell().add(pec).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pen).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pe1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pe2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pe3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pe4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pe5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pev).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  
					  if(!rs77.getString("art").equals("0.0")) {
							cel1 = new Cell().add(pfc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pfn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pf1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pf2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pf3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pf4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pf5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pfv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("music").equals("0.0")) {
							cel1 = new Cell().add(phc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(phn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ph1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ph2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ph3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ph4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ph5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(phv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("edu").equals("0.0")) {
							cel1 = new Cell().add(pic).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pin).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pi1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pi2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pi3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pi4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pi5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(piv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("kisw").equals("0.0")) {
							cel1 = new Cell().add(pjc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pjn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pj1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pj2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pj3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pj4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pj5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pjv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("eng").equals("0.0")) {
							cel1 = new Cell().add(pkc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pkn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pk1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pk2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pk3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pk4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pk5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pkv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("fre").equals("0.0")) {
							cel1 = new Cell().add(plc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pln).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pl1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pl2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pl3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pl4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pl5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(plv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("lit").equals("0.0")) {
							cel1 = new Cell().add(poc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pon).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(po1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(po2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(po3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(po4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(po5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pov).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("ara").equals("0.0")) {
							cel1 = new Cell().add(pppc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pppn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ppp1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ppp2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ppp3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ppp4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ppp5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pppv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("phy").equals("0.0")) {
							cel1 = new Cell().add(pqc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pqn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pq1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pq2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pq3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pq4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pq5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pqv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("che").equals("0.0")) {
							cel1 = new Cell().add(prc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(prn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pr1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pr2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pr3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(prv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						} 
					  if(!rs77.getString("bio").equals("0.0")) {
							cel1 = new Cell().add(psc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(psn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ps1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ps2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ps3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ps4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ps5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(psv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("agri").equals("0.0")) {
							cel1 = new Cell().add(ptc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(ptn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pt1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pt2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pt3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pt4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pt5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(ptv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("it").equals("0.0")) {
							cel1 = new Cell().add(puc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pun).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pu1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pu2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pu3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pu4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pu5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(puv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("math").equals("0.0")) {
							cel1 = new Cell().add(pvc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pvn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pv1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pv2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pv3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pv4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pv5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pvv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("adm").equals("0.0")) {
							cel1 = new Cell().add(pwc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pwn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pw1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pw2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pw3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pw4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pw5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pwv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("food").equals("0.0")) {
							cel1 = new Cell().add(pxc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pxn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(px1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(px2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(px3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(px4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(px5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pxv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("textile").equals("0.0")) {
							cel1 = new Cell().add(pyc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pyn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(py1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(py2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(py3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(py4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(py5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pyv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("com").equals("0.0")) {
							cel1 = new Cell().add(pzc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pzn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pz1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pz2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pz3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pz4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pz5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pzv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						} 
					  if(!rs77.getString("book").equals("0.0")) {
							cel1 = new Cell().add(paac).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(paan).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(paa1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(paa2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(paa3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(paa4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(paa5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(paav).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("build").equals("0.0")) {
							cel1 = new Cell().add(pbbc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pbbn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pbb1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pbb2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pbb3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pbb4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pbb5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pbbv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("arch").equals("0.0")) {
							cel1 = new Cell().add(pccc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pccn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pcc1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pcc2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pcc3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pcc4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pcc5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pccv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  
					  
					  if(!rs77.getString("survey").equals("0.0")) {
							cel1 = new Cell().add(pddc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pddn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pdd1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pdd2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pdd3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pdd4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pdd5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pddv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("carp").equals("0.0")) {
							cel1 = new Cell().add(peec).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(peen).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pee1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pee2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pee3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pee4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pee5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(peev).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("brick").equals("0.0")) {
							cel1 = new Cell().add(pffc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pffn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pff1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pff2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pff3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pff4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pff5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pffv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("paint").equals("0.0")) {
							cel1 = new Cell().add(pggc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pggn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pgg1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pgg2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pgg3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pgg4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pgg5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pggv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("plumb").equals("0.0")) {
							cel1 = new Cell().add(phhc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(phhn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(phh1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(phh2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(phh3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(phh4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(phh5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(phhv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("elect").equals("0.0")) {
							cel1 = new Cell().add(piic).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(piin).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pii1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pii2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pii3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pii4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pii5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(piiv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("engineer").equals("0.0")) {
							cel1 = new Cell().add(pjjc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pjjn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pjj1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pjj2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pjj3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pjj4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pjj5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pjjv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("radio").equals("0.0")) {
							cel1 = new Cell().add(pkkc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pkkn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pkk1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pkk2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pkk3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pkk4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pkk5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pkkv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("draught").equals("0.0")) {
							cel1 = new Cell().add(pllc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(plln).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pll1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pll2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pll3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pll4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pll5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pllv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("ref").equals("0.0")) {
							cel1 = new Cell().add(pmmc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pmm1).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pmm1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pmm2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pmm3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pmm4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pmm5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pmmv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("plant").equals("0.0")) {
							cel1 = new Cell().add(pnnc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pnnn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pnn1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pnn2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pnn3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pnn4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pnn5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pnnv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  
					  if(!rs77.getString("work").equals("0.0")) {
							cel1 = new Cell().add(pooc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(poon).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(poo1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(poo2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(poo3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(poo4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(poo5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(poov).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("motor").equals("0.0")) {
							cel1 = new Cell().add(ppppc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(ppppn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pppp1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pppp2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pppp3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pppp4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pppp5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(ppppv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("welding").equals("0.0")) {
							cel1 = new Cell().add(pqqc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pqqn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pqq1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pqq2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pqq3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pqq4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pqq5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pqqv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  
					  if(!rs77.getString("fit").equals("0.0")) {
							cel1 = new Cell().add(prrc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(prrn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(prr1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(prr2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(prr3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(prr4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(prr5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(prrv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("auto").equals("0.0")) {
							cel1 = new Cell().add(pssc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pssn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pss1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pss2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pss3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pss4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(pss5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pssv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("mechanic").equals("0.0")) {
							cel1 = new Cell().add(pttc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(pttn).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ptt1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ptt2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ptt3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ptt4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(ptt5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(pttv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
					  if(!rs77.getString("foundry").equals("0.0")) {
							cel1 = new Cell().add(puuc).setTextAlignment(TextAlignment.CENTER).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell(1,7).add(puun).setTextAlignment(TextAlignment.LEFT).setFontSize(9).setBold();
							mudi20.addCell(cel1);
							cel1 = new Cell().add(puu1).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(puu2).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(puu3).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(puu4).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell().add(puu5).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							cel1 = new Cell(1,2).add(puuv).setTextAlignment(TextAlignment.CENTER).setFontSize(9);
							mudi20.addCell(cel1);
							
						}
					  
			  }
			  
			 }catch(Exception ex) {
				JOptionPane.showMessageDialog(null, ex.getStackTrace());
			 }
		 
			
		} catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}
		
	
	}
		
	

	private void update() {
      try {
    	  
    	   
				String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
				ps=con.prepareStatement(sql2);
				ResultSet rs2=ps.executeQuery();
				

				String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
				ps=con.prepareStatement(sql3);
				ResultSet rs3=ps.executeQuery();
				
				String eid=rs2.getString("eid");
				String tid=rs3.getString("tid");
				
				
				
				
				String ss="select count(id) from Ave_Mark where eid='"+eid+"' and tid ='"+tid+"' and class='"+t27.getSelectedItem().toString()+"' and year='"+t31.getSelectedItem().toString()+"' ";
				ps=con.prepareStatement(ss);
				ResultSet rs0=ps.executeQuery();
				
				
				
				String ss1="select count(id) from Mark_O where eid='"+eid+"' and tid ='"+tid+"' and class='"+t27.getSelectedItem().toString()+"' and year='"+t31.getSelectedItem().toString()+"' ";
				ps=con.prepareStatement(ss1);
				ResultSet rs1=ps.executeQuery();
				
				
				String sqll="select * from Grade_O";
				ps=con.prepareStatement(sqll);
				ResultSet rs5=ps.executeQuery();
				
			
				 String avg="",div="",tp="";
				 String sum="";
				 int total=0;
				 
				//JOptionPane.showMessageDialog(null, t27.getSelectedItem().toString()+ "   "+t29.getSelectedItem().toString()+"  "+t30.getSelectedItem().toString()+" "+t31.getSelectedItem().toString()  );

				Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
				g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
				g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
				
				
				
				int cou=Integer.parseInt(rs1.getString("count(id)"));
				 int count1=Integer.parseInt(rs0.getString("count(id)"));
				
				
				
				if(cou>0) {
					
					
                 String sql="Select Mark_O.id,Mark_O.mark,Subject_O.sname, "
                 		+ "max(CASE WHEN Mark_O.sid = '010' THEN Mark_O.mark ELSE '' END) as civ ,"
                 		+ "max(CASE WHEN Mark_O.sid = '012' THEN Mark_O.mark ELSE '' END) as his, "
                 		+ "max(CASE WHEN Mark_O.sid = '013' THEN Mark_O.mark ELSE '' END) as geo, "
                 		+ "max(CASE WHEN Mark_O.sid = '014' THEN Mark_O.mark ELSE '' END) as bible ,"
                 		+ "max(CASE WHEN Mark_O.sid = '015' THEN Mark_O.mark ELSE '' END) as dini, "
                 		+ "max(CASE WHEN Mark_O.sid = '016' THEN Mark_O.mark ELSE '' END) as art, "
                 		+ "max(CASE WHEN Mark_O.sid = '017' THEN Mark_O.mark ELSE '' END) as music ,"
                 		+ "max(CASE WHEN Mark_O.sid = '018' THEN Mark_O.mark ELSE '' END) as edu ,"
                 		+ "max(CASE WHEN Mark_O.sid = '021' THEN Mark_O.mark ELSE '' END) as kisw, "
                 		+ "max(CASE WHEN Mark_O.sid = '022' THEN Mark_O.mark ELSE '' END) as eng ,"
                 		+ "max(CASE WHEN Mark_O.sid = '023' THEN Mark_O.mark ELSE '' END) as fre, "
                 		+ "max(CASE WHEN Mark_O.sid = '024' THEN Mark_O.mark ELSE '' END) as lit, "
                 		+ "max(CASE WHEN Mark_O.sid = '025' THEN Mark_O.mark ELSE '' END) as ara ,"
                 		+ "max(CASE WHEN Mark_O.sid = '031' THEN Mark_O.mark ELSE '' END) as phy, "
                 		+ "max(CASE WHEN Mark_O.sid = '032' THEN Mark_O.mark ELSE '' END) as che, "
                 		+ "max(CASE WHEN Mark_O.sid = '033' THEN Mark_O.mark ELSE '' END) as bio ,"
                 		+ "max(CASE WHEN Mark_O.sid = '034' THEN Mark_O.mark ELSE '' END) as agri, "
                 		+ "max(CASE WHEN Mark_O.sid = '036' THEN Mark_O.mark ELSE '' END) as it, "
                 		+ "max(CASE WHEN Mark_O.sid = '041' THEN Mark_O.mark ELSE '' END) as math ,"
                 		+ "max(CASE WHEN Mark_O.sid = '042' THEN Mark_O.mark ELSE '' END) as adm, "
                 		+ "max(CASE WHEN Mark_O.sid = '051' THEN Mark_O.mark ELSE '' END) as food, "
                 		+ "max(CASE WHEN Mark_O.sid = '052' THEN Mark_O.mark ELSE '' END) as textile,"
                 		+ "max(CASE WHEN Mark_O.sid = '061' THEN Mark_O.mark ELSE '' END) as com, "
                 		+ "max(CASE WHEN Mark_O.sid = '062' THEN Mark_O.mark ELSE '' END) as book, "
                 		+ "max(CASE WHEN Mark_O.sid = '071' THEN Mark_O.mark ELSE '' END) as build,"
                 		+ "max(CASE WHEN Mark_O.sid = '072' THEN Mark_O.mark ELSE '' END) as arch, "
                 		+ "max(CASE WHEN Mark_O.sid = '073' THEN Mark_O.mark ELSE '' END) as survey, "
                 		+ "max(CASE WHEN Mark_O.sid = '074' THEN Mark_O.mark ELSE '' END) as carp ,"
                 		+ "max(CASE WHEN Mark_O.sid = '075' THEN Mark_O.mark ELSE '' END) as brick, "
                 		+ "max(CASE WHEN Mark_O.sid = '076' THEN Mark_O.mark ELSE '' END) as paint, "
                 		+ "max(CASE WHEN Mark_O.sid = '077' THEN Mark_O.mark ELSE '' END) as plumb, "
                 		+ "max(CASE WHEN Mark_O.sid = '081' THEN Mark_O.mark ELSE '' END) as elect, "
                 		+ "max(CASE WHEN Mark_O.sid = '082' THEN Mark_O.mark ELSE '' END) as engineer ,"
                 		+ "max(CASE WHEN Mark_O.sid = '083' THEN Mark_O.mark ELSE '' END) as radio, "
                 		+ "max(CASE WHEN Mark_O.sid = '084' THEN Mark_O.mark ELSE '' END) as draught, "
                 		+ "max(CASE WHEN Mark_O.sid = '085' THEN Mark_O.mark ELSE '' END) as ref, "
                 		+ "max(CASE WHEN Mark_O.sid = '086' THEN Mark_O.mark ELSE '' END) as plant, "
                 		+ "max(CASE WHEN Mark_O.sid = '092' THEN Mark_O.mark ELSE '' END) as work ,"
                 		+ "max(CASE WHEN Mark_O.sid = '093' THEN Mark_O.mark ELSE '' END) as motor, "
                 		+ "max(CASE WHEN Mark_O.sid = '094' THEN Mark_O.mark ELSE '' END) as welding, "
                 		+ "max(CASE WHEN Mark_O.sid = '095' THEN Mark_O.mark ELSE '' END) as fit, "
                 		+ "max(CASE WHEN Mark_O.sid = '096' THEN Mark_O.mark ELSE '' END) as auto, "
                 		+ "max(CASE WHEN Mark_O.sid = '097' THEN Mark_O.mark ELSE '' END) as mechanic, "
                 		+ "max(CASE WHEN Mark_O.sid = '098' THEN Mark_O.mark ELSE '' END) as foundry "
                 		+ "from Mark_O "
                 		+ "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
                 		+ "INNER JOIN Subject_O ON Subject_O.sid = Mark_O.sid "
                 		+ " where Mark_O.eid='"+eid+"' and Mark_O.tid ='"+tid+"' and Mark_O.class='"+t27.getSelectedItem().toString()+"' and Mark_O.year='"+t31.getSelectedItem().toString()+"' GROUP BY Mark_O.id,Ouser.id    ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC ";
                        
					
					ps = con.prepareStatement(sql);
					rs = ps.executeQuery();

					while (rs.next()) {

						
						String cv=rs.getString("civ");String his=rs.getString("his");String geo=rs.getString("geo");String bible=rs.getString("bible");
						String dini=rs.getString("dini");String art=rs.getString("art");String music=rs.getString("music");String edu=rs.getString("edu");
						String kisw=rs.getString("kisw");String eng=rs.getString("eng");String fre=rs.getString("fre");String lit=rs.getString("lit");
						String ara=rs.getString("ara");String phy=rs.getString("phy");String che=rs.getString("che");String bio=rs.getString("bio");
						String agri=rs.getString("agri");String it=rs.getString("it");String math=rs.getString("math");String adm=rs.getString("adm");
						String food=rs.getString("food");String textile=rs.getString("textile");String com=rs.getString("com");String book=rs.getString("book");
						String build=rs.getString("build");String arch=rs.getString("arch");String survey=rs.getString("survey");String carp=rs.getString("carp");
						String brick=rs.getString("brick");String paint=rs.getString("paint");String plumb=rs.getString("plumb");String elect=rs.getString("elect");
						String engineer=rs.getString("engineer");String radio=rs.getString("radio");String draught=rs.getString("draught");String ref=rs.getString("ref");
						String plant=rs.getString("plant");String work=rs.getString("work");String motor=rs.getString("motor");String welding=rs.getString("welding");
						String fit=rs.getString("fit");String auto=rs.getString("auto");String mechanic=rs.getString("mechanic");String foundry=rs.getString("foundry");
						
						
						String m0="";String m1="";String m2="";String m3="";String m4="";String m5="";String m6="";String m7="";String m8="";String m9="";
						String m10="";String m11="";String m12="";String m13="";String m14="";String m15="";String m16="";String m17="";String m18="";String m19="";
						String m20="";String m21="";String m22="";String m23="";String m24="";String m25="";String m26="";String m27="";String m28="";String m29="";
						String m30="";String m31="";String m32="";String m33="";String m34="";String m35="";String m36="";String m37="";String m38="";String m39="";
						String m40="";String m41="";String m42="";String m43="";
						
						
						Double dm0=0.0;Double dm1=0.0;Double dm2=0.0;Double dm3=0.0;Double dm4=0.0;Double dm5=0.0;Double dm6=0.0;Double dm7=0.0;Double dm8=0.0;Double dm9=0.0;
						Double dm10=0.0;Double dm11=0.0;Double dm12=0.0;Double dm13=0.0;Double dm14=0.0;Double dm15=0.0;Double dm16=0.0;Double dm17=0.0;Double dm18=0.0;Double dm19=0.0;
						Double dm20=0.0;Double dm21=0.0;Double dm22=0.0;Double dm23=0.0;Double dm24=0.0;Double dm25=0.0;Double dm26=0.0;Double dm27=0.0;Double dm28=0.0;Double dm29=0.0;
						Double dm30=0.0;Double dm31=0.0;Double dm32=0.0;Double dm33=0.0;Double dm34=0.0;Double dm35=0.0;Double dm36=0.0;Double dm37=0.0;Double dm38=0.0;Double dm39=0.0;
						Double dm40=0.0;Double dm41=0.0;Double dm42=0.0;Double dm43=0.0;
						
						
						
						String gr0="";String gr1="";String gr2="";String gr3="";String gr4="";String gr5="";String gr6="";String gr7="";String gr8="";String gr9="";
						String gr10="";String gr11="";String gr12="";String gr13="";String gr14="";String gr15="";String gr16="";String gr17="";String gr18="";String gr19="";
						String gr20="";String gr21="";String gr22="";String gr23="";String gr24="";String gr25="";String gr26="";String gr27="";String gr28="";String gr29="";
						String gr30="";String gr31="";String gr32="";String gr33="";String gr34="";String gr35="";String gr36="";String gr37="";String gr38="";String gr39="";
						String gr40="";String gr41="";String gr42="";String gr43="";
						
						
					
						Double gp0=0.0;Double gp1=0.0;Double gp2=0.0;Double gp3=0.0;Double gp4=0.0;Double gp5=0.0;Double gp6=0.0;Double gp7=0.0;Double gp8=0.0;Double gp9=0.0;
						Double gp10=0.0;Double gp11=0.0;Double gp12=0.0;Double gp13=0.0;Double gp14=0.0;Double gp15=0.0;Double gp16=0.0;Double gp17=0.0;Double gp18=0.0;Double gp19=0.0;
						Double gp20=0.0;Double gp21=0.0;Double gp22=0.0;Double gp23=0.0;Double gp24=0.0;Double gp25=0.0;Double gp26=0.0;Double gp27=0.0;Double gp28=0.0;Double gp29=0.0;
						Double gp30=0.0;Double gp31=0.0;Double gp32=0.0;Double gp33=0.0;Double gp34=0.0;Double gp35=0.0;Double gp36=0.0;Double gp37=0.0;Double gp38=0.0;Double gp39=0.0;
						Double gp40=0.0;Double gp41=0.0;Double gp42=0.0;Double gp43=0.0;
						
						
						
						
						int n0=0;int n1=0;int n2=0;int n3=0;int n4=0;int n5=0;int n6=0;int n7=0;int n8=0;int n9=0;
						int n10=0;int n11=0;int n12=0;int n13=0;int n14=0;int n15=0;int n16=0;int n17=0;int n18=0;int n19=0;
						int n20=0;int n21=0;int n22=0;int n23=0;int n24=0;int n25=0;int n26=0;int n27=0;int n28=0;int n29=0;
						int n30=0;int n31=0;int n32=0;int n33=0;int n34=0;int n35=0;int n36=0;int n37=0;int n38=0;int n39=0;
						int n40=0;int n41=0;int n42=0;int n43=0;
						
						
						
						
						
						
                      
						
						if(cv.isEmpty() || cv.equals(null)) {
							
							m0="";
							gr0="";
							
						}else {
							
							if(cv.equals("-")) {
								
								m0="-";
								gr0="-";
								
							}else {
								
								m0=cv;
								dm0=Double.parseDouble(cv);
								n0=1;
								
								if(dm0>=g1 && dm0<=g2) {
									gr0="A";
								}else if(dm0>=g3 && dm0<=g4) {
									gr0="B";
								}else if(dm0>=g5 && dm0<=g6) {
									gr0="C";
								}else if(dm0>=g7 && dm0<=g8) {
									gr0="D";
								}else if(dm0>=g9 && dm0<=g10) {
									gr0="F";
								}
								
								
							}
							
						}
						
						

						if(his.isEmpty() || his.equals(null)) {
							
							m1="";
							gr1="";
							
						}else {
							
							if(his.equals("-")) {
								
								m1="-";
								gr1="-";
								
							}else {
								
								m1=his;
								dm1=Double.parseDouble(his);
								n1=1;
								
								if(dm1>=g1 && dm1<=g2) {
									gr1="A";
								}else if(dm1>=g3 && dm1<=g4) {
									gr1="B";
								}else if(dm1>=g5 && dm1<=g6) {
									gr1="C";
								}else if(dm1>=g7 && dm1<=g8) {
									gr1="D";
								}else if(dm1>=g9 && dm1<=g10) {
									gr1="F";
								}
								
								
							}
							
						}	
						
						
						
						
                   if(geo.isEmpty() || geo.equals(null)) {
							
							m2="";
							gr2="";
							
						}else {
							
							if(geo.equals("-")) {
								
								m2="-";
								gr2="-";
								
							}else {
								
								m2=geo;
								dm2=Double.parseDouble(geo);
								n2=1;
								
								if(dm2>=g1 && dm2<=g2) {
									gr2="A";
								}else if(dm2>=g3 && dm2<=g4) {
									gr2="B";
								}else if(dm2>=g5 && dm2<=g6) {
									gr2="C";
								}else if(dm2>=g7 && dm2<=g8) {
									gr2="D";
								}else if(dm2>=g9 && dm2<=g10) {
									gr2="F";
								}
								
								
							}
							
						}	
						
						
						
                   if(bible.isEmpty() || bible.equals(null)) {
							
							m3="";
							gr3="";
							
						}else {
							
							if(bible.equals("-")) {
								
								m3="-";
								gr3="-";
								
							}else {
								
								m3=bible;
								dm3=Double.parseDouble(bible);
								n3=1;
								
								if(dm3>=g1 && dm3<=g2) {
									gr3="A";
								}else if(dm3>=g3 && dm3<=g4) {
									gr3="B";
								}else if(dm3>=g5 && dm3<=g6) {
									gr3="C";
								}else if(dm3>=g7 && dm3<=g8) {
									gr3="D";
								}else if(dm3>=g9 && dm3<=g10) {
									gr3="F";
								}
								
								
							}
							
						}	
						
                   
                   if(dini.isEmpty() || dini.equals(null)) {
							
							m4="";
							gr4="";
							
						}else {
							
							if(dini.equals("-")) {
								
								m4="-";
								gr4="-";
								
							}else {
								
								m4=dini;
								dm4=Double.parseDouble(dini);
								n4=1;
								
								if(dm4>=g1 && dm4<=g2) {
									gr4="A";
								}else if(dm4>=g3 && dm4<=g4) {
									gr4="B";
								}else if(dm4>=g5 && dm4<=g6) {
									gr4="C";
								}else if(dm4>=g7 && dm4<=g8) {
									gr4="D";
								}else if(dm4>=g9 && dm4<=g10) {
									gr4="F";
								}
								
								
							}
							
						}	
                   
                   
                   if(art.isEmpty() || art.equals(null)) {
							
							m5="";
							gr5="";
							
						}else {
							
							if(art.equals("-")) {
								
								m5="-";
								gr5="-";
								
							}else {
								
								m5=art;
								dm5=Double.parseDouble(art);
								n5=1;
								
								if(dm5>=g1 && dm5<=g2) {
									gr5="A";
								}else if(dm5>=g3 && dm5<=g4) {
									gr5="B";
								}else if(dm5>=g5 && dm5<=g6) {
									gr5="C";
								}else if(dm5>=g7 && dm5<=g8) {
									gr5="D";
								}else if(dm5>=g9 && dm5<=g10) {
									gr5="F";
								}
								
								
							}
							
						}	
                   
                   
                   if(music.isEmpty() || music.equals(null)) {
							
							m6="";
							gr6="";
							
						}else {
							
							if(music.equals("-")) {
								
								m6="-";
								gr6="-";
								
							}else {
								
								m6=music;
								dm6=Double.parseDouble(music);
								n6=1;
								
								if(dm6>=g1 && dm6<=g2) {
									gr6="A";
								}else if(dm6>=g3 && dm6<=g4) {
									gr6="B";
								}else if(dm6>=g5 && dm6<=g6) {
									gr6="C";
								}else if(dm6>=g7 && dm6<=g8) {
									gr6="D";
								}else if(dm6>=g9 && dm6<=g10) {
									gr6="F";
								}
									
							}
							
						}	
                   
                   
                   if(edu.isEmpty() || edu.equals(null)) {
							
							m7="";
							gr7="";
							
						}else {
							
							if(edu.equals("-")) {
								
								m7="-";
								gr7="-";
								
							}else {
								
								m7=edu;
								dm7=Double.parseDouble(edu);
								n7=1;
								
								if(dm7>=g1 && dm7<=g2) {
									gr7="A";
								}else if(dm7>=g3 && dm7<=g4) {
									gr7="B";
								}else if(dm7>=g5 && dm7<=g6) {
									gr7="C";
								}else if(dm7>=g7 && dm7<=g8) {
									gr7="D";
								}else if(dm7>=g9 && dm7<=g10) {
									gr7="F";
								}
									
							}
							
						}	
                   
                   
                   
                   if(kisw.isEmpty() || kisw.equals(null)) {
							
							m8="";
							gr8="";
							
						}else {
							
							if(kisw.equals("-")) {
								
								m8="-";
								gr8="-";
								
							}else {
								
								m8=kisw;
								dm8=Double.parseDouble(kisw);
								n8=1;
								
								if(dm8>=g1 && dm8<=g2) {
									gr8="A";
								}else if(dm8>=g3 && dm8<=g4) {
									gr8="B";
								}else if(dm8>=g5 && dm8<=g6) {
									gr8="C";
								}else if(dm8>=g7 && dm8<=g8) {
									gr8="D";
								}else if(dm8>=g9 && dm8<=g10) {
									gr8="F";
								}
									
							}
							
						}	
                   
                   
                   
                   if(eng.isEmpty() || eng.equals(null)) {
							
							m9="";
							gr9="";
							
						}else {
							
							if(eng.equals("-")) {
								
								m9="-";
								gr9="-";
								
							}else {
								
								m9=eng;
								dm9=Double.parseDouble(eng);
								n9=1;
								
								if(dm9>=g1 && dm9<=g2) {
									gr9="A";
								}else if(dm9>=g3 && dm9<=g4) {
									gr9="B";
								}else if(dm9>=g5 && dm9<=g6) {
									gr9="C";
								}else if(dm9>=g7 && dm9<=g8) {
									gr9="D";
								}else if(dm9>=g9 && dm9<=g10) {
									gr9="F";
								}
									
							}
							
						}	
                   
                   
                   
                   
                   if(fre.isEmpty() || fre.equals(null)) {
							
							m10="";
							gr10="";
							
						}else {
							
							if(fre.equals("-")) {
								
								m10="-";
								gr10="-";
								
							}else {
								
								m10=fre;
								dm10=Double.parseDouble(fre);
								n10=1;
								
								if(dm10>=g1 && dm10<=g2) {
									gr10="A";
								}else if(dm10>=g3 && dm10<=g4) {
									gr10="B";
								}else if(dm10>=g5 && dm10<=g6) {
									gr10="C";
								}else if(dm10>=g7 && dm10<=g8) {
									gr10="D";
								}else if(dm10>=g9 && dm10<=g10) {
									gr10="F";
								}
									
							}
							
						}	
                   
                   
                   if(lit.isEmpty() || lit.equals(null)) {
							
							m11="";
							gr11="";
							
						}else {
							
							if(lit.equals("-")) {
								
								m11="-";
								gr11="-";
								
							}else {
								
								m11=lit;
								dm11=Double.parseDouble(lit);
								n11=1;
								
								if(dm11>=g1 && dm11<=g2) {
									gr11="A";
								}else if(dm11>=g3 && dm11<=g4) {
									gr11="B";
								}else if(dm11>=g5 && dm11<=g6) {
									gr11="C";
								}else if(dm11>=g7 && dm11<=g8) {
									gr11="D";
								}else if(dm11>=g9 && dm11<=g10) {
									gr11="F";
								}
									
							}
							
						}	
                   
                   
                   
                   if(ara.isEmpty() || ara.equals(null)) {
							
							m12="";
							gr12="";
							
						}else {
							
							if(ara.equals("-")) {
								
								m12="-";
								gr12="-";
								
							}else {
								
								m12=ara;
								dm12=Double.parseDouble(ara);
								n12=1;
								
								if(dm12>=g1 && dm12<=g2) {
									gr12="A";
								}else if(dm12>=g3 && dm12<=g4) {
									gr12="B";
								}else if(dm12>=g5 && dm12<=g6) {
									gr12="C";
								}else if(dm12>=g7 && dm12<=g8) {
									gr12="D";
								}else if(dm12>=g9 && dm12<=g10) {
									gr12="F";
								}
									
							}
							
						}	
                   
                   
                   
                   if(phy.isEmpty() || phy.equals(null)) {
							
							m13="";
							gr13="";
							
						}else {
							
							if(phy.equals("-")) {
								
								m13="-";
								gr13="-";
								
							}else {
								
								m13=phy;
								dm13=Double.parseDouble(phy);
								n13=1;
								
								if(dm13>=g1 && dm13<=g2) {
									gr13="A";
								}else if(dm13>=g3 && dm13<=g4) {
									gr13="B";
								}else if(dm13>=g5 && dm13<=g6) {
									gr13="C";
								}else if(dm13>=g7 && dm13<=g8) {
									gr13="D";
								}else if(dm13>=g9 && dm13<=g10) {
									gr13="F";
								}
									
							}
							
						}	
                   
                   
                   if(che.isEmpty() || che.equals(null)) {
							
							m14="";
							gr14="";
							
						}else {
							
							if(che.equals("-")) {
								
								m14="-";
								gr14="-";
								
							}else {
								
								m14=che;
								dm14=Double.parseDouble(che);
								n14=1;
								
								if(dm14>=g1 && dm14<=g2) {
									gr14="A";
								}else if(dm14>=g3 && dm14<=g4) {
									gr14="B";
								}else if(dm14>=g5 && dm14<=g6) {
									gr14="C";
								}else if(dm14>=g7 && dm14<=g8) {
									gr14="D";
								}else if(dm14>=g9 && dm14<=g10) {
									gr14="F";
								}
									
							}
							
						}	
                   
                   
                   if(bio.isEmpty() || bio.equals(null)) {
							
							m15="";
							gr15="";
							
						}else {
							
							if(bio.equals("-")) {
								
								m15="-";
								gr15="-";
								
							}else {
								
								m15=bio;
								dm15=Double.parseDouble(bio);
								n15=1;
								
								if(dm15>=g1 && dm15<=g2) {
									gr15="A";
								}else if(dm15>=g3 && dm15<=g4) {
									gr15="B";
								}else if(dm15>=g5 && dm15<=g6) {
									gr15="C";
								}else if(dm15>=g7 && dm15<=g8) {
									gr15="D";
								}else if(dm15>=g9 && dm15<=g10) {
									gr15="F";
								}
									
							}
							
						}	
                   
                   
                   if(agri.isEmpty() || agri.equals(null)) {
							
							m16="";
							gr16="";
							
						}else {
							
							if(agri.equals("-")) {
								
								m16="-";
								gr16="-";
								
							}else {
								
								m16=agri;
								dm16=Double.parseDouble(agri);
								n16=1;
								
								if(dm16>=g1 && dm16<=g2) {
									gr16="A";
								}else if(dm16>=g3 && dm16<=g4) {
									gr16="B";
								}else if(dm16>=g5 && dm16<=g6) {
									gr16="C";
								}else if(dm16>=g7 && dm16<=g8) {
									gr16="D";
								}else if(dm16>=g9 && dm16<=g10) {
									gr16="F";
								}
									
							}
							
						}	
                   
                   
                   if(it.isEmpty() || it.equals(null)) {
							
							m17="";
							gr17="";
							
						}else {
							
							if(it.equals("-")) {
								
								m17="-";
								gr17="-";
								
							}else {
								
								m17=it;
								dm17=Double.parseDouble(it);
								n17=1;
								
								if(dm17>=g1 && dm17<=g2) {
									gr17="A";
								}else if(dm17>=g3 && dm17<=g4) {
									gr17="B";
								}else if(dm17>=g5 && dm17<=g6) {
									gr17="C";
								}else if(dm17>=g7 && dm17<=g8) {
									gr17="D";
								}else if(dm17>=g9 && dm17<=g10) {
									gr17="F";
								}
									
							}
							
						}
                   
                   if(math.isEmpty() || math.equals(null)) {
							
							m18="";
							gr18="";
							
						}else {
							
							if(math.equals("-")) {
								
								m18="-";
								gr18="-";
								
							}else {
								
								m18=math;
								dm18=Double.parseDouble(math);
								n18=1;
								
								if(dm18>=g1 && dm18<=g2) {
									gr18="A";
								}else if(dm18>=g3 && dm18<=g4) {
									gr18="B";
								}else if(dm18>=g5 && dm18<=g6) {
									gr18="C";
								}else if(dm18>=g7 && dm18<=g8) {
									gr18="D";
								}else if(dm18>=g9 && dm18<=g10) {
									gr18="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(adm.isEmpty() || adm.equals(null)) {
							
							m19="";
							gr19="";
							
						}else {
							
							if(adm.equals("-")) {
								
								m19="-";
								gr19="-";
								
							}else {
								
								m19=adm;
								dm19=Double.parseDouble(adm);
								n19=1;
								
								if(dm19>=g1 && dm19<=g2) {
									gr19="A";
								}else if(dm19>=g3 && dm19<=g4) {
									gr19="B";
								}else if(dm19>=g5 && dm19<=g6) {
									gr19="C";
								}else if(dm19>=g7 && dm19<=g8) {
									gr19="D";
								}else if(dm19>=g9 && dm19<=g10) {
									gr19="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(food.isEmpty() || food.equals(null)) {
							
							m20="";
							gr20="";
							
						}else {
							
							if(food.equals("-")) {
								
								m20="-";
								gr20="-";
								
							}else {
								
								m20=food;
								dm20=Double.parseDouble(food);
								n20=1;
								
								if(dm20>=g1 && dm20<=g2) {
									gr20="A";
								}else if(dm20>=g3 && dm20<=g4) {
									gr20="B";
								}else if(dm20>=g5 && dm20<=g6) {
									gr20="C";
								}else if(dm20>=g7 && dm20<=g8) {
									gr20="D";
								}else if(dm20>=g9 && dm20<=g10) {
									gr20="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(textile.isEmpty() || textile.equals(null)) {
							
							m21="";
							gr21="";
							
						}else {
							
							if(textile.equals("-")) {
								
								m21="-";
								gr21="-";
								
							}else {
								
								m21=textile;
								dm21=Double.parseDouble(textile);
								n21=1;
								
								if(dm21>=g1 && dm21<=g2) {
									gr21="A";
								}else if(dm21>=g3 && dm21<=g4) {
									gr21="B";
								}else if(dm21>=g5 && dm21<=g6) {
									gr21="C";
								}else if(dm21>=g7 && dm21<=g8) {
									gr21="D";
								}else if(dm21>=g9 && dm21<=g10) {
									gr21="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(com.isEmpty() || com.equals(null)) {
							
							m22="";
							gr22="";
							
						}else {
							
							if(com.equals("-")) {
								
								m22="-";
								gr22="-";
								
							}else {
								
								m22=com;
								dm22=Double.parseDouble(com);
								n22=1;
								
								if(dm22>=g1 && dm22<=g2) {
									gr22="A";
								}else if(dm22>=g3 && dm22<=g4) {
									gr22="B";
								}else if(dm22>=g5 && dm22<=g6) {
									gr22="C";
								}else if(dm22>=g7 && dm22<=g8) {
									gr22="D";
								}else if(dm22>=g9 && dm22<=g10) {
									gr22="F";
								}
									
							}
							
						}
                
                   
                   
                   if(book.isEmpty() || book.equals(null)) {
							
							m23="";
							gr23="";
							
						}else {
							
							if(book.equals("-")) {
								
								m23="-";
								gr23="-";
								
							}else {
								
								m23=book;
								dm23=Double.parseDouble(book);
								n23=1;
								
								if(dm23>=g1 && dm23<=g2) {
									gr23="A";
								}else if(dm23>=g3 && dm23<=g4) {
									gr23="B";
								}else if(dm23>=g5 && dm23<=g6) {
									gr23="C";
								}else if(dm23>=g7 && dm23<=g8) {
									gr23="D";
								}else if(dm23>=g9 && dm23<=g10) {
									gr23="F";
								}
									
							}
							
						}
                   
                   
                   if(build.isEmpty() || build.equals(null)) {
							
							m24="";
							gr24="";
							
						}else {
							
							if(build.equals("-")) {
								
								m24="-";
								gr24="-";
								
							}else {
								
								m24=build;
								dm24=Double.parseDouble(build);
								n24=1;
								
								if(dm24>=g1 && dm24<=g2) {
									gr24="A";
								}else if(dm24>=g3 && dm24<=g4) {
									gr24="B";
								}else if(dm24>=g5 && dm24<=g6) {
									gr24="C";
								}else if(dm24>=g7 && dm24<=g8) {
									gr24="D";
								}else if(dm24>=g9 && dm24<=g10) {
									gr24="F";
								}
									
							}
							
						}
                   
                   if(arch.isEmpty() || arch.equals(null)) {
							
							m25="";
							gr25="";
							
						}else {
							
							if(arch.equals("-")) {
								
								m25="-";
								gr25="-";
								
							}else {
								
								m25=arch;
								dm25=Double.parseDouble(arch);
								n25=1;
								
								if(dm25>=g1 && dm25<=g2) {
									gr25="A";
								}else if(dm25>=g3 && dm25<=g4) {
									gr25="B";
								}else if(dm25>=g5 && dm25<=g6) {
									gr25="C";
								}else if(dm25>=g7 && dm25<=g8) {
									gr25="D";
								}else if(dm25>=g9 && dm25<=g10) {
									gr25="F";
								}
									
							}
							
						}
                   
                   
                   if(survey.isEmpty() || survey.equals(null)) {
							
							m26="";
							gr26="";
							
						}else {
							
							if(survey.equals("-")) {
								
								m26="-";
								gr26="-";
								
							}else {
								
								m26=survey;
								dm26=Double.parseDouble(survey);
								n26=1;
								
								if(dm26>=g1 && dm26<=g2) {
									gr26="A";
								}else if(dm26>=g3 && dm26<=g4) {
									gr26="B";
								}else if(dm26>=g5 && dm26<=g6) {
									gr26="C";
								}else if(dm26>=g7 && dm26<=g8) {
									gr26="D";
								}else if(dm26>=g9 && dm26<=g10) {
									gr26="F";
								}
									
							}
							
						}
                
                   
                   if(carp.isEmpty() || carp.equals(null)) {
							
							m27="";
							gr27="";
							
						}else {
							
							if(carp.equals("-")) {
								
								m27="-";
								gr27="-";
								
							}else {
								
								m27=carp;
								dm27=Double.parseDouble(carp);
								n27=1;
								
								if(dm27>=g1 && dm27<=g2) {
									gr27="A";
								}else if(dm27>=g3 && dm27<=g4) {
									gr27="B";
								}else if(dm27>=g5 && dm27<=g6) {
									gr27="C";
								}else if(dm27>=g7 && dm27<=g8) {
									gr27="D";
								}else if(dm27>=g9 && dm27<=g10) {
									gr27="F";
								}
									
							}
							
						}
                   
                   
                   if(brick.isEmpty() || brick.equals(null)) {
							
							m28="";
							gr28="";
							
						}else {
							
							if(brick.equals("-")) {
								
								m28="-";
								gr28="-";
								
							}else {
								
								m28=brick;
								dm28=Double.parseDouble(brick);
								n28=1;
								
								if(dm28>=g1 && dm28<=g2) {
									gr28="A";
								}else if(dm28>=g3 && dm28<=g4) {
									gr28="B";
								}else if(dm28>=g5 && dm28<=g6) {
									gr28="C";
								}else if(dm28>=g7 && dm28<=g8) {
									gr28="D";
								}else if(dm28>=g9 && dm28<=g10) {
									gr28="F";
								}
									
							}
							
						}
                   
                   
                   if(paint.isEmpty() || paint.equals(null)) {
							
							m29="";
							gr29="";
							
						}else {
							
							if(paint.equals("-")) {
								
								m29="-";
								gr29="-";
								
							}else {
								
								m29=paint;
								dm29=Double.parseDouble(paint);
								n29=1;
								
								if(dm29>=g1 && dm29<=g2) {
									gr29="A";
								}else if(dm29>=g3 && dm29<=g4) {
									gr29="B";
								}else if(dm29>=g5 && dm29<=g6) {
									gr29="C";
								}else if(dm29>=g7 && dm29<=g8) {
									gr29="D";
								}else if(dm29>=g9 && dm29<=g10) {
									gr29="F";
								}
									
							}
							
						}
                   
                   
                   if(plumb.isEmpty() || plumb.equals(null)) {
							
							m30="";
							gr30="";
							
						}else {
							
							if(plumb.equals("-")) {
								
								m30="-";
								gr30="-";
								
							}else {
								
								m30=plumb;
								dm30=Double.parseDouble(plumb);
								n30=1;
								
								if(dm30>=g1 && dm30<=g2) {
									gr30="A";
								}else if(dm30>=g3 && dm30<=g4) {
									gr30="B";
								}else if(dm30>=g5 && dm30<=g6) {
									gr30="C";
								}else if(dm30>=g7 && dm30<=g8) {
									gr30="D";
								}else if(dm30>=g9 && dm30<=g10) {
									gr30="F";
								}
									
							}
							
						}
                   
                   
                   if(elect.isEmpty() || elect.equals(null)) {
							
							m31="";
							gr31="";
							
						}else {
							
							if(elect.equals("-")) {
								
								m31="-";
								gr31="-";
								
							}else {
								
								m31=elect;
								dm31=Double.parseDouble(elect);
								n31=1;
								
								if(dm31>=g1 && dm31<=g2) {
									gr31="A"; 
								}else if(dm31>=g3 && dm31<=g4) {
									gr31="B";
								}else if(dm31>=g5 && dm31<=g6) {
									gr31="C";
								}else if(dm31>=g7 && dm31<=g8) {
									gr31="D";
								}else if(dm31>=g9 && dm31<=g10) {
									gr31="F";
								}
									
							}
							
						}
                
                   
                   
                   if(engineer.isEmpty() || engineer.equals(null)) {
							
							m32="";
							gr32="";
							
						}else {
							
							if(engineer.equals("-")) {
								
								m32="-";
								gr32="-";
								
							}else {
								
								m32=engineer;
								dm32=Double.parseDouble(engineer);
								n32=1;
								
								if(dm32>=g1 && dm32<=g2) {
									gr32="A";
								}else if(dm32>=g3 && dm32<=g4) {
									gr32="B";
								}else if(dm32>=g5 && dm32<=g6) {
									gr32="C";
								}else if(dm32>=g7 && dm32<=g8) {
									gr32="D";
								}else if(dm32>=g9 && dm32<=g10) {
									gr32="F";
								}
									
							}
							
						}
                   
                   
                   if(radio.isEmpty() || radio.equals(null)) {
							
							m33="";
							gr33="";
							
						}else {
							
							if(radio.equals("-")) {
								
								m33="-";
								gr33="-";
								
							}else {
								
								m33=radio;
								dm33=Double.parseDouble(radio);
								n33=1;
								
								if(dm33>=g1 && dm33<=g2) {
									gr33="A";
								}else if(dm33>=g3 && dm33<=g4) {
									gr33="B";
								}else if(dm33>=g5 && dm33<=g6) {
									gr33="C";
								}else if(dm33>=g7 && dm33<=g8) {
									gr33="D";
								}else if(dm33>=g9 && dm33<=g10) {
									gr33="F";
								}
									
							}
							
						}
                   
                   
                   if(draught.isEmpty() || draught.equals(null)) {
							
							m34="";
							gr34="";
							
						}else {
							
							if(draught.equals("-")) {
								
								m34="-";
								gr34="-";
								
							}else {
								
								m34=draught;
								dm34=Double.parseDouble(draught);
								n34=1;
								
								if(dm34>=g1 && dm34<=g2) {
									gr34="A";
								}else if(dm34>=g3 && dm34<=g4) {
									gr34="B";
								}else if(dm34>=g5 && dm34<=g6) {
									gr34="C";
								}else if(dm34>=g7 && dm34<=g8) {
									gr34="D";
								}else if(dm34>=g9 && dm34<=g10) {
									gr34="F";
								}
									
							}
							
						}
                   
                   
                   if(ref.isEmpty() || ref.equals(null)) {
							
							m35="";
							gr35="";
							
						}else {
							
							if(ref.equals("-")) {
								
								m35="-";
								gr35="-";
								
							}else {
								
								m35=ref;
								dm35=Double.parseDouble(ref);
								n35=1;
								
								if(dm35>=g1 && dm35<=g2) {
									gr35="A";
								}else if(dm35>=g3 && dm35<=g4) {
									gr35="B";
								}else if(dm35>=g5 && dm35<=g6) {
									gr35="C";
								}else if(dm35>=g7 && dm35<=g8) {
									gr35="D";
								}else if(dm35>=g9 && dm35<=g10) {
									gr35="F";
								}
									
							}
							
						}
                   
                   
                   if(plant.isEmpty() || plant.equals(null)) {
							
							m36="";
							gr36="";
							
						}else {
							
							if(plant.equals("-")) {
								
								m36="-";
								gr36="-";
								
							}else {
								
								m36=plant;
								dm36=Double.parseDouble(plant);
								n36=1;
								
								if(dm36>=g1 && dm36<=g2) {
									gr36="A";
								}else if(dm36>=g3 && dm36<=g4) {
									gr36="B";
								}else if(dm36>=g5 && dm36<=g6) {
									gr36="C";
								}else if(dm36>=g7 && dm36<=g8) {
									gr36="D";
								}else if(dm36>=g9 && dm36<=g10) {
									gr36="F";
								}
									
							}
							
						}
                   
                   if(work.isEmpty() || work.equals(null)) {
							
							m37="";
							gr37="";
							
						}else {
							
							if(work.equals("-")) {
								
								m37="-";
								gr37="-";
								
							}else {
								
								m37=work;
								dm37=Double.parseDouble(work);
								n37=1;
								
								if(dm37>=g1 && dm37<=g2) {
									gr37="A";
								}else if(dm37>=g3 && dm37<=g4) {
									gr37="B";
								}else if(dm37>=g5 && dm37<=g6) {
									gr37="C";
								}else if(dm37>=g7 && dm37<=g8) {
									gr37="D";
								}else if(dm37>=g9 && dm37<=g10) {
									gr37="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(motor.isEmpty() || motor.equals(null)) {
							
							m38="";
							gr38="";
							
						}else {
							
							if(motor.equals("-")) {
								
								m38="-";
								gr38="-";
								
							}else {
								
								m38=motor;
								dm38=Double.parseDouble(motor);
								n38=1;
								
								if(dm38>=g1 && dm38<=g2) {
									gr38="A";
								}else if(dm38>=g3 && dm38<=g4) {
									gr38="B";
								}else if(dm38>=g5 && dm38<=g6) {
									gr38="C";
								}else if(dm38>=g7 && dm38<=g8) {
									gr38="D";
								}else if(dm38>=g9 && dm38<=g10) {
									gr38="F";
								}
									
							}
							
						}
                   
                   
                   if(welding.isEmpty() || welding.equals(null)) {
							
							m39="";
							gr39="";
							
						}else {
							
							if(welding.equals("-")) {
								
								m39="-";
								gr39="-";
								
							}else {
								
								m39=welding;
								dm39=Double.parseDouble(welding);
								n39=1;
								
								if(dm39>=g1 && dm39<=g2) {
									gr39="A";
								}else if(dm39>=g3 && dm39<=g4) {
									gr39="B";
								}else if(dm39>=g5 && dm39<=g6) {
									gr39="C";
								}else if(dm39>=g7 && dm39<=g8) {
									gr39="D";
								}else if(dm39>=g9 && dm39<=g10) {
									gr39="F";
								}
									
							}
							
						}
                   
                   
                   if(fit.isEmpty() || fit.equals(null)) {
							
							m40="";
							gr40="";
							
						}else {
							
							if(fit.equals("-")) {
								
								m40="-";
								gr40="-";
								
							}else {
								
								m40=fit;
								dm40=Double.parseDouble(fit);
								n40=1;
								
								if(dm40>=g1 && dm40<=g2) {
									gr40="A";
								}else if(dm40>=g3 && dm40<=g4) {
									gr40="B";
								}else if(dm40>=g5 && dm40<=g6) {
									gr40="C";
								}else if(dm40>=g7 && dm40<=g8) {
									gr40="D";
								}else if(dm40>=g9 && dm40<=g10) {
									gr40="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(auto.isEmpty() || auto.equals(null)) {
							
							m41="";
							gr41="";
							
						}else {
							
							if(auto.equals("-")) {
								
								m41="-";
								gr41="-";
								
							}else {
								
								m41=auto;
								dm41=Double.parseDouble(auto);
								n41=1;
								
								if(dm41>=g1 && dm41<=g2) {
									gr41="A";
								}else if(dm41>=g3 && dm41<=g4) {
									gr41="B";
								}else if(dm41>=g5 && dm41<=g6) {
									gr41="C";
								}else if(dm41>=g7 && dm41<=g8) {
									gr41="D";
								}else if(dm41>=g9 && dm41<=g10) {
									gr41="F";
								}
									
							}
							
						}
                   
                   
                   
                   if(mechanic.isEmpty() || mechanic.equals(null)) {
							
							m42="";
							gr42="";
							
						}else {
							
							if(mechanic.equals("-")) {
								
								m42="-";
								gr42="-";
								
							}else {
								
								m42=mechanic;
								dm42=Double.parseDouble(mechanic);
								n42=1;
								
								if(dm42>=g1 && dm42<=g2) {
									gr42="A";
								}else if(dm42>=g3 && dm42<=g4) {
									gr42="B";
								}else if(dm42>=g5 && dm42<=g6) {
									gr42="C";
								}else if(dm42>=g7 && dm42<=g8) {
									gr42="D";
								}else if(dm42>=g9 && dm42<=g10) {
									gr42="F";
								}
									
							}
							
						}
                
                   
                   if(foundry.isEmpty() || foundry.equals(null)) {
							
							m43="";
							gr43="";
							
						}else {
							
							if(foundry.equals("-")) {
								
								m43="-";
								gr43="-";
								
							}else {
								
								m43=foundry;
								dm43=Double.parseDouble(foundry);
								n43=1;
								
								if(dm43>=g1 && dm43<=g2) {
									gr43="A";
								}else if(dm43>=g3 && dm43<=g4) {
									gr43="B";
								}else if(dm43>=g5 && dm43<=g6) {
									gr43="C";
								}else if(dm43>=g7 && dm43<=g8) {
									gr43="D";
								}else if(dm43>=g9 && dm43<=g10) {
									gr43="F";
								}
									
							}
							
						}
                   
                   
                   
                   
                   
               	
                              
                    total=n0+n1+n2+n3+n4+n5+n6+n7+n8+n9+n10+n11+n12+n13+n14+n15+n16+n17+n18+n19+n20+n21+n22+n23+n24+n25+n26+n27+n28+n29+n30+n31+n32+n33+
                  		   n34+n35+n36+n37+n37+n39+n40+n41+n42+n43;
                   double temp=0.0;
                   int i=0,j=0,p=0,toto=0;
                  
                    Double sm=dm0+dm1+dm2+dm3+dm4+dm5+dm6+dm7+dm8+dm9+dm10+dm11+dm12+dm13+dm14+dm15+dm16+dm17+dm18+dm19+dm20+dm21+dm22+dm23+dm24+dm25+dm26+
                  		 dm27+dm28+dm29+dm30+dm31+dm32+dm33+dm34+dm35+dm36+dm37+dm38+dm39+dm40+dm41+dm42+dm43;
                   
                   
                    
                    if(total>0) {
                    	
                    	 sum=String.format("%,.2f", sm);
                    }else {
                    	
                    	sum="-";
                    }
                  
                   
					 if(total>=7) {
						 
						    Double mudi[]= {dm0,dm1,dm2,dm3,dm4,dm5,dm6,dm7,dm8,dm9,dm10,dm11,dm12,dm13,dm14,dm15,dm16,dm17,dm18,dm19,dm20,dm21,dm22,dm23,dm24,
						    		        dm25,dm26,dm27,dm28,dm29,dm30,dm31,dm32,dm33,dm34,dm35,dm36,dm37,dm38,dm39,dm40,dm41,dm42,dm43};
							Double ave=sm/total;
						    avg=String.format("%,.2f", ave);
						    
						    
						    for(i=0;i<7;i++){
								for(j=i+1;j<mudi.length;j++) {
									if( mudi[i]<mudi[j]) {
										temp=mudi[i];
										mudi[i]=mudi[j];
										mudi[j]=temp;
										
										
										
									}
									
								}
								
								if(mudi[i]>=g1 && mudi[i]<=g2){
								       p=1;
								      }else if(mudi[i]>=g3 && mudi[i]<g4){
								    	 p=2;
								      }
								      else if(mudi[i]>=g5 && mudi[i]<g6){
								    	  p=3;
								      }
								      else if(mudi[i]>=g7 && mudi[i]<g8){
								    	  p=4;
									      }
									  else {
										  p=5;
									      }
									 
							     	 toto=p+toto;
							     	 tp=Integer.toString(toto);
							     	 
							     	 

	    						      if(toto>=7 && toto<=17){
	    			           	          div="I";
	    			           	      }else if(toto>=18 && toto<=21){
	    			           	    	  div="II";
	    			           	      }
	    			           	      else if(toto>=22 && toto<=25){
	    			           	    	  div="III";
	    			           	      }
	    			           	      else if(toto>=26 && toto<=33){
	    			           	    	  div="IV";
	    			           		      }
	    			           		  else if(toto>=34 && toto<=35){
	    			           			  div="0";
	    			           		      }
							     	 
							     //  System.out.print(mudi[i]+"\n");
								
							}
			
						    
						// System.out.println(rs.getString("id")+"  "+total+"   "+sum+"  avg"+avg+"  ");
						 
					 }else {
						 
						 avg="-";tp="-";div="-";
						
					 }
                       
					 
					 
					 
					 

					 if(count1>0) {
						 

                     String sql22="Delete  from Ave_Mark  where eid='"+eid+"' and tid ='"+tid+"' and class='"+t27.getSelectedItem().toString()+"' and year='"+t31.getSelectedItem().toString()+"'  and id='"+rs.getString("id")+"'   ";
                     ps=con.prepareStatement(sql22);
                     ps.execute();


 
                     String sql1="insert into Ave_Mark(id,eid,tid,total,ave,point,div,class,year)  values (?,?,?,?,?,?,?,?,?)";
                     ps=con.prepareStatement(sql1);
                     ps.setString(1, rs.getString("id"));
                     ps.setString(2,eid);
                     ps.setString(3,tid);
                     ps.setString(4,sum);
                     ps.setString(5,avg);
                     ps.setString(6,tp);
                     ps.setString(7,div);
                     ps.setString(8,t27.getSelectedItem().toString());
                     ps.setString(9,t31.getSelectedItem().toString());
                     ps.execute();
	
							
							
							
					 }else {
						 
						
						 String sql1="insert into Ave_Mark(id,eid,tid,total,ave,point,div,class,year)  values (?,?,?,?,?,?,?,?,?)";
						  ps=con.prepareStatement(sql1);
						  ps.setString(1, rs.getString("id"));
						  ps.setString(2,eid);
						  ps.setString(3,tid);
						  ps.setString(4,sum);
						  ps.setString(5,avg);
						  ps.setString(6,tp);
						  ps.setString(7,div);
						  ps.setString(8,t27.getSelectedItem().toString());
						  ps.setString(9,t31.getSelectedItem().toString());
						  ps.execute();
                     
	                  


						 
					 }
					 
					 
					
					
					
					 
				 
					 
					 
					
					}
					
					
					
					
					
					
					
					
					
				}else {
					
					JOptionPane.showMessageDialog(null, "Data are not Available !");
					
				}
				
				
			
	
     }catch(Exception ex) {
    	 JOptionPane.showMessageDialog(null, ex.getMessage());
     }
      finally {
          try {
              if (rs != null) {
                  rs.close();
              }
              if (ps != null) {
                  ps.close();
              }
              } catch (Exception ex) {
              // do something
              }
          }
      
		
	}

	private void connect() {


		 try {
	            
	            String url = "jdbc:sqlite:Zeus.sqlite";
	            con = DriverManager.getConnection(url);
	            
	          // System.out.println("Connection to SQLite has been established..");
	            
	        } catch (SQLException e) {
	            System.out.println(e.getMessage());
	        } 
		 finally {
	            try {
	                if (rs != null) {
	                    rs.close();
	                }
	                if (ps != null) {
	                    ps.close();
	                }
	                } catch (Exception ex) {
	                // do something
	                }
	            }
	
	
	}

	private void remark1() {
		try {

			String sql1="select inf from Remark_A where rid='A'  ";
			ps=con.prepareStatement(sql1);
			rs1=ps.executeQuery();

			String sql2="select inf from Remark_A where rid='B'  ";
			ps=con.prepareStatement(sql2);
			rs2=ps.executeQuery();

			String sql3="select inf from Remark_A where rid='C'  ";
			ps=con.prepareStatement(sql3);
			rs3 =ps.executeQuery();

			String sql4="select inf from Remark_A where rid='D'  ";
			ps=con.prepareStatement(sql4);
			rs4=ps.executeQuery();

			String sql5="select inf from Remark_A where rid='E'  ";
			ps=con.prepareStatement(sql5);
			rs5=ps.executeQuery();

			String sql6="select inf from Remark_A where rid='S'  ";
			ps=con.prepareStatement(sql6);
			rs6=ps.executeQuery();

			String sql7="select inf from Remark_A where rid='F'  ";
			ps=con.prepareStatement(sql7);
			rs7=ps.executeQuery();

			text6.setText(rs1.getString("inf"));
			text7.setText(rs2.getString("inf"));
			text8.setText(rs3.getString("inf"));
			text9.setText(rs4.getString("inf"));
			text10.setText(rs5.getString("inf"));
			text11.setText(rs6.getString("inf"));
			text12.setText(rs7.getString("inf"));


		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}   finally {
            try {
            if (rs != null) {
                rs.close();
            }
            if (ps != null) {
                ps.close();
            }
            } catch (Exception ex) {
            // do something
            }
        }
          

	}

	private void remark() {
		try {

			String sql1="select inf from Remark_O where rid='A'  ";
			ps=con.prepareStatement(sql1);
			ResultSet rs1=ps.executeQuery();

			String sql2="select inf from Remark_O where rid='B'  ";
			ps=con.prepareStatement(sql2);
			ResultSet rs2=ps.executeQuery();

			String sql3="select inf from Remark_O where rid='C'  ";
			ps=con.prepareStatement(sql3);
			ResultSet rs3 =ps.executeQuery();

			String sql4="select inf from Remark_O where rid='D'  ";
			ps=con.prepareStatement(sql4);
			ResultSet rs4=ps.executeQuery();

			String sql5="select inf from Remark_O where rid='F'  ";
			ps=con.prepareStatement(sql5);
			ResultSet rs5=ps.executeQuery();



			text1.setText(rs1.getString("inf"));
			text2.setText(rs2.getString("inf"));
			text3.setText(rs3.getString("inf"));
			text4.setText(rs4.getString("inf"));
			text5.setText(rs5.getString("inf"));


		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}   finally {
            try {
            if (rs != null) {
                rs.close();
            }
            if (ps != null) {
                ps.close();
            }
            } catch (Exception ex) {
            // do something
            }
        }
          
	}

	private void listen() {







	}

	private void table6() {


		try {

            
			String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
			ps=con.prepareStatement(sql1);
			rs1=ps.executeQuery();

			String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
			ps=con.prepareStatement(sql2);
			rs2=ps.executeQuery();

			String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
			ps=con.prepareStatement(sql3);
			rs3=ps.executeQuery();

			String sql="Select Ouser.id as 'STUDENT ID',(    Ouser.fname||'   '||mname||'   '||lname) as 'FULL NAME',mark as 'MARKS' from Ouser  LEFT JOIN Mark_O ON  Ouser.id=Mark_O.id AND Mark_O.sid='"+rs1.getString("sid")+"' AND  Mark_O.year='"+t31.getSelectedItem().toString()+"' AND Mark_O.eid='"+rs2.getString("eid")+"' AND  Mark_O.tid='"+rs3.getString("tid")+"' WHERE  Ouser.class='"+t27.getSelectedItem().toString()+"'  ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC  ";
			ps=con.prepareStatement(sql);
			rs=ps.executeQuery();
			table6.setModel(DbUtils.resultSetToTableModel(rs));
			table6.setFont(new Font("serif",Font.PLAIN,11));
			table6.setForeground(new Color(0,0,100));

			table6.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
			TableColumnModel colModel=table6.getColumnModel();
			colModel.getColumn(0).setPreferredWidth(25); 
			colModel.getColumn(1).setPreferredWidth(400); 
			colModel.getColumn(2).setPreferredWidth(400);

			DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
			centerRenderer.setHorizontalAlignment( JLabel.CENTER );

			DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
			rRenderer.setHorizontalAlignment( JLabel.LEFT );

			table6.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
			table6.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
			table6.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

			((DefaultTableCellRenderer) table6.getTableHeader().getDefaultRenderer())
			.setHorizontalAlignment(JLabel.CENTER);



		}catch(Exception ex) {
			//JOptionPane.showMessageDialog(null, "");
		}  finally {
            try {
            if (rs != null) {
                rs.close();
            }
            if (ps != null) {
                ps.close();
            }
            } catch (Exception ex) {
            // do something
            }
        }
          


	}

	private void mudi() {



		try {



			Calendar.getInstance().get(Calendar.YEAR);



		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}


	}

	private void combo() {



		try {


			String sql="select sname from Subject_O";
			ps=con.prepareStatement(sql);
			rs=ps.executeQuery();


			while(rs.next()) {

				t28.addItem(rs.getString("sname"));
				t5.addItem(rs.getString("sname"));
				t15.addItem(rs.getString("sname"));
				t48.addItem(rs.getString("sname"));


			}



			String sqll="select ename from Exam";
			ps=con.prepareStatement(sqll);
			rs=ps.executeQuery();

			while(rs.next()) {

				t29.addItem(rs.getString("ename"));
				box41.addItem(rs.getString("ename"));
				t49.addItem(rs.getString("ename"));
				//t29.setSelectedItem(null);


			}

			String sqlll="select tname from Term";
			ps=con.prepareStatement(sqlll);
			rs=ps.executeQuery();

			while(rs.next()) {

				t30.addItem(rs.getString("tname"));
				box42.addItem(rs.getString("tname"));
				box45.addItem(rs.getString("tname"));
				t50.addItem(rs.getString("tname"));
				//t30.setSelectedItem(null);


			}
			t5.setSelectedItem(null);
			t15.setSelectedItem(null);
			//	t29.setSelectedItem(null);t30.setSelectedItem(null);


			//
		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}   finally {
            try {
            if (rs != null) {
                rs.close();
            }
            if (ps != null) {
                ps.close();
            }
            } catch (Exception ex) {
            // do something
            }
        }
          
	}

	private void gradeA() {



		try {

			String sql="Select * from Grade_A where id='"+1+"' ";
			ps=con.prepareStatement(sql);
			rs=ps.executeQuery();
			Double g1=rs.getDouble("g1");
			Double g2=rs.getDouble("g2");
			Double g3=rs.getDouble("g3");
			Double g4=rs.getDouble("g4");
			Double g5=rs.getDouble("g5");
			Double g6=rs.getDouble("g6");
			Double g7=rs.getDouble("g7");
			Double g8=rs.getDouble("g8");
			Double g9=rs.getDouble("g9");
			Double g10=rs.getDouble("g10");
			Double g11=rs.getDouble("g11");
			Double g12=rs.getDouble("g12");
			Double g13=rs.getDouble("g13");
			Double g14=rs.getDouble("g14");

			tex13.setText(g1.toString());tex14.setText(g2.toString());
			tex15.setText(g3.toString());tex16.setText(g4.toString());
			tex17.setText(g5.toString());tex18.setText(g6.toString());
			tex19.setText(g7.toString());tex20.setText(g8.toString());
			tex21.setText(g9.toString());tex22.setText(g10.toString());
			tex23.setText(g11.toString());tex24.setText(g12.toString());
			tex25.setText(g13.toString());tex26.setText(g14.toString());


		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		} 


	}



	private void grade() {

		try {

			String sql="Select * from Grade_O where id='"+1+"' ";
			ps=con.prepareStatement(sql);
			rs=ps.executeQuery();
			Double g1=rs.getDouble("g1");
			Double g2=rs.getDouble("g2");
			Double g3=rs.getDouble("g3");
			Double g4=rs.getDouble("g4");
			Double g5=rs.getDouble("g5");
			Double g6=rs.getDouble("g6");
			Double g7=rs.getDouble("g7");
			Double g8=rs.getDouble("g8");
			Double g9=rs.getDouble("g9");
			Double g10=rs.getDouble("g10");

			te1.setText(g1.toString());te2.setText(g2.toString());
			te3.setText(g3.toString());te4.setText(g4.toString());
			te5.setText(g5.toString());te6.setText(g6.toString());
			te7.setText(g7.toString());te8.setText(g8.toString());
			te9.setText(g9.toString());te10.setText(g10.toString());


		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		} 
	}

	private void resert() {
		t0.setText("");t1.setText("");t2.setText("");t3.setText("");t4.setSelectedItem(null);t5.setSelectedItem(null);t6.setSelectedItem(null);

	}

	private void button() {
		
		
		button1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

              value=button1.getText();
              Class_View();
				
			}
		});
		
		button2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				 value=button2.getText();
	              Class_View();
				
			}
		});
		
		button3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				 value=button3.getText();
	              Class_View();
				
			}
		});
		
		button4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				 value=button4.getText();
	              Class_View();
				
			}
		});


		b37.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {
					
	
					
					
				
					int result = JOptionPane.showConfirmDialog(null,p60, "Select",
					        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
					if(result==JOptionPane.OK_OPTION) {
						
						String sql1="Select sid from Subject_O where sname= '"+t48.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql1);
						ResultSet rs1=ps.executeQuery();

						String sql2="Select eid from Exam where ename= '"+t49.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql2);
						ResultSet rs2=ps.executeQuery();

						String sql3="Select tid from Term where tname= '"+t50.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql3);
						ResultSet rs3=ps.executeQuery();

						String sql4="Select percentage from Exam where ename= '"+t49.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql4);
						ResultSet rs4=ps.executeQuery();

						int year=Calendar.getInstance().get(Calendar.YEAR);

						String sqq ="select count(id) from Mark_O where sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+year+"' and class='"+t47.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sqq);
						rs=ps.executeQuery();
						int cou=Integer.parseInt(rs.getString("count(id)"));

						String sqll="select * from Grade_O";
						ps=con.prepareStatement(sqll);
						ResultSet rs5=ps.executeQuery();
						
						Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
						g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
						g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
						
						Double per=Double.parseDouble(rs4.getString("percentage"))/100;
						
						
						JFrame parentFrame = new JFrame();
						 
						JFileChooser fileChooser = new JFileChooser();
						fileChooser.setDialogTitle("Specify a file to save");   
						
						
						FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel File Only", "xlsx","xls");
						fileChooser.setFileFilter(filter);
						 
						int userSelection = fileChooser.showSaveDialog(parentFrame);
						 
						if (userSelection == JFileChooser.APPROVE_OPTION) {
						    File fileToSave = fileChooser.getSelectedFile();
						   // System.out.println("Save as file: " + fileToSave.getAbsolutePath());
						    
						    String path=fileToSave.getAbsolutePath();
						  
						    FileInputStream inputstream=new FileInputStream(path);
						    XSSFWorkbook workbook=new XSSFWorkbook(inputstream);
						    XSSFSheet sheet=workbook.getSheetAt(0);
						    
						    int rows=sheet.getLastRowNum();
						    int cols=sheet.getRow(1).getLastCellNum()+1;

					    
						    for(int r=6;r<=rows;r++) {
						    	
						    	XSSFRow row=sheet.getRow(r);
						    	String id = row.getCell(1).getStringCellValue();
						    	String name = row.getCell(2).getStringCellValue();
						    	String mark="";
						    	String gr="";
						    	String pms="";
						    	
						    	XSSFCell cell=row.getCell(3);
						    	
						    	if(cell==null || cell.getCellType()==CellType.BLANK) {
						    		
						    		
						    		
						    	
						    	
						    	
						    }else {
						    	
						    	  if(cell.getCellType()==CellType.NUMERIC) {
						    		  
						    		  double mark1=cell.getNumericCellValue();
						    		 
						    		  if(mark1 >= 0 && mark1 <= 100){
						    			  
						    			   mark=String.format("%.1f",mark1);
						    			   Double pm=Double.parseDouble(mark)*per;
											 pms=String.format("%.1f",pm);

											if(mark1>=g1 && mark1<=g2) {
												gr="A";
											}else if(mark1>=g3 && mark1<=g4) {
												gr="B";
											}else if(mark1>=g5 && mark1<=g6) {
												gr="C";
											}else if(mark1>=g7 && mark1<=g8) {
												gr="D";
											}else if(mark1>=g9 && mark1<=g10) {
												gr="F";
											}
						    			  
						              } else {
						            	  JOptionPane.showMessageDialog(null,"Enter Valid Marks ! ");
						              }
						    		  
						    	  }else if(cell.getCellType()==CellType.STRING) {
						    		  
						    		 String mark2 =cell.getStringCellValue();
						    		 if(mark2.matches("-") ) {
						    			 mark =cell.getStringCellValue();
						    		 }else {
						    			 
						    			 JOptionPane.showMessageDialog(null,"Enter Valid Marks ! ");
						    		 }
						    		  
						    		  
						    	  }
						    }
						    	
						    	
						    	if(cou>0) {
									
						    	//	System.out.println(id+"     "+rs1.getString("sid")+"     "+rs2.getString("eid")+"    "+rs3.getString("tid")+"  "+mark+"  "+pms+"  "+gr+" "+t51.getSelectedItem()+"  "+t47.getSelectedItem());
						    		
						    		String sql="update Mark_O set mark='"+mark+"',pmark='"+pms+"',grade='"+gr+"'  where id='"+id+"' and sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+t51.getSelectedItem().toString()+"' and class='"+t47.getSelectedItem().toString()+"'  "; 
									ps=con.prepareStatement(sql);
									ps.execute();
									
									//JOptionPane.showMessageDialog(null,"Marks Added Successfully !");
									
								}else {
									
									String sql="insert into Mark_O (id,sid,eid,tid,mark,pmark,grade,year,class) values (?,?,?,?,?,?,?,?,?) ";
									ps=con.prepareStatement(sql);
									ps.setString(1, id);
									ps.setString(2, rs1.getString("sid"));
									ps.setString(3, rs2.getString("eid"));
									ps.setString(4, rs3.getString("tid"));
									ps.setString(5, mark);
									ps.setString(6, pms);
									ps.setString(7, gr);
									ps.setString(8, t51.getSelectedItem().toString());
									ps.setString(9, t47.getSelectedItem().toString());
									ps.execute();
									
									
									
								}
						    	
						    }
						    JOptionPane.showMessageDialog(null,"Marks Added Successfully !");
					    	
						  }
						
						

			
			        }
				
				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}   finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
		              

			}
		});

		table6.addKeyListener(new KeyAdapter(){
			@SuppressWarnings("unused")
			public void keyPressed(KeyEvent e)	{

				if(e.getKeyCode()==KeyEvent.VK_ENTER) {

					if (table6.getCellEditor() != null) {
						DefaultCellEditor cellEditor = (DefaultCellEditor) table6.getCellEditor();
						String value = ((JTextField) cellEditor.getComponent()).getText();

						if(value.toString().matches("^(?:100(?:\\.00?)?|\\d?\\d(?:\\.\\d\\d?)?)$")) {

							//System.out.println(value);
						}else if(value.matches("-")) {

							//System.out.println(value);
						}else if(value==null || value.isEmpty()) {

							JTextField editor = (JTextField) table6.getEditorComponent();
							editor.setText(null);

						}
						else {

							JOptionPane.showMessageDialog(null, "Enter Valid Value !");
							JTextField editor = (JTextField) table6.getEditorComponent();
							editor.setText(null);

						}
					}else {

						int row=table6.getSelectedRow();
						int col=2;

						Object value=table6.getValueAt(row, col);

						if(value==null  || value.toString().isEmpty()) {

							// System.out.println(value);

						}else {

							String val=value.toString().trim();

							if(val.matches("^(?:100(?:\\.00?)?|\\d?\\d(?:\\.\\d\\d?)?)$")) {

								//  System.out.println(value);
							}else if(val.matches("-")) {

								// System.out.println(value);
							}else if(val.matches("")) {

								// System.out.println(value);
							}else {

								JOptionPane.showMessageDialog(null, "Enter Valid Value !");


							}

						}




					}

				}

			}

		});




		t28.addItemListener(new ItemListener(){
			@Override
			public void itemStateChanged(ItemEvent event) {
				try {
					if (event.getStateChange() != ItemEvent.SELECTED) {
						if(t28.getSelectedItem()!=null) {

							String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
							ps=con.prepareStatement(sql1);
							rs1=ps.executeQuery();

							String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
							ps=con.prepareStatement(sql2);
							rs2=ps.executeQuery();

							String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
							ps=con.prepareStatement(sql3);
							rs3=ps.executeQuery();

							String sql="Select Ouser.id as 'STUDENT ID',(    Ouser.fname||'   '||mname||'   '||lname) as 'FULL NAME',mark as 'MARKS' from Ouser  LEFT JOIN Mark_O ON  Ouser.id=Mark_O.id AND Mark_O.sid='"+rs1.getString("sid")+"' AND  Mark_O.year='"+t31.getSelectedItem().toString()+"' AND Mark_O.eid='"+rs2.getString("eid")+"' AND  Mark_O.tid='"+rs3.getString("tid")+"' WHERE  Ouser.class='"+t27.getSelectedItem().toString()+"'  ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC  ";
							ps=con.prepareStatement(sql);
							rs=ps.executeQuery();
							table6.setModel(DbUtils.resultSetToTableModel(rs));
							table6.setFont(new Font("serif",Font.PLAIN,11));
							table6.setForeground(new Color(0,0,139));

							table6.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
							TableColumnModel colModel=table6.getColumnModel();
							colModel.getColumn(0).setPreferredWidth(25); 
							colModel.getColumn(1).setPreferredWidth(400); 
							colModel.getColumn(2).setPreferredWidth(400);

							DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
							centerRenderer.setHorizontalAlignment( JLabel.CENTER );

							DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
							rRenderer.setHorizontalAlignment( JLabel.LEFT );

							table6.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
							table6.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
							table6.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

							((DefaultTableCellRenderer) table6.getTableHeader().getDefaultRenderer())
							.setHorizontalAlignment(JLabel.CENTER);

						}
						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());

					}else {

						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());
					}

				} catch (Exception e) {
					e.printStackTrace();
				}  

			}

		});

		t29.addItemListener(new ItemListener(){
			@Override
			public void itemStateChanged(ItemEvent event) {
				
				try {
					if (event.getStateChange() != ItemEvent.SELECTED) {
						if(t29.getSelectedItem()!=null) {
                                
							if(t29.getSelectedItem().equals("TERMINAL")) {
								
								t30.setSelectedItem("FIRST TERM");
								
							}else if(t29.getSelectedItem().equals("ANNUAL")) {
								
								t30.setSelectedItem("SECOND TERM");
								
							}

							try {
                                 
								

								String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
								ps=con.prepareStatement(sql1);
								rs1=ps.executeQuery();

								String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
								ps=con.prepareStatement(sql2);
								rs2=ps.executeQuery();

								String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
								ps=con.prepareStatement(sql3);
								rs3=ps.executeQuery();

								String sql="Select Ouser.id as 'STUDENT ID',(    Ouser.fname||'   '||mname||'   '||lname) as 'FULL NAME',mark as 'MARKS' from Ouser  LEFT JOIN Mark_O ON  Ouser.id=Mark_O.id AND Mark_O.sid='"+rs1.getString("sid")+"' AND  Mark_O.year='"+t31.getSelectedItem().toString()+"' AND Mark_O.eid='"+rs2.getString("eid")+"' AND  Mark_O.tid='"+rs3.getString("tid")+"' WHERE  Ouser.class='"+t27.getSelectedItem().toString()+"'  ORDER BY gender ASC,fname ASC,lname ASC  ";
								ps=con.prepareStatement(sql);
								rs=ps.executeQuery();
								table6.setModel(DbUtils.resultSetToTableModel(rs));
								table6.setFont(new Font("serif",Font.PLAIN,11));
								table6.setForeground(new Color(0,0,139));

								table6.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
								TableColumnModel colModel=table6.getColumnModel();
								colModel.getColumn(0).setPreferredWidth(25); 
								colModel.getColumn(1).setPreferredWidth(400); 
								colModel.getColumn(2).setPreferredWidth(400);

								DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
								centerRenderer.setHorizontalAlignment( JLabel.CENTER );

								DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
								rRenderer.setHorizontalAlignment( JLabel.LEFT );

								table6.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
								table6.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
								table6.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

								((DefaultTableCellRenderer) table6.getTableHeader().getDefaultRenderer())
								.setHorizontalAlignment(JLabel.CENTER);



							}catch(Exception ex) {
								JOptionPane.showMessageDialog(null, ex.getStackTrace());
							}  

						}
						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());

					}else {

						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());
					}

				} catch (Exception e) {
					e.printStackTrace();
				} 
			}
		});

		t30.addItemListener(new ItemListener(){
			@Override
			public void itemStateChanged(ItemEvent event) {
				try {
					if (event.getStateChange() != ItemEvent.SELECTED) {
						if(t30.getSelectedItem()!=null) {

                                  
                             if(t30.getSelectedItem().equals("FIRST TERM")) {
								
                            	 if(t29.getSelectedItem().equals("ANNUAL")) {
                            		 
                            		 t29.setSelectedItem("TERMINAL");
                            	 }
								
								
							}else if(t30.getSelectedItem().equals("SECOND TERM")) {
								
									
	                            	 if(t29.getSelectedItem().equals("TERMINAL")) {
	                            		 
	                            		 t29.setSelectedItem("ANNUAL");
	                            	 
	                            	 }
							}
							

							String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
							ps=con.prepareStatement(sql1);
							rs1=ps.executeQuery();

							String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
							ps=con.prepareStatement(sql2);
							rs2=ps.executeQuery();

							String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
							ps=con.prepareStatement(sql3);
							rs3=ps.executeQuery();

							String sql="Select Ouser.id as 'STUDENT ID',(    Ouser.fname||'   '||mname||'   '||lname) as 'FULL NAME',mark as 'MARKS' from Ouser  LEFT JOIN Mark_O ON  Ouser.id=Mark_O.id AND Mark_O.sid='"+rs1.getString("sid")+"' AND  Mark_O.year='"+t31.getSelectedItem().toString()+"' AND Mark_O.eid='"+rs2.getString("eid")+"' AND  Mark_O.tid='"+rs3.getString("tid")+"' WHERE  Ouser.class='"+t27.getSelectedItem().toString()+"'  ORDER BY gender ASC,fname ASC,lname ASC  ";
							ps=con.prepareStatement(sql);
							rs=ps.executeQuery();
							table6.setModel(DbUtils.resultSetToTableModel(rs));
							table6.setFont(new Font("serif",Font.PLAIN,11));
							table6.setForeground(new Color(0,0,139));

							table6.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
							TableColumnModel colModel=table6.getColumnModel();
							colModel.getColumn(0).setPreferredWidth(25); 
							colModel.getColumn(1).setPreferredWidth(400); 
							colModel.getColumn(2).setPreferredWidth(400);

							DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
							centerRenderer.setHorizontalAlignment( JLabel.CENTER );

							DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
							rRenderer.setHorizontalAlignment( JLabel.LEFT );

							table6.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
							table6.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
							table6.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

							((DefaultTableCellRenderer) table6.getTableHeader().getDefaultRenderer())
							.setHorizontalAlignment(JLabel.CENTER);





						}
						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());

					}else {

						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());
					}

				} catch (Exception e) {
					e.printStackTrace();
				}  
			}
		});

		t27.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent arg0) {
				try {


					String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql1);
					rs1=ps.executeQuery();

					String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql2);
					rs2=ps.executeQuery();

					String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql3);
					rs3=ps.executeQuery();

					String sql="Select Ouser.id as 'STUDENT ID',(    Ouser.fname||'   '||mname||'   '||lname) as 'FULL NAME',mark as 'MARKS' from Ouser  LEFT JOIN Mark_O ON  Ouser.id=Mark_O.id AND Mark_O.sid='"+rs1.getString("sid")+"' AND  Mark_O.year='"+t31.getSelectedItem().toString()+"' AND Mark_O.eid='"+rs2.getString("eid")+"' AND  Mark_O.tid='"+rs3.getString("tid")+"' WHERE  Ouser.class='"+t27.getSelectedItem().toString()+"'  ORDER BY gender ASC,fname ASC,lname ASC  ";
					ps=con.prepareStatement(sql);
					rs=ps.executeQuery();
					table6.setModel(DbUtils.resultSetToTableModel(rs));
					table6.setFont(new Font("serif",Font.PLAIN,11));
					table6.setForeground(new Color(0,0,139));

					table6.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
					TableColumnModel colModel=table6.getColumnModel();
					colModel.getColumn(0).setPreferredWidth(25); 
					colModel.getColumn(1).setPreferredWidth(400); 
					colModel.getColumn(2).setPreferredWidth(400);

					DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
					centerRenderer.setHorizontalAlignment( JLabel.CENTER );

					DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
					rRenderer.setHorizontalAlignment( JLabel.LEFT );

					table6.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
					table6.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
					table6.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

					((DefaultTableCellRenderer) table6.getTableHeader().getDefaultRenderer())
					.setHorizontalAlignment(JLabel.CENTER);



				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}  


			}
		});





		t31.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent arg0) {
				try {


					String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql1);
					rs1=ps.executeQuery();

					String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql2);
					rs2=ps.executeQuery();

					String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql3);
					rs3=ps.executeQuery();

					String sql="Select Ouser.id as 'STUDENT ID',(    Ouser.fname||'   '||mname||'   '||lname) as 'FULL NAME',mark as 'MARKS' from Ouser  LEFT JOIN Mark_O ON  Ouser.id=Mark_O.id AND Mark_O.sid='"+rs1.getString("sid")+"' AND  Mark_O.year='"+t31.getSelectedItem().toString()+"' AND Mark_O.eid='"+rs2.getString("eid")+"' AND  Mark_O.tid='"+rs3.getString("tid")+"' WHERE  Ouser.class='"+t27.getSelectedItem().toString()+"'  ORDER BY gender ASC,fname ASC,lname ASC  ";
					ps=con.prepareStatement(sql);
					rs=ps.executeQuery();
					table6.setModel(DbUtils.resultSetToTableModel(rs));
					table6.setFont(new Font("serif",Font.PLAIN,11));
					table6.setForeground(new Color(0,0,139));

					table6.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
					TableColumnModel colModel=table6.getColumnModel();
					colModel.getColumn(0).setPreferredWidth(25); 
					colModel.getColumn(1).setPreferredWidth(400); 
					colModel.getColumn(2).setPreferredWidth(400);

					DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
					centerRenderer.setHorizontalAlignment( JLabel.CENTER );

					DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
					rRenderer.setHorizontalAlignment( JLabel.LEFT );

					table6.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
					table6.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
					table6.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

					((DefaultTableCellRenderer) table6.getTableHeader().getDefaultRenderer())
					.setHorizontalAlignment(JLabel.CENTER);



				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}  

			}
		});


		box41.addItemListener(new ItemListener(){
			@Override
			public void itemStateChanged(ItemEvent event) {
				
				try {
					if (event.getStateChange() != ItemEvent.SELECTED) {
						if(box41.getSelectedItem()!=null) {
                                
							if(box41.getSelectedItem().equals("TERMINAL")) {
								
								box42.setSelectedItem("FIRST TERM");
								
							}else if(box41.getSelectedItem().equals("ANNUAL")) {
								
								box42.setSelectedItem("SECOND TERM");
								
							}

							try {}catch(Exception ex) {
								JOptionPane.showMessageDialog(null, ex.getStackTrace());
							}  

						}
						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());

					}else {

						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());
					}

				} catch (Exception e) {
					e.printStackTrace();
				} 
			}
		});
		box42.addItemListener(new ItemListener(){
			@Override
			public void itemStateChanged(ItemEvent event) {
				try {
					if (event.getStateChange() != ItemEvent.SELECTED) {
						if(box42.getSelectedItem()!=null) {

                                  
                             if(box42.getSelectedItem().equals("FIRST TERM")) {
								
                            	 if(box41.getSelectedItem().equals("ANNUAL")) {
                            		 
                            		 box41.setSelectedItem("TERMINAL");
                            	 }
								
								
							}else if(box42.getSelectedItem().equals("SECOND TERM")) {
								
									
	                            	 if(box41.getSelectedItem().equals("TERMINAL")) {
	                            		 
	                            		 box41.setSelectedItem("ANNUAL");
	                            	 
	                            	 }
							}
							

						}
						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());

					}else {

						//JOptionPane.showMessageDialog(null, t28.getSelectedItem());
					}

				} catch (Exception e) {
					e.printStackTrace();
				}  
			}
		});

		b36.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				String s1="Are you sure you want to Delete the Marks !";

				int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
				if(mudi==JOptionPane.YES_OPTION)
				{




					try {

						String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql1);
						ResultSet rs1=ps.executeQuery();

						String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql2);
						ResultSet rs2=ps.executeQuery();

						String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql3);
						ResultSet rs3=ps.executeQuery();

						String sql4="Select percentage from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql4);
						ResultSet rs4=ps.executeQuery();

						int year=Calendar.getInstance().get(Calendar.YEAR);

						String sqq ="select count(id) from Mark_O where sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+year+"' and class='"+t27.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sqq);
						rs=ps.executeQuery();
						int cou=Integer.parseInt(rs.getString("count(id)"));

						if(cou>0) {

							String sq1="delete  from Mark_O where sid='"+rs1.getString("sid")+"' AND  eid='"+rs2.getString("eid")+"' AND tid='"+rs3.getString("tid")+"' AND year='"+year+"' AND  class='"+t27.getSelectedItem().toString()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();

							JOptionPane.showMessageDialog(null,"Marks Deleted Successfully !");

							table6();



						}else {

							JOptionPane.showMessageDialog(null, "No Data Present !");

						}




					}catch(Exception ex) {
						JOptionPane.showMessageDialog(null, ex.getStackTrace());
					}   finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			             
					update();
					update1();
				}

			}
		});

		b35.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {

				table6();
			}
		});


		b34.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
                    
		          // analysis();
			    //	update();
			    	//update1();

				try {
                     

					String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql1);
					ResultSet rs1=ps.executeQuery();

					String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql2);
					ResultSet rs2=ps.executeQuery();

					String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql3);
					ResultSet rs3=ps.executeQuery();

					String sql4="Select percentage from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql4);
					ResultSet rs4=ps.executeQuery();

					int year=Calendar.getInstance().get(Calendar.YEAR);

					String sqq ="select count(id) from Mark_O where sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+year+"' and class='"+t27.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sqq);
					rs=ps.executeQuery();
					int cou=Integer.parseInt(rs.getString("count(id)"));

					String sqll="select * from Grade_O";
					ps=con.prepareStatement(sqll);
					ResultSet rs5=ps.executeQuery();
					
					
					
					if(cou>0) {
						
						String sqq22 ="Delete from Mark_O where sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+year+"' and class='"+t27.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sqq22);
						ps.execute();
						
						

						
						


						int rows = table6.getRowCount();
						for(int row = 0;row <rows; row++) {
							Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
							g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
							g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
							
							  
							String mark="";
							String pmark="";
							String gr="";
							String sid="";
							String eid="";
							String tid="";
							String id="";
							String yr=Integer.toString(year);
							String cla=t27.getSelectedItem().toString();

							
							
							id = (String) table6.getValueAt(row, 0);
							mark = (String) table6.getValueAt(row, 2);
							Double per=Double.parseDouble(rs4.getString("percentage"))/100;

							String sql="insert into Mark_O (id,sid,eid,tid,mark,pmark,grade,year,class) values (?,?,?,?,?,?,?,?,?) ";
							ps=con.prepareStatement(sql);
							ps.setString(1, id);
							ps.setString(2, rs1.getString("sid"));
							ps.setString(3, rs2.getString("eid"));
							ps.setString(4, rs3.getString("tid"));




							if(mark==null) {
							
								ps.setString(5, "");
								ps.setString(6, "");
								ps.setString(7, "");
								ps.setInt(8, year);
								ps.setString(9, t27.getSelectedItem().toString());
								ps.execute();

							}else {

								if(mark.isEmpty()) {

									ps.setString(5, "");
									ps.setString(6, "");
									ps.setString(7, "");
									ps.setInt(8, year);
									ps.setString(9, t27.getSelectedItem().toString());
									ps.execute();


								}else {

									if((mark.matches("^(?:100(?:\\.00?)?|\\d?\\d(?:\\.\\d\\d?)?)$"))) {

										Double mk=Double.parseDouble(mark);
										Double pm=Double.parseDouble(mark)*per;
										String p=pm.toString();

										String marks=String.format("%.2f",Double.parseDouble(mark));
										String pms=String.format("%.2f",Double.parseDouble(p));

										if(mk>=g1 && mk<=g2) {
											gr="A";
										}else if(mk>=g3 && mk<=g4) {
											gr="B";
										}else if(mk>=g5 && mk<=g6) {
											gr="C";
										}else if(mk>=g7 && mk<=g8) {
											gr="D";
										}else if(mk>=g9 && mk<=g10) {
											gr="F";
										}

										ps.setString(5, mark);	
										ps.setString(6, pms);
										ps.setString(7, gr);
										ps.setInt(8, year);
										ps.setString(9, t27.getSelectedItem().toString());
										ps.execute();
                                           
										//JOptionPane.showMessageDialog(null, gr);
                                       

									}else if(mark.equals("-")) {

										ps.setString(5, "-");	
										ps.setString(6, "-");
										ps.setString(7, "-");
										ps.setInt(8, year);
										ps.setString(9, t27.getSelectedItem().toString());
										ps.execute();

										JOptionPane.showMessageDialog(null,"Marks Added Successfully !");
										
										
										
									}
									else  {

										JOptionPane.showMessageDialog(null,"Enter Valid Marks ! ");
										table6();
									}

								}

							}






						}                 

					


					
					
						
						
					}else {
						
						


						int rows = table6.getRowCount();
						for(int row = 0;row <rows; row++) {
							Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
							g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
							g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
							
							  
							String mark="";
							String pmark="";
							String gr="";
							String sid="";
							String eid="";
							String tid="";
							String id="";
							String yr=Integer.toString(year);
							String cla=t27.getSelectedItem().toString();

							
							
							id = (String) table6.getValueAt(row, 0);
							mark = (String) table6.getValueAt(row, 2);
							Double per=Double.parseDouble(rs4.getString("percentage"))/100;

							String sql="insert into Mark_O (id,sid,eid,tid,mark,pmark,grade,year,class) values (?,?,?,?,?,?,?,?,?) ";
							ps=con.prepareStatement(sql);
							ps.setString(1, id);
							ps.setString(2, rs1.getString("sid"));
							ps.setString(3, rs2.getString("eid"));
							ps.setString(4, rs3.getString("tid"));




							if(mark==null) {
							
								ps.setString(5, "");
								ps.setString(6, "");
								ps.setString(7, "");
								ps.setInt(8, year);
								ps.setString(9, t27.getSelectedItem().toString());
								ps.execute();

							}else {

								if(mark.isEmpty()) {

									ps.setString(5, "");
									ps.setString(6, "");
									ps.setString(7, "");
									ps.setInt(8, year);
									ps.setString(9, t27.getSelectedItem().toString());
									ps.execute();


								}else {

									if((mark.matches("^(?:100(?:\\.00?)?|\\d?\\d(?:\\.\\d\\d?)?)$"))) {

										Double mk=Double.parseDouble(mark);
										Double pm=Double.parseDouble(mark)*per;
										String p=pm.toString();

										String marks=String.format("%.2f",Double.parseDouble(mark));
										String pms=String.format("%.2f",Double.parseDouble(p));

										if(mk>=g1 && mk<=g2) {
											gr="A";
										}else if(mk>=g3 && mk<=g4) {
											gr="B";
										}else if(mk>=g5 && mk<=g6) {
											gr="C";
										}else if(mk>=g7 && mk<=g8) {
											gr="D";
										}else if(mk>=g9 && mk<=g10) {
											gr="F";
										}

										ps.setString(5, mark);	
										ps.setString(6, pms);
										ps.setString(7, gr);
										ps.setInt(8, year);
										ps.setString(9, t27.getSelectedItem().toString());
										ps.execute();
                                           
										//JOptionPane.showMessageDialog(null, gr);
                                       

									}else if(mark.equals("-")) {

										ps.setString(5, "-");	
										ps.setString(6, "-");
										ps.setString(7, "-");
										ps.setInt(8, year);
										ps.setString(9, t27.getSelectedItem().toString());
										ps.execute();

										JOptionPane.showMessageDialog(null,"Marks Added Successfully !");
										
										
										
									}
									else  {

										JOptionPane.showMessageDialog(null,"Enter Valid Marks ! ");
										table6();
									}

								}

							}






						}                 

					


					
					}
                         
					
					


				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getMessage());

				}  finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (ps != null) {
							ps.close();
						}
					} catch (Exception e) {
						// do something
					}
				}
			
			}
		});
		
		b34.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {

          // JOptionPane.showMessageDialog(null, "Hi");

				
				try {
					

					String sql1="Select sid from Subject_O where sname= '"+t28.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql1);
					ResultSet rs1=ps.executeQuery();

					String sql2="Select eid from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql2);
					ResultSet rs2=ps.executeQuery();

					String sql3="Select tid from Term where tname= '"+t30.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql3);
					ResultSet rs3=ps.executeQuery();

					String sql4="Select percentage from Exam where ename= '"+t29.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql4);
					ResultSet rs4=ps.executeQuery();

					int year=Calendar.getInstance().get(Calendar.YEAR);

					String sqq ="select count(id) from Mark_O where sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+year+"' and class='"+t27.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sqq);
					rs=ps.executeQuery();
					int cou=Integer.parseInt(rs.getString("count(id)"));

					String sqll="select * from Grade_O";
					ps=con.prepareStatement(sqll);
					ResultSet rs5=ps.executeQuery();
					
					
					int rows = table6.getRowCount();
					for(int row = 0;row <rows; row++) {

						Double g1=0.0,g2=0.0,g3=0.0,g4=0.0,g5=0.0,g6=0.0,g7=0.0,g8=0.0,g9=0.0,g10=0.0;
						g1=rs5.getDouble("g1");g2=rs5.getDouble("g2");g3=rs5.getDouble("g3");g4=rs5.getDouble("g4");g5=rs5.getDouble("g5");
						g6=rs5.getDouble("g6");g7=rs5.getDouble("g7");g8=rs5.getDouble("g8");g9=rs5.getDouble("g9");g10=rs5.getDouble("g10");
						

						String mark="";
						String pmark="";
						String gr="";
						String sid="";
						String eid="";
						String tid="";
						String id="";
						String yr=Integer.toString(year);
						String cla=t27.getSelectedItem().toString();

						
						id = (String) table6.getValueAt(row, 0);
						mark = (String) table6.getValueAt(row, 2);
						sid=rs1.getString("sid");
						eid=rs2.getString("eid");
						tid=rs3.getString("tid");

						if(mark==null) {
							mark="";
							pmark="";
							gr="";
						}else {

							if(mark.isEmpty()) {

								mark="";
								pmark="";
								gr="";

							}else {

								if((mark.matches("^(?:100(?:\\.00?)?|\\d?\\d(?:\\.\\d\\d?)?)$"))) {

									Double per=Double.parseDouble(rs4.getString("percentage"))/100;
									Double mk=Double.parseDouble(mark);
									Double pm=Double.parseDouble(mark)*per;
									String p=pm.toString();

									// mark=String.format("%.2f",Double.parseDouble(mark));
									mark = (String) table6.getValueAt(row, 2);
									pmark=String.format("%.2f",Double.parseDouble(p));



									if(mk>=g1 && mk<=g2) {
										gr="A";
									}else if(mk>=g3 && mk<=g4) {
										gr="B";
									}else if(mk>=g5 && mk<=g6) {
										gr="C";
									}else if(mk>=g7 && mk<=g8) {
										gr="D";
									}else if(mk>=g9 && mk<=g10) {
										gr="F";
									}



								}else if(mark.equals("-")) {

									mark="-";
									pmark="-";
									gr="-";

								}
								else  {

									// JOptionPane.showMessageDialog(null,"Enter Valid Marks from 0 to 100 ");
								}

							}

						}

						

						if(mark.matches("^(?:100(?:\\.00?)?|\\d?\\d(?:\\.\\d\\d?)?)$") || mark.isEmpty() || mark.matches("-") || mark==null) {
							
							String sq="update Mark_O set sid='"+sid+"',eid='"+eid+"',tid='"+tid+"',mark='"+mark+"',pmark='"+pmark+"',grade='"+gr+"',year='"+yr+"',class='"+cla+"'  where id='"+id+"' and sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+year+"' and class='"+t27.getSelectedItem().toString()+"'  "; 
							ps=con.prepareStatement(sq);
							//ps.addBatch();
							ps.executeBatch();
							
						}else {
							
							JOptionPane.showMessageDialog(null,"Enter Valid Marks !");
							
						}
						
						
						//System.out.println(id+" "+mark+" "+pmark+" "+gr);


					}

				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getMessage());
				}  finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }


			
				
			}
			
			
		});

		b28.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {




					if(tex13.getText() != null &&!tex13.getText().trim().isEmpty() && tex14.getText() != null &&!tex14.getText().trim().isEmpty() &&tex15.getText() != null &&!tex15.getText().trim().isEmpty() && tex16.getText() != null &&!tex16.getText().trim().isEmpty() && tex17.getText() != null &&!tex17.getText().trim().isEmpty() && tex18.getText() != null &&!tex18.getText().trim().isEmpty() && tex19.getText() != null &&!tex19.getText().trim().isEmpty() && tex20.getText() != null &&!tex20.getText().trim().isEmpty() && tex21.getText() != null &&!tex21.getText().trim().isEmpty() && tex22.getText() != null &&!tex22.getText().trim().isEmpty() && tex23.getText() != null &&!tex23.getText().trim().isEmpty()&& tex24.getText() != null &&!tex24.getText().trim().isEmpty()&& tex25.getText() != null &&!tex25.getText().trim().isEmpty()&& tex26.getText() != null &&!tex26.getText().trim().isEmpty()    ) {


						Double g1=Double.parseDouble(tex13.getText().trim());
						Double g2=Double.parseDouble(tex14.getText().trim());
						Double g3=Double.parseDouble(tex15.getText().trim());
						Double g4=Double.parseDouble(tex16.getText().trim());
						Double g5=Double.parseDouble(tex17.getText().trim());
						Double g6=Double.parseDouble(tex18.getText().trim());
						Double g7=Double.parseDouble(tex19.getText().trim());
						Double g8=Double.parseDouble(tex20.getText().trim());
						Double g9=Double.parseDouble(tex21.getText().trim());
						Double g10=Double.parseDouble(tex22.getText().trim());
						Double g11=Double.parseDouble(tex23.getText().trim());
						Double g12=Double.parseDouble(tex24.getText().trim());
						Double g13=Double.parseDouble(tex25.getText().trim());
						Double g14=Double.parseDouble(tex26.getText().trim());

						if( (g1>=0 && g1<=100)&&(g2>=0 && g2<=100)&&(g3>=0 && g3<=100)&&(g4>=0 && g4<=100)&&(g5>=0 && g5<=100)&&(g6>=0 && g6<=100)&&(g7>=0 && g7<=100)&&(g8>=0 && g8<=100)&&(g9>=0 && g9<=100)&&(g10>=0 && g10<=100)&&(g11>=0 && g11<=100)&&(g12>=0 && g12<=100)&&(g13>=0 && g13<=100)&&(g14>=0 && g14<=100) ) {

							String sql="update Grade_A set g1='"+g1+"',g2='"+g2+"',g3='"+g3+"',g4='"+g4+"',g5='"+g5+"',g6='"+g6+"',g7='"+g7+"',g8='"+g8+"',g9='"+g9+"',g10='"+g10+"',g11='"+g11+"',g12='"+g12+"',g13='"+g13+"',g14='"+g14+"' where id='"+1+"'  ";
							ps=con.prepareStatement(sql);
							ps.execute();
							grade();
							JOptionPane.showMessageDialog(null,"Grades Updared Successful !");


						}else {
							JOptionPane.showMessageDialog(null,"Enter Valid Marks !");
						}

					}
					else {
						JOptionPane.showMessageDialog(null, "Can't Accept Empty Value !");
					}
				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}   finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
		              
			}
		});

		ba1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {

					String sql1="update Remark_O  set inf= '"+text1.getText()+"' where rid='A' ";
					ps=con.prepareStatement(sql1);
					ps.execute();

					String sql2="update Remark_O  set inf= '"+text2.getText()+"' where rid='B' ";
					ps=con.prepareStatement(sql2);
					ps.execute();

					String sql3="update Remark_O  set inf= '"+text3.getText()+"' where rid='C' ";
					ps=con.prepareStatement(sql3);
					ps.execute();

					String sql4="update Remark_O  set inf= '"+text4.getText()+"' where rid='D' ";
					ps=con.prepareStatement(sql4);
					ps.execute();

					String sql5="update Remark_O  set inf= '"+text5.getText()+"' where rid='F' ";
					ps=con.prepareStatement(sql5);
					ps.execute();

					JOptionPane.showMessageDialog(null,"Updated Successful !");
					remark();


				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}   finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
		              

			}
		});

		ba3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {

					String sql1="update Remark_A  set inf= '"+text6.getText()+"' where rid='A' ";
					ps=con.prepareStatement(sql1);
					ps.execute();

					String sql2="update Remark_A  set inf= '"+text7.getText()+"' where rid='B' ";
					ps=con.prepareStatement(sql2);
					ps.execute();

					String sql3="update Remark_A  set inf= '"+text8.getText()+"' where rid='C' ";
					ps=con.prepareStatement(sql3);
					ps.execute();

					String sql4="update Remark_A  set inf= '"+text9.getText()+"' where rid='D' ";
					ps=con.prepareStatement(sql4);
					ps.execute();

					String sql5="update Remark_A  set inf= '"+text10.getText()+"' where rid='E' ";
					ps=con.prepareStatement(sql5);
					ps.execute();

					String sql6="update Remark_A  set inf= '"+text11.getText()+"' where rid='S' ";
					ps=con.prepareStatement(sql6);
					ps.execute();

					String sql7="update Remark_A  set inf= '"+text12.getText()+"' where rid='F' ";
					ps=con.prepareStatement(sql7);
					ps.execute();

					JOptionPane.showMessageDialog(null,"Updated Successful !");
					remark();


				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}  finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
		              

			}
		});

		ba4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				remark1();
			}
		});

		ba2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				remark();

			}
		});

		b13.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {




					if(te1.getText() != null &&!te1.getText().trim().isEmpty() && te2.getText() != null &&!te2.getText().trim().isEmpty() &&te3.getText() != null &&!te3.getText().trim().isEmpty() && te4.getText() != null &&!te4.getText().trim().isEmpty() && te5.getText() != null &&!te5.getText().trim().isEmpty() && te6.getText() != null &&!te6.getText().trim().isEmpty() && te7.getText() != null &&!te7.getText().trim().isEmpty() && te8.getText() != null &&!te8.getText().trim().isEmpty() && te9.getText() != null &&!te9.getText().trim().isEmpty() && te10.getText() != null &&!te10.getText().trim().isEmpty() ) {


						Double g1=Double.parseDouble(te1.getText().trim());
						Double g2=Double.parseDouble(te2.getText().trim());
						Double g3=Double.parseDouble(te3.getText().trim());
						Double g4=Double.parseDouble(te4.getText().trim());
						Double g5=Double.parseDouble(te5.getText().trim());
						Double g6=Double.parseDouble(te6.getText().trim());
						Double g7=Double.parseDouble(te7.getText().trim());
						Double g8=Double.parseDouble(te8.getText().trim());
						Double g9=Double.parseDouble(te9.getText().trim());
						Double g10=Double.parseDouble(te10.getText().trim());

						if( (g1>=0 && g1<=100)&&(g2>=0 && g2<=100)&&(g3>=0 && g3<=100)&&(g4>=0 && g4<=100)&&(g5>=0 && g5<=100)&&(g6>=0 && g6<=100)&&(g7>=0 && g7<=100)&&(g8>=0 && g8<=100)&&(g9>=0 && g9<=100)&&(g10>=0 && g10<=100) ) {

							String sql="update Grade_O set g1='"+g1+"',g2='"+g2+"',g3='"+g3+"',g4='"+g4+"',g5='"+g5+"',g6='"+g6+"',g7='"+g7+"',g8='"+g8+"',g9='"+g9+"',g10='"+g10+"' where id='"+1+"'  ";
							ps=con.prepareStatement(sql);
							ps.execute();
							grade();
							JOptionPane.showMessageDialog(null,"Grades Updared Successful !");


						}else {
							JOptionPane.showMessageDialog(null,"Enter Valid Marks !");
						}

					}
					else {
						JOptionPane.showMessageDialog(null, "Can't Accept Empty Value !");
					}
				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}  finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
		              

			}
		});

		b4.addActionListener(new ActionListener() {




			public void actionPerformed(ActionEvent e) {

				if(t2.getText() != null &&!t2.getText().trim().isEmpty())
				{
					try {

						String s1=String.format("%s   %s","Are you sure you want to Delete,",t0.getText());


						int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
						if(mudi==JOptionPane.YES_OPTION)
						{
							String sq1="delete  from Account where Username='"+t2.getText()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();
							ps.close();
                            

							JOptionPane.showMessageDialog(null,t0.getText().trim() +"   "+"Deleted Successfully !");
							table();resert();
						}


					}catch(Exception ex) {

						JOptionPane.showMessageDialog(null, ex.getMessage());
					}   finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              
				}else {
					JOptionPane.showMessageDialog(b10, "Select User from the Table !");
				}
			}





		});


		b10.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				table();
				tex1.setText("");tex2.setText("");tex34.setText("");

			}

		});


		b25.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				table();
				te11.setText("");te12.setText("");tex36.setText("");

			}

		});

		b17.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				table();
				tex6.setText("");tex5.setText("");tex32.setText("");

			}

		});


		b31.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				table();
				tex9.setText("");tex10.setText("");

			}

		});


		b8.addActionListener(new ActionListener() {




			public void actionPerformed(ActionEvent e) {

				if(ta1.getText() != null &&!ta1.getText().trim().isEmpty())
				{
					try {

						String s1=String.format("%s   %s","Are you sure you want to Delete,",ta2.getText());


						int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
						if(mudi==JOptionPane.YES_OPTION)
						{
							String sq1="delete  from Ouser where id='"+ta1.getText().trim()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();
							ps.close();


							JOptionPane.showMessageDialog(null,ta2.getText() +"   "+"Deleted Successfully !");
							table();ta1.setText("");ta2.setText("");ta3.setText("");ta4.setText("");ta5.setText("");ta6.setSelectedItem(null);ta7.setSelectedItem(null);
						}


					}catch(Exception ex) {

						JOptionPane.showMessageDialog(null, ex.getStackTrace());
					}   finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              
				}else {
					JOptionPane.showMessageDialog(b1, "Select User from the Table !");
				}
			}





		});


		b12.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {

				if(tex1.getText() != null &&!tex1.getText().trim().isEmpty())
				{
					try {

						String s1=String.format("%s   %s","Are you sure you want to Delete,",tex2.getText());


						int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
						if(mudi==JOptionPane.YES_OPTION)
						{
							String sq1="delete  from Subject_O where sid='"+tex1.getText().trim()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();
							ps.close();
							t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();t5.removeAllItems();t15.removeAllItems();
							combo();

							JOptionPane.showMessageDialog(null,tex2.getText() +"   "+"Deleted Successfully !");
							table();ta1.setText("");tex1.setText("");tex2.setText("");tex34.setText("");
						}


					}catch(Exception ex) {

						JOptionPane.showMessageDialog(null, ex.getStackTrace());
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			               
				}else {
					JOptionPane.showMessageDialog(b1, "Select User from the Table !");
				}
			}



		});


		b27.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {

				if(te11.getText() != null &&!te11.getText().trim().isEmpty())
				{
					try {

						String s1=String.format("%s   %s","Are you sure you want to Delete,",te12.getText());


						int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
						if(mudi==JOptionPane.YES_OPTION)
						{
							String sq1="delete  from Subject_A where sid='"+te11.getText().trim()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();
							ps.close();


							JOptionPane.showMessageDialog(null,te12.getText() +"   "+"Deleted Successfully !");
							table();te11.setText("");te12.setText("");tex36.setText("");
						}


					}catch(Exception ex) {

						JOptionPane.showMessageDialog(null, ex.getStackTrace());
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              
				}else {
					JOptionPane.showMessageDialog(b1, "Select User from the Table !");
				}
			}



		});

		b19.addActionListener(new ActionListener() {




			public void actionPerformed(ActionEvent e) {

				if(tex5.getText() != null &&!tex5.getText().trim().isEmpty())
				{
					try {

						String s1=String.format("%s   %s","Are you sure you want to Delete,",tex8.getText());


						int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
						if(mudi==JOptionPane.YES_OPTION)
						{
							String sq1="delete  from Exam where eid='"+tex5.getText().trim()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();
							ps.close();

							t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();
							combo();
							JOptionPane.showMessageDialog(null,tex8.getText().trim() +"   "+"Deleted Successfully !");
							table();tex5.setText("");tex6.setText("");
						}


					}catch(Exception ex) {

						JOptionPane.showMessageDialog(null, ex.getStackTrace());
					} finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              
				}else {
					JOptionPane.showMessageDialog(b1, "Select User from the Table !");
				}
			}





		});




		b33.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {

				if(tex9.getText() != null &&!tex9.getText().trim().isEmpty())
				{
					try {

						String s1=String.format("%s   %s","Are you sure you want to Delete,",tex10.getText());


						int mudi=JOptionPane.showConfirmDialog(b4, s1,"Delete", JOptionPane.YES_NO_OPTION);
						if(mudi==JOptionPane.YES_OPTION)
						{
							String sq1="delete  from Term where tid='"+tex9.getText().trim()+"' ";
							ps=con.prepareStatement(sq1);
							ps.execute();
							ps.close();

							t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();
							combo();


							JOptionPane.showMessageDialog(null,tex10.getText() +"   "+"Deleted Successfully !");
							table();tex9.setText("");tex10.setText("");
						}


					}catch(Exception ex) {

						JOptionPane.showMessageDialog(null, ex.getStackTrace());
					} finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              
				}else {
					JOptionPane.showMessageDialog(b1, "Select User from the Table !");
				}
			}





		});


		b2.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {

				table();resert();
			}
		});

		b6.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {

				table();ta1.setText("");ta2.setText("");ta3.setText("");ta4.setText("");ta5.setText("");
				ta6.setSelectedItem(null);ta7.setSelectedItem(null);
			}

		});

		b5.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent e) {


				if(ta1.getText() != null &&!ta1.getText().trim().isEmpty()&&
						ta2.getText() != null &&!ta2.getText().trim().isEmpty() && 
						ta4.getText() != null &&!ta4.getText().trim().isEmpty()
						&& ta6.getSelectedItem() != null&&!((String) ta6.getSelectedItem()).trim().isEmpty() 
						&& 	ta7.getSelectedItem() != null &&!((String) ta7.getSelectedItem()).trim().isEmpty()
						){
					String id=ta1.getText().trim();
					String fn=ta2.getText().toUpperCase().trim();
					String mn=ta3.getText().toUpperCase().trim();
					String ln=ta4.getText().toUpperCase().trim();
					String ph=ta5.getText().trim();
					String gender=ta6.getSelectedItem().toString();
					String clas=ta7.getSelectedItem().toString();


					try {



						if(fn.matches("^[\\p{L} .'-]+$") && ln.matches("^[\\p{L} .'-]+$") )
						{


							String sq="insert into Ouser (id,fname,mname,lname,phone,gender,class) values (?,?,?,?,?,?,?)";
							PreparedStatement ps=con.prepareStatement(sq);
							ps.setString(1,id.trim());
							ps.setString(2, fn.trim());
							ps.setString(3,mn.trim());
							ps.setString(4,ln.trim());
							ps.setString(5,ph.trim());
							ps.setString(6,gender);
							ps.setString(7,clas);
							ps.execute();

							String s=String.format("%s   %s",fn ,"Added Successfully !");
							JOptionPane.showMessageDialog(b1, s);

							table();


						}
						else {

							JOptionPane.showMessageDialog(null, "Enter Valid Names  !");
						}

					}catch(Exception ex) {
						//JOptionPane.showMessageDialog(null, ex.getStackTrace());
						JOptionPane.showMessageDialog(null, "User of that ID Already Registered !");//
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              
				} else {
					JOptionPane.showMessageDialog(null, "Fills All fields Correctly  !");
				}

			}



		});

		b14.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				grade();

			}
		});

		b29.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				gradeA();

			}
		});

		b1.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent e) {


				if(t0.getText() != null &&!t0.getText().trim().isEmpty()&&
						t1.getText() != null &&!t1.getText().trim().isEmpty() && t2.getText() != null &&!t2.getText().trim().isEmpty() &&
						t3.getText() != null &&!t3.getText().trim().isEmpty()
						&&!((String) t4.getSelectedItem()).trim().isEmpty() 
						&& 	t5.getSelectedItem() != null &&!((String) t5.getSelectedItem()).trim().isEmpty()
						&& 	t6.getSelectedItem() != null &&!((String) t6.getSelectedItem()).trim().isEmpty()
						){
					String fn=t0.getText().toUpperCase().trim();
					String ln=t1.getText().toUpperCase().trim();
					String user=t2.getText().trim();
					String pass=t3.getText().trim();
					String level=t4.getSelectedItem().toString();
					String subject=t5.getSelectedItem().toString();
					String cla=t6.getSelectedItem().toString();


					try {



						if(fn.matches("^[\\p{L} .'-]+$") && ln.matches("^[\\p{L} .'-]+$") )
						{


							String sq="insert into Account(FirstName,LastName,Username,Password,Level,Subject,Class) values (?,?,?,?,?,?,?)";
							PreparedStatement ps=con.prepareStatement(sq);
							ps.setString(1,fn.toUpperCase().trim());
							ps.setString(2, ln.toUpperCase().trim());
							ps.setString(3,user.trim());
							ps.setString(4,pass.trim());
							ps.setString(5,level);
							ps.setString(6,subject);
							ps.setString(7,cla);
							ps.execute();

							String s=String.format("%s   %s",fn ,"Added Successfully !");
							JOptionPane.showMessageDialog(b1, s);

							table();


						}
						else {

							JOptionPane.showMessageDialog(null, "Enter Valid Names  !");
						}

					}catch(Exception ex) {
						//JOptionPane.showMessageDialog(null, ex.getStackTrace());
						JOptionPane.showMessageDialog(null, "User of that ID Already Registered !");//
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              

				} else {
					JOptionPane.showMessageDialog(null, "Fills All fields Correctly  !");
				}

			}



		});


		b9.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent e) {


				if(tex1.getText().trim() != null &&!tex1.getText().trim().isEmpty()&&
						tex2.getText().trim() != null &&!tex2.getText().trim().isEmpty() &&
						tex34.getText().trim() != null &&!tex34.getText().trim().isEmpty() 

						){
					String code=tex1.getText().toUpperCase().trim();
					String subject=tex2.getText().toUpperCase().trim();
					String name=tex34.getText().toUpperCase().trim();


					try {



						String sq="insert into Subject_O(sid,sname,fname) values (?,?,?)";
						PreparedStatement ps=con.prepareStatement(sq);
						ps.setString(1,code);
						ps.setString(2, subject);
						ps.setString(3, name);
						ps.execute();

						t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();t5.removeAllItems();t15.removeAllItems();
						combo();

						String s=String.format("%s   %s",subject ,"Added Successfully !");
						JOptionPane.showMessageDialog(b1, s);

						table();





					}catch(Exception ex) {
						//JOptionPane.showMessageDialog(null, ex.getStackTrace());
						JOptionPane.showMessageDialog(null, "User of that ID Already Registered !");//
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              


				} else {
					JOptionPane.showMessageDialog(null, "Fills All fields Correctly  !");
				}

			}



		});


		b24.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent e) {


				if(te11.getText().trim() != null &&!te11.getText().trim().isEmpty()&&
						te12.getText().trim() != null &&!te12.getText().trim().isEmpty() &&
						tex36.getText().trim() != null &&!tex36.getText().trim().isEmpty() 

						){
					String code=te11.getText().toUpperCase().trim();
					String subject=te12.getText().toUpperCase().trim();
					String name=tex36.getText().toUpperCase().trim();


					try {



						String sq="insert into Subject_A(sid,sname,fname) values (?,?,?)";
						PreparedStatement ps=con.prepareStatement(sq);
						ps.setString(1,code);
						ps.setString(2, subject);
						ps.setString(3, name);
						ps.execute();

						String s=String.format("%s   %s",subject ,"Added Successfully !");
						JOptionPane.showMessageDialog(b1, s);
						//te11.setText("");te12.setText("");tex36.setText("");
						table();




					}catch(Exception ex) {
						//JOptionPane.showMessageDialog(null, ex.getStackTrace());
						JOptionPane.showMessageDialog(null, "User of that ID Already Registered !");//
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              


				} else {
					JOptionPane.showMessageDialog(null, "Fills All fields Correctly  !");
				}

			}



		});


		b16.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent e) {


				if(tex5.getText().trim() != null &&!tex5.getText().trim().isEmpty()&&
						tex6.getText().trim() != null &&!tex6.getText().trim().isEmpty() &&
						tex32.getText().trim() != null &&!tex32.getText().trim().isEmpty() 

						){
					String code=tex5.getText().toUpperCase().trim();
					String exam=tex6.getText().toUpperCase().trim();
					String per=tex32.getText().trim();
					Double p=Double.parseDouble(per);


					try {


						String sq="insert into Exam(eid,ename,percentage) values (?,?,?)";
						PreparedStatement ps=con.prepareStatement(sq);
						ps.setString(1,code);
						ps.setString(2, exam);
						ps.setDouble(3,p );
						ps.execute();

						t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();
						combo();

						String s=String.format("%s   %s",exam ,"Added Successfully !");
						JOptionPane.showMessageDialog(b1, s);

						table();
						tex6.setText("");tex5.setText("");tex32.setText("");



					}catch(Exception ex) {
						JOptionPane.showMessageDialog(null, ex.getStackTrace());
						JOptionPane.showMessageDialog(null, "Exam of that ID Already Registered !");//
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              

				} else {
					JOptionPane.showMessageDialog(null, "Fills All fields Correctly  !");
				}

			}



		});




		b30.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent e) {


				if(tex9.getText().trim() != null &&!tex9.getText().trim().isEmpty()&&
						tex10.getText().trim() != null &&!tex10.getText().trim().isEmpty() 

						){
					String code=tex9.getText().toUpperCase().trim();
					String term=tex10.getText().toUpperCase().trim();


					try {



						String sq="insert into Term(tid,tname) values (?,?)";
						PreparedStatement ps=con.prepareStatement(sq);
						ps.setString(1,code);
						ps.setString(2, term);
						ps.execute();

						String s=String.format("%s   %s",term ,"Added Successfully !");
						JOptionPane.showMessageDialog(b1, s);
						t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();
						combo();


						table();
						tex9.setText("");tex10.setText("");



					}catch(Exception ex) {
						//JOptionPane.showMessageDialog(null, ex.getStackTrace());
						JOptionPane.showMessageDialog(null, "Term of that ID Already Registered !");//
					}  finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
			              

				} else {
					JOptionPane.showMessageDialog(null, "Fills All fields Correctly  !");
				}

			}



		});


		b3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {


				if(t0.getText().trim() != null &&!t0.getText().trim().isEmpty()&&
						t1.getText().trim() != null &&!t1.getText().trim().isEmpty() && t2.getText() != null &&!t2.getText().trim().isEmpty() &&
						t3.getText().trim() != null &&!t3.getText().trim().isEmpty()
						&&!((String) t4.getSelectedItem()).trim().isEmpty() 
						&& 	t5.getSelectedItem() != null &&!((String) t5.getSelectedItem()).trim().isEmpty()
						&& 	t6.getSelectedItem() != null &&!((String) t6.getSelectedItem()).trim().isEmpty()
						){

					String fn=t0.getText();t10.setText(fn.trim());
					String ln=t1.getText();t11.setText(ln.trim());
					String user=t2.getText();t12.setText(user.trim());
					String pass=t3.getText();t13.setText(pass.trim());
					String level=t4.getSelectedItem().toString();t14.setSelectedItem(level);
					String subject=t5.getSelectedItem().toString();t15.setSelectedItem(subject);
					String cla=t6.getSelectedItem().toString();t16.setSelectedItem(cla);




					int result = JOptionPane.showConfirmDialog(null, p11, "Update Account",
							JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

					if(t10.getText().trim() != null &&!t10.getText().trim().isEmpty()&&
							t11.getText().trim() != null &&!t11.getText().trim().isEmpty() && t12.getText() != null &&!t12.getText().trim().isEmpty() &&
							t13.getText().trim() != null &&!t13.getText().trim().isEmpty()
							&&!((String) t14.getSelectedItem()).trim().isEmpty() 
							&& 	t15.getSelectedItem() != null &&!((String) t15.getSelectedItem()).trim().isEmpty()
							&& 	t16.getSelectedItem() != null &&!((String) t16.getSelectedItem()).trim().isEmpty()
							){
						if(t10.getText().matches("^[\\p{L} .'-]+$") && t11.getText().matches("^[\\p{L} .'-]+$")) {


							if( result==JOptionPane.OK_OPTION) {

								try {
									

									String sql="update  Account set FirstName='"+(t10.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  LastName='"+(t11.getText()).replaceAll("'", "''").toUpperCase().trim()+"' ,Username='"+(t12.getText()).replaceAll("'", "''").trim()+"',Password='"+t13.getText().trim()+"',Level='"+t14.getSelectedItem().toString()+"',Subject='"+t15.getSelectedItem().toString()+"',Class='"+t16.getSelectedItem().toString()+"' where Username='"+t2.getText()+"' ";
									ps=con.prepareStatement(sql);
									ps.execute();

									String s=String.format("%s   %s",fn ,"Updated Successfully !");
									JOptionPane.showMessageDialog(b1, s);
									t0.setText("");t1.setText("");t2.setText("");t3.setText("");t4.setSelectedItem(null);t5.setSelectedItem(null);t6.setSelectedItem(null);

									table();


								}catch(Exception ex) {
									JOptionPane.showMessageDialog(null,ex.getMessage());
									System.out.print(ex.getStackTrace());
								}  finally {
						            try {
						                if (rs != null) {
						                    rs.close();
						                }
						                if (ps != null) {
						                    ps.close();
						                }
						                } catch (Exception ex) {
						                // do something
						                }
						            }
						              
							}else {}
						}else {
							JOptionPane.showMessageDialog(null, "Enter Valid Names !");
						}
					}else {
						JOptionPane.showMessageDialog(null, "Fills all Fields Correctly  !");
					}

				}else {
					JOptionPane.showMessageDialog(null, "Select User from the table !");
				}


			}


		});
		b11.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {


				if(tex1.getText().trim() != null &&!tex1.getText().trim().isEmpty()&&
						tex2.getText().trim() != null &&!tex2.getText().trim().isEmpty() &&
						tex34.getText().trim() != null &&!tex34.getText().trim().isEmpty() 

						){

					String code=tex1.getText().trim();tex3.setText(code);
					String subject=tex2.getText().trim();tex4.setText(subject);
					String name=tex34.getText().trim();tex35.setText(name);


					int result = JOptionPane.showConfirmDialog(null, p30, "Update Subject",
							JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

					if(tex3.getText().trim() != null &&!tex3.getText().trim().isEmpty()&&
							tex4.getText().trim() != null &&!tex4.getText().trim().isEmpty() &&
							tex35.getText().trim() != null &&!tex35.getText().trim().isEmpty() 
							){


						if( result==JOptionPane.OK_OPTION) {

							try {

								String sql="update Subject_O set sid='"+(tex3.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  Sname='"+(tex4.getText()).replaceAll("'", "''").toUpperCase().trim()+"',fname='"+(tex35.getText()).replaceAll("'", "''").toUpperCase().trim()+"' where sid='"+tex1.getText().trim()+"' ";
								ps=con.prepareStatement(sql);
								ps.execute();

								t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();t5.removeAllItems();t15.removeAllItems();

								String s=String.format("%s   %s","","Updated Successfully !");
								JOptionPane.showMessageDialog(b1, s);
								tex1.setText("");tex2.setText("");tex34.setText("");



								combo();
								table();
								//listen();



							}catch(Exception ex) {
								JOptionPane.showMessageDialog(null,ex.getStackTrace());
							}  finally {
					            try {
					                if (rs != null) {
					                    rs.close();
					                }
					                if (ps != null) {
					                    ps.close();
					                }
					                } catch (Exception ex) {
					                // do something
					                }
					            }
					              

						}else {}

					}else {
						JOptionPane.showMessageDialog(null, "Fills all Fields Correctly  !");
					}

				}else {
					JOptionPane.showMessageDialog(null, "Select User from the table !");
				}


			}


		});



		b26.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {


				if(te11.getText().trim() != null &&!te11.getText().trim().isEmpty()&&
						te12.getText().trim() != null &&!te11.getText().trim().isEmpty() &&
						tex36.getText().trim() != null &&!tex36.getText().trim().isEmpty() 

						){

					String code=te11.getText().trim();te13.setText(code);
					String subject=te12.getText().trim();te14.setText(subject);
					String name=tex36.getText().trim();tex37.setText(name);


					int result = JOptionPane.showConfirmDialog(null, p48, "Update Subject",
							JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

					if(te13.getText().trim() != null &&!te13.getText().trim().isEmpty()&&
							te14.getText().trim() != null &&!te14.getText().trim().isEmpty() &&
							tex37.getText().trim() != null &&!tex37.getText().trim().isEmpty() 
							){


						if( result==JOptionPane.OK_OPTION) {

							try {

								String sql="update Subject_A set sid='"+(te13.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  Sname='"+(te14.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  fname='"+(tex37.getText()).replaceAll("'", "''").toUpperCase().trim()+"' where sid='"+te11.getText().trim()+"' ";
								ps=con.prepareStatement(sql);
								ps.execute();

								String s=String.format("%s   %s","","Updated Successfully !");
								JOptionPane.showMessageDialog(b1, s);
								te11.setText("");te12.setText("");tex36.setText("");

								table();


							}catch(Exception ex) {
								JOptionPane.showMessageDialog(null,ex.getStackTrace());
							}  finally {
					            try {
					                if (rs != null) {
					                    rs.close();
					                }
					                if (ps != null) {
					                    ps.close();
					                }
					                } catch (Exception ex) {
					                // do something
					                }
					            }
					              
						}else {}

					}else {
						JOptionPane.showMessageDialog(null, "Fills all Fields Correctly  !");
					}

				}else {
					JOptionPane.showMessageDialog(null, "Select User from the table !");
				}


			}


		});

		b18.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {


				if(tex5.getText().trim() != null &&!tex5.getText().trim().isEmpty()


						){

					String code=tex5.getText().trim();tex7.setText(code);
					String exam=tex6.getText().trim();tex8.setText(exam);
					String percentage=tex32.getText().trim();tex33.setText(percentage);


					int result = JOptionPane.showConfirmDialog(null, p41, "Update Exam",
							JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

					if(tex7.getText().trim() != null &&!tex7.getText().trim().isEmpty()&&
							tex8.getText().trim() != null &&!tex8.getText().trim().isEmpty() &&
							tex33.getText().trim() != null &&!tex33.getText().trim().isEmpty() 
							){


						if( result==JOptionPane.OK_OPTION) {

							try {

								String sql="update Exam set eid='"+(tex7.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  ename='"+(tex8.getText()).replaceAll("'", "''").toUpperCase().trim()+"',percentage='"+tex33.getText().trim()+"' where eid='"+tex5.getText().trim()+"' ";
								ps=con.prepareStatement(sql);
								ps.execute();

								String s=String.format("%s   %s","","Updated Successfully !");
								JOptionPane.showMessageDialog(b1, s);
								tex5.setText("");tex6.setText("");tex32.setText("");

								table();
								t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();
								combo();


							}catch(Exception ex) {
								JOptionPane.showMessageDialog(null,ex.getStackTrace());
							}  finally {
					            try {
					                if (rs != null) {
					                    rs.close();
					                }
					                if (ps != null) {
					                    ps.close();
					                }
					                } catch (Exception ex) {
					                // do something
					                }
					            }
					              
						}else {}

					}else {
						JOptionPane.showMessageDialog(null, "Fills all Fields Correctly  !");
					}

				}else {
					JOptionPane.showMessageDialog(null, "Select User from the table !");
				}


			}


		});


		b32.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {


				if(tex9.getText().trim() != null &&!tex9.getText().trim().isEmpty()


						){

					String code=tex9.getText().trim();tex11.setText(code);
					String term=tex10.getText().trim();tex12.setText(term);


					int result = JOptionPane.showConfirmDialog(null, p53, "Update Term",
							JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

					if(tex11.getText().trim() != null &&!tex11.getText().trim().isEmpty()&&
							tex12.getText().trim() != null &&!tex12.getText().trim().isEmpty() 
							){


						if( result==JOptionPane.OK_OPTION) {

							try {

								String sql="update Term set tid='"+(tex11.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  tname='"+(tex12.getText()).replaceAll("'", "''").toUpperCase().trim()+"' where tid='"+tex9.getText().trim()+"' ";
								ps=con.prepareStatement(sql);
								ps.execute();

								String s=String.format("%s   %s","","Updated Successfully !");
								JOptionPane.showMessageDialog(b1, s);
								tex9.setText("");tex10.setText("");

								table();
								t28.removeAllItems();t29.removeAllItems();t30.removeAllItems();
								combo();



							}catch(Exception ex) {
								JOptionPane.showMessageDialog(null,ex.getStackTrace());
							}  finally {
					            try {
					                if (rs != null) {
					                    rs.close();
					                }
					                if (ps != null) {
					                    ps.close();
					                }
					                } catch (Exception ex) {
					                // do something
					                }
					            }
					              
						}else {}

					}else {
						JOptionPane.showMessageDialog(null, "Fills all Fields Correctly  !");
					}

				}else {
					JOptionPane.showMessageDialog(null, "Select User from the table !");
				}


			}


		});
		b7.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				if(ta1.getText().trim() != null &&!ta1.getText().trim().isEmpty()&&
						ta2.getText().trim() != null &&!ta2.getText().trim().isEmpty() && 
						ta4.getText().trim() != null &&!ta4.getText().trim().isEmpty()
						&& ta6.getSelectedItem() != null&&!((String) ta6.getSelectedItem()).trim().isEmpty() 
						&& 	ta7.getSelectedItem() != null &&!((String) ta7.getSelectedItem()).trim().isEmpty()
						){

					String id=ta1.getText().trim();ta11.setText(id);
					String fn=ta2.getText().trim();ta12.setText(fn);
					String mn=ta3.getText().trim();ta13.setText(mn);
					String ln=ta4.getText().trim();ta14.setText(ln);
					String ph=ta5.getText().trim();ta15.setText(ph);
					String gender=ta6.getSelectedItem().toString();ta16.setSelectedItem(gender);
					String clas=ta7.getSelectedItem().toString();ta17.setSelectedItem(clas);



					int result = JOptionPane.showConfirmDialog(null, p20, "Update Account",
							JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

					if(ta11.getText().trim() != null &&!ta11.getText().trim().isEmpty()&&
							ta12.getText().trim() != null &&!ta12.getText().trim().isEmpty() && 
							ta14.getText().trim() != null &&!ta14.getText().trim().isEmpty()
							&& ta16.getSelectedItem() != null&&!((String) ta16.getSelectedItem()).trim().isEmpty() 
							&& 	ta17.getSelectedItem() != null &&!((String) ta17.getSelectedItem()).trim().isEmpty()
							){
						if(ta12.getText().matches("^[\\p{L} .'-]+$") && ta14.getText().matches("^[\\p{L} .'-]+$")) {


							if( result==JOptionPane.OK_OPTION) {

								try {

									String sql="update  Ouser set id='"+ta11.getText()+"',fname='"+(ta12.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  mname='"+(ta13.getText()).replaceAll("'", "''").toUpperCase().trim()+"',  lname='"+(ta14.getText()).replaceAll("'", "''").toUpperCase().trim()+"' ,phone='"+(ta15.getText().trim())+"',gender='"+ta16.getSelectedItem().toString()+"',class='"+ta17.getSelectedItem().toString()+"' where id='"+ta1.getText().trim()+"' ";
									ps=con.prepareStatement(sql);
									ps.execute();

									String s=String.format("%s   %s",fn ,"Updated Successfully !");
									JOptionPane.showMessageDialog(b1, s);
								
									ta1.setText("");ta2.setText("");ta3.setText("");ta4.setText("");ta5.setText("");ta6.setSelectedItem(null);ta7.setSelectedItem(null);

									table();


								}catch(Exception ex) {
									JOptionPane.showMessageDialog(null,ex.getStackTrace());
								}  finally {
						            try {
						                if (rs != null) {
						                    rs.close();
						                }
						                if (ps != null) {
						                    ps.close();
						                }if (con != null) {
						                   
						                }
						                } catch (Exception ex) {
						                // do something
						                }
						            }
						              
							}else {}
						}else {
							JOptionPane.showMessageDialog(null, "Enter Valid Names !");
						}
					}else {
						JOptionPane.showMessageDialog(null, "Fills all Fields Correctly  !");
					}

				}else {
					JOptionPane.showMessageDialog(null, "Select User from the table !");
				}


			}


		});
	}

	private void table() {

		
		
		try {
              

			String sql="Select FirstName as 'FIRSTNAME',LastName as 'LASTNAME',Username as 'USERNAME',Password as 'PASSWORD',Level as 'LEVEL',Subject as 'SUBJECT',Class as 'CLASS' from Account";
			ps=con.prepareStatement(sql);
			rs=ps.executeQuery();
			table.setModel(DbUtils.resultSetToTableModel(rs));
			table.setFont(new Font("serif",Font.PLAIN,14));
			table.setForeground(new Color(0,0,139));




			table.addMouseListener(new MouseAdapter(){
				public void mouseClicked(MouseEvent argo)	{
					try{
						int row=table.getSelectedRow();

						t0.setText(table.getModel().getValueAt(row,0).toString());
						t1.setText(table.getModel().getValueAt(row,1).toString());
						t2.setText(table.getModel().getValueAt(row,2).toString());
						t3.setText(table.getModel().getValueAt(row,3).toString());
						t4.setSelectedItem(table.getModel().getValueAt(row,4).toString());
						t5.setSelectedItem(table.getModel().getValueAt(row,5).toString());
						t6.setSelectedItem(table.getModel().getValueAt(row,6).toString());

					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}});
			table.addKeyListener(new KeyAdapter(){
				public void keyReleased(KeyEvent e)	{

					try{
						int row=table.getSelectedRow();

						t0.setText(table.getModel().getValueAt(row,0).toString());
						t1.setText(table.getModel().getValueAt(row,1).toString());
						t2.setText(table.getModel().getValueAt(row,2).toString());
						t3.setText(table.getModel().getValueAt(row,3).toString());
						t4.setSelectedItem(table.getModel().getValueAt(row,4).toString());
						t5.setSelectedItem(table.getModel().getValueAt(row,5).toString());
						t6.setSelectedItem(table.getModel().getValueAt(row,6).toString());

						if(e.getKeyCode()==KeyEvent.VK_ENTER);


					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}
					 finally {
				            try {
				            if (rs != null) {
				                rs.close();
				            }
				            if (ps != null) {
				                ps.close();
				            }
				            } catch (Exception ex) {
				            // do something
				            }
				        }
				          
				}

			});







			String sql1="Select id as 'STU_ID',fname as 'FIRSTNAME',mname as 'MIDDLENAME',lname as 'LASTNAME',phone as 'PHONE',gender as 'GENDER',class as 'CLASS' from Ouser order by class,gender ASC,fname ASC,lname ASC";
			ps=con.prepareStatement(sql1);
			rs=ps.executeQuery();
			table1.setModel(DbUtils.resultSetToTableModel(rs));
			table1.setFont(new Font("serif",Font.PLAIN,14));
			table1.setForeground(new Color(0,0,139));




			table1.addMouseListener(new MouseAdapter(){
				public void mouseClicked(MouseEvent argo)	{
					try{
						int row=table1.getSelectedRow();

						ta1.setText(table1.getModel().getValueAt(row,0).toString());
						ta2.setText(table1.getModel().getValueAt(row,1).toString());
						ta3.setText(table1.getModel().getValueAt(row,2).toString());
						ta4.setText(table1.getModel().getValueAt(row,3).toString());
						ta5.setText(table1.getModel().getValueAt(row,4).toString());
						ta6.setSelectedItem(table1.getModel().getValueAt(row,5).toString());
						ta7.setSelectedItem(table1.getModel().getValueAt(row,6).toString());

					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}});
			table1.addKeyListener(new KeyAdapter(){
				public void keyReleased(KeyEvent e)	{

					try{
						int row=table1.getSelectedRow();

						ta1.setText(table1.getModel().getValueAt(row,0).toString());
						ta2.setText(table1.getModel().getValueAt(row,1).toString());
						ta3.setText(table1.getModel().getValueAt(row,2).toString());
						ta4.setText(table1.getModel().getValueAt(row,3).toString());
						ta5.setText(table1.getModel().getValueAt(row,4).toString());
						ta6.setSelectedItem(table1.getModel().getValueAt(row,5).toString());
						ta7.setSelectedItem(table1.getModel().getValueAt(row,6).toString());
						if(e.getKeyCode()==KeyEvent.VK_ENTER);


					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
				}

			});

try {
	
	
}catch(Exception ex) {
	
	
}
			String sql12="Select sid as 'CODE',sname as 'CODE NAME',fname as 'FULL NAME' from Subject_O";
			ps=con.prepareStatement(sql12);
			rs=ps.executeQuery();
			table2.setModel(DbUtils.resultSetToTableModel(rs));
			table2.setFont(new Font("serif",Font.PLAIN,14));
			table2.setForeground(new Color(0,0,139));

			table2.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
			TableColumnModel colModel=table2.getColumnModel();
			colModel.getColumn(0).setPreferredWidth(2); 
			colModel.getColumn(1).setPreferredWidth(4); 
			colModel.getColumn(2).setPreferredWidth(200);

			DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
			centerRenderer.setHorizontalAlignment( JLabel.CENTER );

			DefaultTableCellRenderer rRenderer = new DefaultTableCellRenderer();
			rRenderer.setHorizontalAlignment( JLabel.LEFT );

			table2.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
			table2.getColumnModel().getColumn(1).setCellRenderer(rRenderer);
			table2.getColumnModel().getColumn(2).setCellRenderer( rRenderer);

			((DefaultTableCellRenderer) table2.getTableHeader().getDefaultRenderer())
			.setHorizontalAlignment(JLabel.CENTER);



			table2.addMouseListener(new MouseAdapter(){
				public void mouseClicked(MouseEvent argo)	{
					try{
						int row=table2.getSelectedRow();

						tex1.setText(table2.getModel().getValueAt(row,0).toString());
						tex2.setText(table2.getModel().getValueAt(row,1).toString());
						tex34.setText(table2.getModel().getValueAt(row,2).toString());
					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}});


			table2.addKeyListener(new KeyAdapter(){
				public void keyReleased(KeyEvent e)	{

					try{
						int row=table2.getSelectedRow();

						tex1.setText(table2.getModel().getValueAt(row,0).toString());
						tex2.setText(table2.getModel().getValueAt(row,1).toString());
						tex34.setText(table2.getModel().getValueAt(row,2).toString());
					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }
				}

			});



			String sql13="Select eid as 'EXAM ID',ename as 'EXAM NAME',percentage as 'PERCENTAGE' from Exam";
			ps=con.prepareStatement(sql13);
			rs=ps.executeQuery();
			table3.setModel(DbUtils.resultSetToTableModel(rs));
			table3.setFont(new Font("serif",Font.PLAIN,14));
			table3.setForeground(new Color(0,0,139));

			table3.addMouseListener(new MouseAdapter(){
				public void mouseClicked(MouseEvent argo)	{
					try{
						int row=table3.getSelectedRow();

						tex5.setText(table3.getModel().getValueAt(row,0).toString());
						tex6.setText(table3.getModel().getValueAt(row,1).toString());
						tex32.setText(table3.getModel().getValueAt(row,2).toString());

					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}});


			table3.addKeyListener(new KeyAdapter(){
				public void keyReleased(KeyEvent e)	{

					try{
						int row=table3.getSelectedRow();

						tex5.setText(table3.getModel().getValueAt(row,0).toString());
						tex6.setText(table3.getModel().getValueAt(row,1).toString());
						tex32.setText(table3.getModel().getValueAt(row,2).toString());

						if(e.getKeyCode()==KeyEvent.VK_ENTER);


					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}

			});

			String sqll="Select sid as 'CODE',sname as 'CODE NAME',fname as 'FULL NAME' from Subject_A";
			ps=con.prepareStatement(sqll);
			rs=ps.executeQuery();
			table5.setModel(DbUtils.resultSetToTableModel(rs));
			table5.setFont(new Font("serif",Font.PLAIN,14));
			table5.setForeground(new Color(0,0,139));

			table5.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
			TableColumnModel colModel1=table5.getColumnModel();
			colModel1.getColumn(0).setPreferredWidth(2); 
			colModel1.getColumn(1).setPreferredWidth(4); 
			colModel1.getColumn(2).setPreferredWidth(200);


			centerRenderer.setHorizontalAlignment( JLabel.CENTER );


			table5.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
			table5.getColumnModel().getColumn(1).setCellRenderer(rRenderer );
			table5.getColumnModel().getColumn(2).setCellRenderer( rRenderer);

			((DefaultTableCellRenderer) table5.getTableHeader().getDefaultRenderer())
			.setHorizontalAlignment(JLabel.CENTER);


			table5.addMouseListener(new MouseAdapter(){
				public void mouseClicked(MouseEvent argo)	{
					try{
						int row=table5.getSelectedRow();

						te11.setText(table5.getModel().getValueAt(row,0).toString());
						te12.setText(table5.getModel().getValueAt(row,1).toString());
						tex36.setText(table5.getModel().getValueAt(row,2).toString());

					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}});


			table5.addKeyListener(new KeyAdapter(){
				public void keyReleased(KeyEvent e)	{

					try{
						int row=table5.getSelectedRow();

						te11.setText(table5.getModel().getValueAt(row,0).toString());
						te12.setText(table5.getModel().getValueAt(row,1).toString());
						tex36.setText(table5.getModel().getValueAt(row,2).toString());

					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}

			});


			String sqlll="Select tid as 'TERM ID',tname as 'TERM NAME' from Term";
			ps=con.prepareStatement(sqlll);
			rs=ps.executeQuery();
			table4.setModel(DbUtils.resultSetToTableModel(rs));
			table4.setFont(new Font("serif",Font.PLAIN,14));
			table4.setForeground(new Color(0,0,139));

			table4.addMouseListener(new MouseAdapter(){
				public void mouseClicked(MouseEvent argo)	{
					try{
						int row=table4.getSelectedRow();

						tex9.setText(table4.getModel().getValueAt(row,0).toString());
						tex10.setText(table4.getModel().getValueAt(row,1).toString());

					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}});


			table4.addKeyListener(new KeyAdapter(){
				public void keyReleased(KeyEvent e)	{

					try{
						int row=table4.getSelectedRow();

						tex9.setText(table4.getModel().getValueAt(row,0).toString());//tex5.setBackground(Color.red);
						tex10.setText(table4.getModel().getValueAt(row,1).toString());

						if(e.getKeyCode()==KeyEvent.VK_ENTER);


					}catch(Exception esss){
						JOptionPane.showMessageDialog(null, esss.getStackTrace());
					}finally {
			            try {
			                if (rs != null) {
			                    rs.close();
			                }
			                if (ps != null) {
			                    ps.close();
			                }
			                } catch (Exception ex) {
			                // do something
			                }
			            }

				}

			});




		}catch(Exception ex) {
			JOptionPane.showMessageDialog(null, ex.getStackTrace());
		}finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (ps != null) {
                    ps.close();
                }
                } catch (Exception ex) {
                // do something
                }
            }


	}

	private void bar(String user) {


		Icon alarm=new ImageIcon(this.getClass().getResource("/alarm.png"));
		Icon cale=new ImageIcon(this.getClass().getResource("/cale.png"));
		Icon ex=new ImageIcon(this.getClass().getResource("/exit.png"));
		Icon log=new ImageIcon(this.getClass().getResource("/log.png"));
		Icon r=new ImageIcon(this.getClass().getResource("/r.png"));
		Icon u=new ImageIcon(this.getClass().getResource("/us.png"));
		Icon ab=new ImageIcon(this.getClass().getResource("/ab.png"));
		Icon cc=new ImageIcon(this.getClass().getResource("/cc.png"));
		Icon cpp=new ImageIcon(this.getClass().getResource("/pa.png"));
		Icon dell=new ImageIcon(this.getClass().getResource("/dell.png"));
		Icon show=new ImageIcon(this.getClass().getResource("/show.png"));
		Icon pdf=new ImageIcon(this.getClass().getResource("/pdf.png"));
		Icon excel=new ImageIcon(this.getClass().getResource("/excel.png"));
		Icon lev=new ImageIcon(this.getClass().getResource("/level.png"));
		Icon ad=new ImageIcon(this.getClass().getResource("/advance.png"));
		Icon clear=new ImageIcon(this.getClass().getResource("/clear.png"));
		Icon pr=new ImageIcon(this.getClass().getResource("/pri.png"));
		//Icon arc=new ImageIcon(this.getClass().getResource("/arc.png"));



		JMenuBar bar=new JMenuBar();
		setJMenuBar(bar);

		JMenu file=new JMenu("File");
		bar.add(file);
		JMenu rep=new JMenu("Report");
		bar.add(rep);
		JMenu set=new JMenu("Setting");
		//bar.add(set);
		JMenu other=new  JMenu("Other");
		bar.add(other);
		JMenu att=new JMenu("Attendance Form");
		other.add(att);
		
		JMenuItem att_pdf=new JMenuItem("Pdf");
		att.add(att_pdf);
		
		JMenuItem att_exl=new JMenuItem("Excel");
		att.add(att_exl);
		
		JMenu help=new JMenu("Help");
		bar.add(help);
		JMenuItem about=new JMenuItem("About System");
		help.add(about);about.setIcon(ab);
		JMenuItem pri=new JMenuItem("Primary");
		//file.add(pri);pri.setIcon(pr);

		JMenuItem level=new JMenuItem("Form 5&6");
		//file.add(level);level.setIcon(ad);

		JMenu clas=new JMenu("Class Report");
		JMenuItem clas1=new JMenuItem("All");
		JMenuItem clas2=new JMenuItem("No Division");
		JMenuItem clas3=new JMenuItem("No Position");
		JMenuItem clas4=new JMenuItem("No Division & Position");
		
		JMenuItem term1=new JMenuItem("All");
		JMenuItem term2=new JMenuItem("No Division");
		JMenuItem term3=new JMenuItem("No Position");
		JMenuItem term4=new JMenuItem("No Division & Position");
		
		
		JMenu term=new JMenu("Term Report");
		

		JMenu stu=new JMenu("Student's Report");
		JMenuItem eng=new JMenuItem("Eng");
		JMenuItem kisw=new JMenuItem("Kisw");
		JMenuItem teng=new JMenuItem("Eng");
		JMenuItem tkisw=new JMenuItem("Kisw");
		
		
		
		rep.add(stu);stu.setIcon(show);
		JMenu examr=new JMenu("Exam Report");
		JMenu termr=new JMenu("Term Report");
		JMenuItem sub=new JMenuItem("Subject Report");
		
		stu.add(examr);stu.add(termr);
		examr.add(kisw);examr.add(eng);
		termr.add(tkisw);termr.add(teng);
		
		sub.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				

				try {
					
					
					
					String sqll = "select * from Grade_O";
					ps = con.prepareStatement(sqll);
					ResultSet rs5 = ps.executeQuery();

					Double g1 = 0.0, g2 = 0.0, g3 = 0.0, g4 = 0.0, g5 = 0.0, g6 = 0.0, g7 = 0.0, g8 = 0.0, g9 = 0.0,
							g10 = 0.0;
					g1 = rs5.getDouble("g1");
					g2 = rs5.getDouble("g2");
					g3 = rs5.getDouble("g3");
					g4 = rs5.getDouble("g4");
					g5 = rs5.getDouble("g5");
					g6 = rs5.getDouble("g6");
					g7 = rs5.getDouble("g7");
					g8 = rs5.getDouble("g8");
					g9 = rs5.getDouble("g9");
					g10 = rs5.getDouble("g10");
			
					
					
				
					int result = JOptionPane.showConfirmDialog(null,p60, "Select",
					        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
					if(result==JOptionPane.OK_OPTION) {
						
						String sql1="Select sid,fname from Subject_O where sname= '"+t48.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql1);
						ResultSet rs1=ps.executeQuery();

						String sql2="Select eid from Exam where ename= '"+t49.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql2);
						ResultSet rs2=ps.executeQuery();

						String sql3="Select tid from Term where tname= '"+t50.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sql3);
						ResultSet rs3=ps.executeQuery();
						

						String sql333="Select info from detail where id= '"+1+"' ";
						ps=con.prepareStatement(sql333);
						ResultSet rsm=ps.executeQuery();
						
						

						int year=Calendar.getInstance().get(Calendar.YEAR);

						String sqq ="select count(id) from Mark_O where sid = '"+rs1.getString("sid")+"' and tid='"+rs3.getString("tid")+"' and eid='"+rs2.getString("eid")+"' and year='"+t51.getSelectedItem().toString()+"' and class='"+t47.getSelectedItem().toString()+"'  ";
						ps=con.prepareStatement(sqq);
						rs=ps.executeQuery();
						int cou=Integer.parseInt(rs.getString("count(id)"));

                        if(cou>0) {
                        	
                        	
                        	String sql11 ="select * from Mark_O "
                        			+ "INNER JOIN Ouser ON Ouser.id = Mark_O.id "
                        			+ "where Mark_O.sid = '"+rs1.getString("sid")+"' and Mark_O.tid='"+rs3.getString("tid")+"' and Mark_O.eid='"+rs2.getString("eid")+"' and Mark_O.year='"+t51.getSelectedItem().toString()+"' and Mark_O.class='"+t47.getSelectedItem().toString()+"' ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC  ";
    						ps=con.prepareStatement(sql11);
    						rs=ps.executeQuery();
							
    					  
							PdfDocument pdf = new PdfDocument(
									new PdfWriter(t48.getSelectedItem().toString()+"~"+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf"));
						
							Document document = new Document(pdf, PageSize.A4);

							Table mudi = new Table(1);
								mudi.setWidth(520).setAutoLayout();
								
								Table mudi2 = new Table(1);
								mudi2.setWidth(520).setAutoLayout();
							//    mudi = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
							    
							    Table mudi1 = new Table(10);
							   mudi1.setWidth(520);
							
								ImageData data = ImageDataFactory.create("image/other.png");
								Image image = new Image(data);
								image.setAutoScale(true);
								image.setAutoScale(true);
								image.setBold();
								Cell c0 = new Cell().add(image);
								mudi.addCell(c0);
								PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_BOLD);
								PdfFont font1 = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);
							
				             	Paragraph para0 = new Paragraph(rsm.getString("info") + " SECONDARY SCHOOL");
				             	Paragraph para2=new Paragraph(box40.getSelectedItem().toString()+" ~ "+box43.getSelectedItem().toString());
				             	Paragraph para3=new Paragraph(box41.getSelectedItem().toString()+"  EXAM  ~  "+box42.getSelectedItem().toString());
				             	Paragraph para4=new Paragraph("SUBJECT: "+rs1.getString("fname"));
				             	Paragraph para5=new Paragraph("Total Student(s): "+cou);
				             	Paragraph para6=new Paragraph("FULL NAMES");
				             	Paragraph para7=new Paragraph("MARKS ");
				             	Paragraph para8=new Paragraph("GRADES");
				             	int a=0,b=0,c=0,d=0,f=0;
				             	
				             	
				             	Cell c1 = new Cell().add(para0).setTextAlignment(TextAlignment.CENTER).setFontSize(19).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
							
								c1 = new Cell().add(para3).setTextAlignment(TextAlignment.CENTER).setFontSize(15).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell().add(para2).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell().add(para4).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
							     
								c1 = new Cell().add(para5).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(100, 0,0)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell(1,6).add(para6).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,0));
								mudi1.addHeaderCell(c1);
								c1 = new Cell(1,2).add(para7).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,0));
								mudi1.addHeaderCell(c1);
								c1 = new Cell(1,2).add(para8).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,0));
								mudi1.addHeaderCell(c1);
								
								while(rs.next()) {
									
									Paragraph para9=new Paragraph(" "+rs.getString("fname")+"  "+rs.getString("mname")+"  "+rs.getString("lname")).setFont(font1);
					             	Paragraph para10=new Paragraph(rs.getString("mark"));
					             	Paragraph para11=new Paragraph(rs.getString("grade"));
					             	
					             	
					             	c1 = new Cell(1,6).add(para9).setTextAlignment(TextAlignment.LEFT).setFontSize(12).setBold()
											.setFontColor(new DeviceRgb(0, 0,0));
									mudi1.addHeaderCell(c1);
									c1 = new Cell(1,2).add(para10).setTextAlignment(TextAlignment.CENTER).setFontSize(12).setBold()
											.setFontColor(new DeviceRgb(0, 0,0));
									mudi1.addHeaderCell(c1);
									c1 = new Cell(1,2).add(para11).setTextAlignment(TextAlignment.CENTER).setFontSize(12).setBold()
											.setFontColor(new DeviceRgb(0, 0,0));
									mudi1.addHeaderCell(c1);
									

									if (rs.getString("grade").matches("A")) {
		   								a++;
		   							} else if (rs.getString("grade").matches("B")) {
		   							b++;
		   							} else if (rs.getString("grade").matches("C")) {
		   								c++;
		   							} else if (rs.getString("grade").matches("D")) {
		   					           d++;
		   							} else if (rs.getString("grade").matches("F")) {
		   							  f++;
		   							}
									
									
								}
								Paragraph pp=new Paragraph("A= "+a+"    B= "+b+"    C= "+c+"    D= "+d+"    F= "+f);
								c1 = new Cell(1,2).add(pp).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,100));
								mudi2.addHeaderCell(c1);
								
				                
			                document.add(mudi); 
			                document.add(mudi1); 
			                document.add(new Paragraph("\n"));
			                document.add(mudi2); 
							document.close();

							JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
							 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+t48.getSelectedItem().toString()+"~"+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf");
							
						
                        	
                        	
                        	
                        }else {
                        	JOptionPane.showMessageDialog(null, "No Data Present !");
                        }
			
			        }
				
				}catch(Exception ex) {
					JOptionPane.showMessageDialog(null, ex.getMessage());
				}   finally {
		            try {
		                if (rs != null) {
		                    rs.close();
		                }
		                if (ps != null) {
		                    ps.close();
		                }
		                } catch (Exception ex) {
		                // do something
		                }
		            }
		              

			
				
			}
	});
		
		att_pdf.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				try {
					
					
					String sql333="Select info from detail where id= '"+1+"' ";
					ps=con.prepareStatement(sql333);
					ResultSet rsm=ps.executeQuery();
					
					

					int result = JOptionPane.showConfirmDialog(null,pa8, "Select",
						        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
					

					String sql="Select count(id) from Ouser where Class='"+box40.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql);
					ResultSet rs1=ps.executeQuery();
					
					String sql1="Select * from Ouser where Class='"+box40.getSelectedItem().toString()+"'  ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC ";
					ps=con.prepareStatement(sql1);
				    rs=ps.executeQuery();
					
					int count=Integer.parseInt(rs1.getString("count(id)"));
				
					if(result==JOptionPane.OK_OPTION) {
						
						
						if(count>0)	{
							
						
							  
							PdfDocument pdf = new PdfDocument(
									new PdfWriter("Attendance "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf"));
						
							Document document = new Document(pdf, PageSize.A4);

							Table mudi = new Table(1);
								mudi.setWidth(520).setAutoLayout();
							//    mudi = new Table(UnitValue.createPercentArray(1)).useAllAvailableWidth();
							    
							    Table mudi1 = new Table(10);
							   mudi1.setWidth(520);
							
								ImageData data = ImageDataFactory.create("image/other.png");
								Image image = new Image(data);
								image.setAutoScale(true);
								image.setAutoScale(true);
								image.setBold();
								Cell c0 = new Cell().add(image);
								mudi.addCell(c0);
								PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_BOLD);
								PdfFont font1 = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);
								
				             	Paragraph  para1 = new Paragraph("ATTENDANCE FORM");
				             	
		             		  
				             	Paragraph para0 = new Paragraph(rsm.getString("info") + " SECONDARY SCHOOL");
				             	Paragraph para2=new Paragraph(box40.getSelectedItem().toString()+" ~ "+box43.getSelectedItem().toString());
				             	Paragraph para3=new Paragraph(box41.getSelectedItem().toString()+"  EXAM                                                                      "+box42.getSelectedItem().toString());
				             	Paragraph para4=new Paragraph("SUBJECT: ........................                                                           DATE: ..../..../ "+box43.getSelectedItem().toString());
				             	Paragraph para5=new Paragraph("Total Student(s): "+count);
				             	Paragraph para6=new Paragraph("FULL NAMES");
				             	Paragraph para7=new Paragraph("SIGNS ");
				             	Paragraph para8=new Paragraph("MARKS");
				             	
				             	
				             	Cell c1 = new Cell().add(para0).setTextAlignment(TextAlignment.CENTER).setFontSize(19).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell().add(para1).setTextAlignment(TextAlignment.CENTER).setFontSize(15).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell().add(para2).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell().add(para3).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell().add(para4).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 100, 255)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
							     
								c1 = new Cell().add(para5).setTextAlignment(TextAlignment.LEFT).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(100, 0,0)).setBorder(Border3D.NO_BORDER);
								mudi.addCell(c1);
								
								c1 = new Cell(1,6).add(para6).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,0));
								mudi1.addHeaderCell(c1);
								c1 = new Cell(1,2).add(para7).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,0));
								mudi1.addHeaderCell(c1);
								c1 = new Cell(1,2).add(para8).setTextAlignment(TextAlignment.CENTER).setFontSize(14).setBold()
										.setFontColor(new DeviceRgb(0, 0,0));
								mudi1.addHeaderCell(c1);
								
								while(rs.next()) {
									
									Paragraph para9=new Paragraph(" "+rs.getString("fname")+"  "+rs.getString("mname")+"  "+rs.getString("lname")).setFont(font1);
					             	Paragraph para10=new Paragraph("");
					             	Paragraph para11=new Paragraph("");
					             	
					             	
					             	c1 = new Cell(1,6).add(para9).setTextAlignment(TextAlignment.LEFT).setFontSize(12).setBold()
											.setFontColor(new DeviceRgb(0, 0,0));
									mudi1.addHeaderCell(c1);
									c1 = new Cell(1,2).add(para10).setTextAlignment(TextAlignment.CENTER).setFontSize(12).setBold()
											.setFontColor(new DeviceRgb(0, 0,0));
									mudi1.addHeaderCell(c1);
									c1 = new Cell(1,2).add(para11).setTextAlignment(TextAlignment.CENTER).setFontSize(12).setBold()
											.setFontColor(new DeviceRgb(0, 0,0));
									mudi1.addHeaderCell(c1);
								}
							     
				                
			                document.add(mudi); 
			                document.add(mudi1); 
							document.close();

							JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
							 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"Attendance "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".pdf");
							
						}else {
							
							JOptionPane.showMessageDialog(null, "No user with that Record !");
							
						}
						
					}
					
					
				}catch(Exception ex) {
					
					JOptionPane.showMessageDialog(null, ex.getStackTrace());
				}
			}
		});
		
		
		att_exl.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				try {
					
					
					

					int result = JOptionPane.showConfirmDialog(null,pa8, "Select",
						        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
					

					String sql="Select count(id) from Ouser where Class='"+box40.getSelectedItem().toString()+"'  ";
					ps=con.prepareStatement(sql);
					ResultSet rs1=ps.executeQuery();
					
					String sql1="Select * from Ouser where Class='"+box40.getSelectedItem().toString()+"'  ORDER BY Ouser.gender ASC,Ouser.fname ASC,Ouser.mname ASC,Ouser.lname ASC ";
					ps=con.prepareStatement(sql1);
				    rs=ps.executeQuery();
				    
				    String sql333="Select info from detail where id= '"+1+"' ";
					ps=con.prepareStatement(sql333);
					ResultSet rsm=ps.executeQuery();
					
					int count=Integer.parseInt(rs1.getString("count(id)"));
				
					if(result==JOptionPane.OK_OPTION) {
						
						
						if(count>0)	{
							
							try {
							
							 XSSFWorkbook workbook = new XSSFWorkbook(); 
						      XSSFSheet spreadsheet = workbook.createSheet("STUDENT'S REPORT");
							 XSSFRow row = spreadsheet.createRow(1);
						     XSSFCell cell = (XSSFCell) row.createCell((short) 1);
						     
						    
						      XSSFFont font = workbook.createFont();
						      font.setFontHeightInPoints((short) 20);
						      font.setFontName("VERDANA");
						      font.setBold(true);
						      XSSFCellStyle style = workbook.createCellStyle();
						      style.setFont(font);
						      
						      XSSFFont font11 = workbook.createFont();
						      font11.setFontHeightInPoints((short) 16);
						      font11.setFontName("VERDANA");
						      font11.setBold(false);
						      XSSFCellStyle style11 = workbook.createCellStyle();
						      style11.setFont(font11);
						      
						      
						      XSSFFont font22 = workbook.createFont();
						      font22.setFontHeightInPoints((short) 10);
						      font22.setFontName("VERDANA");
						      font22.setBold(true);
						      XSSFCellStyle style22 = workbook.createCellStyle();
						      style22.setFont(font22);
						     
						      row = spreadsheet.createRow(1);
						      cell = row.createCell(1);
						      cell.setCellValue(rsm.getString("info")+"  SECONDARY SCHOOL");
						      cell.setCellStyle(style);
						      
						      row = spreadsheet.createRow(2);
						      cell = row.createCell(1);
						      cell.setCellValue(""+box40.getSelectedItem().toString().replaceAll("'", "''")+"  "+box41.getSelectedItem().toString().replaceAll("'", "''")+"  "+box42.getSelectedItem().toString().replaceAll("'", "''")+"   "+box43.getSelectedItem().toString().replaceAll("'", "''"));
						      cell.setCellStyle(style11);
						      
						      
						      row = spreadsheet.createRow(3);
						      cell = row.createCell(1);
						      cell.setCellValue("SUBJECT: .........................."+"   Total Student(s):"+count);
						      cell.setCellStyle(style11);
						      
						      
						      row = spreadsheet.createRow(5);
						      cell = row.createCell(1);
						      cell.setCellValue("STU_ID");  cell.setCellStyle(style22);
						      cell = row.createCell(2);
						      cell.setCellValue("FULL NAME");  cell.setCellStyle(style22);
						      cell = row.createCell(3);
						      cell.setCellValue("MARKS");  cell.setCellStyle(style22);
						     
						      int i = 6;

						      while(rs.next()) {
						         row = spreadsheet.createRow(i);
						         cell = row.createCell(1);
						         cell.setCellValue(rs.getString("id")); 
						         cell = row.createCell(2);
						         cell.setCellValue(rs.getString("fname")+"  "+rs.getString("mname")+"  "+rs.getString("lname"));
						         cell = row.createCell(3);
						         cell.setCellValue("");
						        
						         i++;
						      }

						      JOptionPane.showMessageDialog(null, "Loading...Please Wait !");
						      FileOutputStream out = new FileOutputStream(new File("Attendance "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".xlsx"));
						      workbook.write(out);
						      Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"Attendance "+box40.getSelectedItem().toString().replaceAll("'", "''")+"~"+box41.getSelectedItem().toString().replaceAll("'", "''")+"~"+box42.getSelectedItem().toString().replaceAll("'", "''")+"~"+box43.getSelectedItem().toString().replaceAll("'", "''")+".xlsx");
						      out.close();   
							}catch(Exception ex) {
								JOptionPane.showMessageDialog(null, ex.getMessage());
							}
							
						}else {
							
							JOptionPane.showMessageDialog(null, "No user with that Record !");
							
						}
						
					}
					
						
				
				}catch(Exception ex) {
					
					JOptionPane.showMessageDialog(null, ex.getMessage());
				}
			}
		});
		
		
		
		teng.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
                
				value=teng.getText();
				Form_Term();
				
			}
			
		});
		
		tkisw.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
                
				value=tkisw.getText();
				Form_Term();
				
			}
			
		});
		
		term.add(term1);term.add(term2);term.add(term3);term.add(term4);
		
		rep.add(clas);rep.add(term);rep.add(sub);
		clas.add(clas1);
		clas.add(clas2);
		clas.add(clas3);
		clas.add(clas4);
		
		
		
		JMenuItem del=new JMenuItem("Delete Class");
		//file.add(del);del.setIcon(dell);
		JMenuItem up=new JMenuItem("Update Class");
		//file.add(up);up.setIcon(show);
		JMenuItem res=new JMenuItem("Resert Marks");
		//file.add(res);res.setIcon(clear);
		JMenuItem cp=new JMenuItem("Change Password");
		file.add(cp);
		cp.setIcon(cpp);

		JMenuItem delete=new JMenuItem("Update Information");
		//file.add(delete);//delete.setIcon(arc);

		JMenuItem logout=new JMenuItem("Logout");
		file.add(logout);logout.setIcon(log);


		JMenuItem grade=new JMenuItem("Update Grade");
		set.add(grade);

		JMenuItem resu=new JMenuItem("Create Archieve");
		set.add(resu);
		
		
		cp.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

           try {
        	   
        	      String p1=JOptionPane.showInputDialog(null, "Enter Current Username !", "Username", 1);
		    	  String p2=JOptionPane.showInputDialog(null, "Enter Current Password !", "Password", 1);
		    	  

		    	     String sql2 ="select count(Username) from Account where Password = '"+p2+"' and Username='"+p1+"'  ";
			    	 PreparedStatement pss=con.prepareStatement(sql2);
			    	 ResultSet rss=pss.executeQuery();
			    	 int count=Integer.parseInt(rss.getString("count(Username)"));
			    	 
			    	 
			    	 if(count>0) {
			    		 
			    		 String pass=JOptionPane.showInputDialog(null, "Enter New Password !", "Password", 1);
			    		 
			    		 String sql="Update Account set Password='"+pass+"'  where Username='"+p1+"'  ";
			    		 ps=con.prepareStatement(sql);
			    		 ps.execute();
			    		 table();
			    		 JOptionPane.showMessageDialog(null,"Password Changed Successfully !");
			    		 
			    		 
			    	 }else {
			    		 
			    		 JOptionPane.showMessageDialog(null, "Incorrect Username or Password.!   Try Again.....");
			    	 }
		    	 
        	   
        	   
           }catch(Exception ex) {
        	   
        	   JOptionPane.showMessageDialog(null, ex.getMessage());
           }
				
				
			}
		});
		
		
		
		up.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

           try {
        	   
        	      String p1=JOptionPane.showInputDialog(null, "Enter Current Username !", "Username", 1);
		    	  String p2=JOptionPane.showInputDialog(null, "Enter Current Password !", "Password", 1);
		    	  

		    	     String sql2 ="select count(Username) from Account where Password = '"+p2+"' and Username='"+p1+"'  ";
			    	 PreparedStatement pss=con.prepareStatement(sql2);
			    	 ResultSet rss=pss.executeQuery();
			    	 int count=Integer.parseInt(rss.getString("count(Username)"));
			    	 
			    		int result = JOptionPane.showConfirmDialog(null, p61, "Select ",
						        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
			    	 
			    	 if(count>0) {
			    		 
			    		 String sql="Update Ouser set class='"+box48.getSelectedItem().toString()+"'  where class='"+box47.getSelectedItem().toString()+"'  ";
			    		 ps=con.prepareStatement(sql);
			    		 ps.execute();
			    		 table();
			    		 JOptionPane.showMessageDialog(null,"Updated Successfully !");
			    		 
			    		 
			    	 }else {
			    		 
			    		 JOptionPane.showMessageDialog(null, "Incorrect Username or Password.!   Try Again.....");
			    	 }
		    	 
        	   
        	   
           }catch(Exception ex) {
        	   
        	   JOptionPane.showMessageDialog(null, ex.getMessage());
           }
				
				
			}
		});
		
		kisw.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				value=kisw.getText();
				Form_Report();
			}
			
		});
		
		eng.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				value=eng.getText();
				Form_Report();
			}
			
		});
		
		
		
		delete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
			
				try {
					
					String sql="Select info from detail where id= '"+1+"' ";
					ps=con.prepareStatement(sql);
					rs=ps.executeQuery();
					
					t56.setText(rs.getString("info"));
					
				    int result = JOptionPane.showConfirmDialog(null,p56, "Select",
				        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
				
				
				
				  if(result==JOptionPane.OK_OPTION) {
					  
					   String sql22="update  detail  set  info='"+t56.getText().toUpperCase()+"' where rowid= '"+1+"'  ";
					   ps=con.prepareStatement(sql22);
					   ps.execute();
					   JOptionPane.showMessageDialog(b1,"Updated Successfully !");
					  
					  
				  }}catch(Exception ex) {
					  
				  }
				
			}
			
	   });
		
		clas1.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				value=clas1.getText();
				Class_Report();
			}
			
		});
		
		
		clas2.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				value=clas2.getText();
				Class_Report();
			}
			
		});
		
		
		clas3.addActionListener(new ActionListener() {


			public void actionPerformed(ActionEvent arg0) {
				value=clas3.getText();
				Class_Report();
			}
			
		
			
		});
		
		
		clas4.addActionListener(new ActionListener() {
			


			public void actionPerformed(ActionEvent arg0) {
				value=clas4.getText();
				Class_Report();
			}
			
		
			
		});
		
		term1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
			value=term1.getText();
			Term_Report();
			
			}
		});
		
		term2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
			value=term2.getText();
			Term_Report();
			
			}
			
		});
		
		term3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
			value=term3.getText();
			Term_Report();
			
			}
			
			
		});
		
		term4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
			value=term4.getText();
			Term_Report();
			
			}
			
		});
		
		logout.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				dispose();

				Login l=new Login();
				l.setSize(620,330);
				l.setVisible(true);
				l.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				l.setResizable(false);
				l.setLocation(350,200);

        try {
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

			}


		});


		about.addActionListener(new ActionListener(){

			public void actionPerformed(ActionEvent arg0) {

				Icon at=new ImageIcon(this.getClass().getResource("/z.png"));
				JOptionPane.showMessageDialog(null, "\tSTUDENTӓ RESULT MANAGEMENT SYSTEM\n**************************************************\nThis Software was Designed and Created by\n MOHAMED YUSUPH.This is not a free Software \nand you are not allowed to re-distribute it without\n the prior permission of the developer\n  \nDeveloperӳ Contacts:\n************************\nPhone +255 778 939 544 / +255 675 785 592\nEmail: myusuph2@gmail.com\n \nCOPYRIGHT RESERVED ɲ018-2019", "About Software", 0, at);



			}});

		hash=new JLabel("                                                                                                " );
		bar.add(hash);
		//bar.add(sign);
		empty=new JLabel("                                                                                                 ");
		kappa=new JLabel("FORM  I-IV                                                                ");
		bar.add(empty);
		kappa.setForeground(Color.BLUE);kappa.setFont(new Font("Segoe Script",Font.BOLD+Font.HANGING_BASELINE,11));

		time=new JLabel();time.setForeground(Color.BLACK);time.setFont(new Font("serif",Font.BOLD+Font.PLAIN,12));
		date=new JLabel();date.setForeground(Color.BLACK);date.setFont(new Font("serif",Font.BOLD+Font.PLAIN,12));



		bar.add(kappa);
		bar.add(date);
		bar.add(empty);
		bar.add(time);


		Thread th=new Thread(){
			public void run(){
				for(;;){
					Calendar timer=Calendar.getInstance();
					timer.getTime();
					SimpleDateFormat df= new SimpleDateFormat("hh:mm:ss a");
					time.setText(df.format(timer.getTime()));time.setIcon(alarm);
					SimpleDateFormat dt=new SimpleDateFormat("E dd MMM ,  yyyy");
					date.setText(dt.format(timer.getTime()));date.setIcon(cale);


					try {
						sleep(1000);
					} catch (InterruptedException e) {

					}
				}
			}};

			th.start();

	}
}
